// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Tue May  5 08:29:54 2020
// ----------------------------------------------------------------------------
`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 12
`define MEMORY_CONTROLLER_TAG_SIZE 9
// This directory contains the memory initialization files generated by LegUp.
// This relative path is used by ModelSim and FPGA synthesis tool.
`define MEM_INIT_DIR "../mem_init/"
// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX1 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcX1_a {`TAG_g_main_opcX1, 23'd0}
// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX2 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcX2_a {`TAG_g_main_opcX2, 23'd0}
// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
`define TAG_g_main_opcX3 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcX3_a {`TAG_g_main_opcX3, 23'd0}
// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY0 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcY0_a {`TAG_g_main_opcY0, 23'd0}
// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcY1_a {`TAG_g_main_opcY1, 23'd0}
// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY2 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcY2_a {`TAG_g_main_opcY2, 23'd0}
// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY3 `MEMORY_CONTROLLER_TAG_SIZE'd5
`define TAG_g_main_opcY3_a {`TAG_g_main_opcY3, 23'd0}

`timescale 1 ns / 1 ns
module top
(
	clk,
	reset,
	start,
	finish,
	return_val
);

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
reg  main_inst_clk;
reg  main_inst_reset;
reg  main_inst_start;
wire  main_inst_finish;
wire [31:0] main_inst_return_val;
wire  main_inst_memory_controller_1_write_enable_a;
wire [63:0] main_inst_memory_controller_1_in_a;
wire  main_inst_memory_controller_1_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_a;
wire [1:0] main_inst_memory_controller_1_size_a;
reg [63:0] main_inst_memory_controller_1_out_a;
wire  main_inst_memory_controller_1_write_enable_b;
wire [63:0] main_inst_memory_controller_1_in_b;
wire  main_inst_memory_controller_1_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_b;
wire [1:0] main_inst_memory_controller_1_size_b;
reg [63:0] main_inst_memory_controller_1_out_b;
wire  main_inst_memory_controller_0_write_enable_a;
wire [63:0] main_inst_memory_controller_0_in_a;
wire  main_inst_memory_controller_0_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_a;
wire [1:0] main_inst_memory_controller_0_size_a;
reg [63:0] main_inst_memory_controller_0_out_a;
wire  main_inst_memory_controller_0_write_enable_b;
wire [63:0] main_inst_memory_controller_0_in_b;
wire  main_inst_memory_controller_0_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_b;
wire [1:0] main_inst_memory_controller_0_size_b;
reg [63:0] main_inst_memory_controller_0_out_b;
reg  main_inst_finish_reg;
reg [31:0] main_inst_return_val_reg;
reg  memory_controller_1_inst_clk;
wire  memory_controller_1_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_a;
reg  memory_controller_1_inst_memory_controller_enable_a;
reg [1:0] memory_controller_1_inst_memory_controller_size_a;
reg  memory_controller_1_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_1_inst_memory_controller_in_a;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_b;
reg  memory_controller_1_inst_memory_controller_enable_b;
reg [1:0] memory_controller_1_inst_memory_controller_size_b;
reg  memory_controller_1_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_1_inst_memory_controller_in_b;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_b;
reg  memory_controller_0_inst_clk;
wire  memory_controller_0_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_a;
reg  memory_controller_0_inst_memory_controller_enable_a;
reg [1:0] memory_controller_0_inst_memory_controller_size_a;
reg  memory_controller_0_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_0_inst_memory_controller_in_a;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_b;
reg  memory_controller_0_inst_memory_controller_enable_b;
reg [1:0] memory_controller_0_inst_memory_controller_size_b;
reg  memory_controller_0_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_0_inst_memory_controller_in_b;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_b;


main main_inst (
	.clk (main_inst_clk),
	.reset (main_inst_reset),
	.start (main_inst_start),
	.finish (main_inst_finish),
	.return_val (main_inst_return_val),
	.memory_controller_1_write_enable_a (main_inst_memory_controller_1_write_enable_a),
	.memory_controller_1_in_a (main_inst_memory_controller_1_in_a),
	.memory_controller_1_enable_a (main_inst_memory_controller_1_enable_a),
	.memory_controller_1_address_a (main_inst_memory_controller_1_address_a),
	.memory_controller_1_size_a (main_inst_memory_controller_1_size_a),
	.memory_controller_1_out_a (main_inst_memory_controller_1_out_a),
	.memory_controller_1_write_enable_b (main_inst_memory_controller_1_write_enable_b),
	.memory_controller_1_in_b (main_inst_memory_controller_1_in_b),
	.memory_controller_1_enable_b (main_inst_memory_controller_1_enable_b),
	.memory_controller_1_address_b (main_inst_memory_controller_1_address_b),
	.memory_controller_1_size_b (main_inst_memory_controller_1_size_b),
	.memory_controller_1_out_b (main_inst_memory_controller_1_out_b),
	.memory_controller_0_write_enable_a (main_inst_memory_controller_0_write_enable_a),
	.memory_controller_0_in_a (main_inst_memory_controller_0_in_a),
	.memory_controller_0_enable_a (main_inst_memory_controller_0_enable_a),
	.memory_controller_0_address_a (main_inst_memory_controller_0_address_a),
	.memory_controller_0_size_a (main_inst_memory_controller_0_size_a),
	.memory_controller_0_out_a (main_inst_memory_controller_0_out_a),
	.memory_controller_0_write_enable_b (main_inst_memory_controller_0_write_enable_b),
	.memory_controller_0_in_b (main_inst_memory_controller_0_in_b),
	.memory_controller_0_enable_b (main_inst_memory_controller_0_enable_b),
	.memory_controller_0_address_b (main_inst_memory_controller_0_address_b),
	.memory_controller_0_size_b (main_inst_memory_controller_0_size_b),
	.memory_controller_0_out_b (main_inst_memory_controller_0_out_b)
);



memory_controller_1 memory_controller_1_inst (
	.clk (memory_controller_1_inst_clk),
	.memory_controller_waitrequest (memory_controller_1_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_1_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_1_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_1_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_1_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_1_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_1_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_1_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_1_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_1_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_1_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_1_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_1_inst_memory_controller_out_reg_b)
);



memory_controller_0 memory_controller_0_inst (
	.clk (memory_controller_0_inst_clk),
	.memory_controller_waitrequest (memory_controller_0_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_0_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_0_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_0_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_0_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_0_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_0_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_0_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_0_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_0_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_0_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_0_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_0_inst_memory_controller_out_reg_b)
);



always @(*) begin
	main_inst_clk = clk;
end
always @(*) begin
	main_inst_reset = reset;
end
always @(*) begin
	main_inst_start = start;
end
always @(*) begin
	main_inst_memory_controller_1_out_a = memory_controller_1_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_1_out_b = memory_controller_1_inst_memory_controller_out_reg_b;
end
always @(*) begin
	main_inst_memory_controller_0_out_a = memory_controller_0_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_0_out_b = memory_controller_0_inst_memory_controller_out_reg_b;
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_finish_reg <= 1'd0;
	end
	if (main_inst_finish) begin
		main_inst_finish_reg <= 1'd1;
	end
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_return_val_reg <= 0;
	end
	if (main_inst_finish) begin
		main_inst_return_val_reg <= main_inst_return_val;
	end
end
always @(*) begin
	memory_controller_1_inst_clk = clk;
end
assign memory_controller_1_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_1_inst_memory_controller_address_a = main_inst_memory_controller_1_address_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_a = main_inst_memory_controller_1_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_a = main_inst_memory_controller_1_size_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_a = main_inst_memory_controller_1_write_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_a = main_inst_memory_controller_1_in_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_address_b = main_inst_memory_controller_1_address_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_b = main_inst_memory_controller_1_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_b = main_inst_memory_controller_1_size_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_b = main_inst_memory_controller_1_write_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_b = main_inst_memory_controller_1_in_b;
end
always @(*) begin
	memory_controller_0_inst_clk = clk;
end
assign memory_controller_0_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_0_inst_memory_controller_address_a = main_inst_memory_controller_0_address_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_a = main_inst_memory_controller_0_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_a = main_inst_memory_controller_0_size_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_a = main_inst_memory_controller_0_write_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_a = main_inst_memory_controller_0_in_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_address_b = main_inst_memory_controller_0_address_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_b = main_inst_memory_controller_0_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_b = main_inst_memory_controller_0_size_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_b = main_inst_memory_controller_0_write_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_b = main_inst_memory_controller_0_in_b;
end
always @(*) begin
	finish = main_inst_finish;
end
always @(*) begin
	return_val = main_inst_return_val;
end

endmodule
`timescale 1 ns / 1 ns
module memory_controller_0
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcY0_address_a;
reg [5:0] main_opcY0_address_b;
reg main_opcY0_write_enable_a;
reg main_opcY0_write_enable_b;
reg [31:0] main_opcY0_in_a;
reg [31:0] main_opcY0_in_b;
wire [31:0] main_opcY0_out_a;
wire [31:0] main_opcY0_out_b;

// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY0 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY0_address_a ),
	.q_a( main_opcY0_out_a ),
	.address_b( main_opcY0_address_b ),
	.q_b( main_opcY0_out_b )
);
defparam main_opcY0.width_a = 32;
defparam main_opcY0.widthad_a = 6;
defparam main_opcY0.numwords_a = 62;
defparam main_opcY0.width_b = 32;
defparam main_opcY0.widthad_b = 6;
defparam main_opcY0.numwords_b = 62;
defparam main_opcY0.latency = ram_latency;
defparam main_opcY0.init_file = {`MEM_INIT_DIR, "main_opcY0.mif"};

reg [5:0] main_opcY1_address_a;
reg [5:0] main_opcY1_address_b;
reg main_opcY1_write_enable_a;
reg main_opcY1_write_enable_b;
reg [31:0] main_opcY1_in_a;
reg [31:0] main_opcY1_in_b;
wire [31:0] main_opcY1_out_a;
wire [31:0] main_opcY1_out_b;

// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY1_address_a ),
	.q_a( main_opcY1_out_a ),
	.address_b( main_opcY1_address_b ),
	.q_b( main_opcY1_out_b )
);
defparam main_opcY1.width_a = 32;
defparam main_opcY1.widthad_a = 6;
defparam main_opcY1.numwords_a = 62;
defparam main_opcY1.width_b = 32;
defparam main_opcY1.widthad_b = 6;
defparam main_opcY1.numwords_b = 62;
defparam main_opcY1.latency = ram_latency;
defparam main_opcY1.init_file = {`MEM_INIT_DIR, "main_opcY1.mif"};

reg [5:0] main_opcY2_address_a;
reg [5:0] main_opcY2_address_b;
reg main_opcY2_write_enable_a;
reg main_opcY2_write_enable_b;
reg [31:0] main_opcY2_in_a;
reg [31:0] main_opcY2_in_b;
wire [31:0] main_opcY2_out_a;
wire [31:0] main_opcY2_out_b;

// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY2_address_a ),
	.q_a( main_opcY2_out_a ),
	.address_b( main_opcY2_address_b ),
	.q_b( main_opcY2_out_b )
);
defparam main_opcY2.width_a = 32;
defparam main_opcY2.widthad_a = 6;
defparam main_opcY2.numwords_a = 62;
defparam main_opcY2.width_b = 32;
defparam main_opcY2.widthad_b = 6;
defparam main_opcY2.numwords_b = 62;
defparam main_opcY2.latency = ram_latency;
defparam main_opcY2.init_file = {`MEM_INIT_DIR, "main_opcY2.mif"};

reg [5:0] main_opcY3_address_a;
reg [5:0] main_opcY3_address_b;
reg main_opcY3_write_enable_a;
reg main_opcY3_write_enable_b;
reg [31:0] main_opcY3_in_a;
reg [31:0] main_opcY3_in_b;
wire [31:0] main_opcY3_out_a;
wire [31:0] main_opcY3_out_b;

// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY3_address_a ),
	.q_a( main_opcY3_out_a ),
	.address_b( main_opcY3_address_b ),
	.q_b( main_opcY3_out_b )
);
defparam main_opcY3.width_a = 32;
defparam main_opcY3.widthad_a = 6;
defparam main_opcY3.numwords_a = 62;
defparam main_opcY3.width_b = 32;
defparam main_opcY3.widthad_b = 6;
defparam main_opcY3.numwords_b = 62;
defparam main_opcY3.latency = ram_latency;
defparam main_opcY3.init_file = {`MEM_INIT_DIR, "main_opcY3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcY0_a;
assign select_main_opcY0_a = (tag_a == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_a;
wire [31:0] memory_controller_main_opcY0_out_a;
assign memory_controller_main_opcY0_out_a = {32{ select_main_opcY0_reg_a[ram_latency]}} & main_opcY0_out_a;

wire select_main_opcY1_a;
assign select_main_opcY1_a = (tag_a == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_a;
wire [31:0] memory_controller_main_opcY1_out_a;
assign memory_controller_main_opcY1_out_a = {32{ select_main_opcY1_reg_a[ram_latency]}} & main_opcY1_out_a;

wire select_main_opcY2_a;
assign select_main_opcY2_a = (tag_a == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_a;
wire [31:0] memory_controller_main_opcY2_out_a;
assign memory_controller_main_opcY2_out_a = {32{ select_main_opcY2_reg_a[ram_latency]}} & main_opcY2_out_a;

wire select_main_opcY3_a;
assign select_main_opcY3_a = (tag_a == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_a;
wire [31:0] memory_controller_main_opcY3_out_a;
assign memory_controller_main_opcY3_out_a = {32{ select_main_opcY3_reg_a[ram_latency]}} & main_opcY3_out_a;

always @(*)
begin
main_opcY0_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY0_a}};
main_opcY0_write_enable_a = memory_controller_write_enable_a & select_main_opcY0_a;
main_opcY0_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY1_a}};
main_opcY1_write_enable_a = memory_controller_write_enable_a & select_main_opcY1_a;
main_opcY1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY2_a}};
main_opcY2_write_enable_a = memory_controller_write_enable_a & select_main_opcY2_a;
main_opcY2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY3_a}};
main_opcY3_write_enable_a = memory_controller_write_enable_a & select_main_opcY3_a;
main_opcY3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcY0_reg_a[ram_latency]}} | {2{select_main_opcY1_reg_a[ram_latency]}} | {2{select_main_opcY2_reg_a[ram_latency]}} | {2{select_main_opcY3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcY0_out_a | memory_controller_main_opcY1_out_a | memory_controller_main_opcY2_out_a | memory_controller_main_opcY3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_a[j+1] <= select_main_opcY0_reg_a[j];
select_main_opcY1_reg_a[j+1] <= select_main_opcY1_reg_a[j];
select_main_opcY2_reg_a[j+1] <= select_main_opcY2_reg_a[j];
select_main_opcY3_reg_a[j+1] <= select_main_opcY3_reg_a[j];
end
always @(*)
begin
select_main_opcY0_reg_a[0] <= select_main_opcY0_a;
select_main_opcY1_reg_a[0] <= select_main_opcY1_a;
select_main_opcY2_reg_a[0] <= select_main_opcY2_a;
select_main_opcY3_reg_a[0] <= select_main_opcY3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcY0_b;
assign select_main_opcY0_b = (tag_b == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_b;
wire [31:0] memory_controller_main_opcY0_out_b;
assign memory_controller_main_opcY0_out_b = {32{ select_main_opcY0_reg_b[ram_latency]}} & main_opcY0_out_b;

wire select_main_opcY1_b;
assign select_main_opcY1_b = (tag_b == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_b;
wire [31:0] memory_controller_main_opcY1_out_b;
assign memory_controller_main_opcY1_out_b = {32{ select_main_opcY1_reg_b[ram_latency]}} & main_opcY1_out_b;

wire select_main_opcY2_b;
assign select_main_opcY2_b = (tag_b == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_b;
wire [31:0] memory_controller_main_opcY2_out_b;
assign memory_controller_main_opcY2_out_b = {32{ select_main_opcY2_reg_b[ram_latency]}} & main_opcY2_out_b;

wire select_main_opcY3_b;
assign select_main_opcY3_b = (tag_b == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_b;
wire [31:0] memory_controller_main_opcY3_out_b;
assign memory_controller_main_opcY3_out_b = {32{ select_main_opcY3_reg_b[ram_latency]}} & main_opcY3_out_b;

always @(*)
begin
main_opcY0_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY0_b}};
main_opcY0_write_enable_b = memory_controller_write_enable_b & select_main_opcY0_b;
main_opcY0_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY1_b}};
main_opcY1_write_enable_b = memory_controller_write_enable_b & select_main_opcY1_b;
main_opcY1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY2_b}};
main_opcY2_write_enable_b = memory_controller_write_enable_b & select_main_opcY2_b;
main_opcY2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY3_b}};
main_opcY3_write_enable_b = memory_controller_write_enable_b & select_main_opcY3_b;
main_opcY3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcY0_reg_b[ram_latency]}} | {2{select_main_opcY1_reg_b[ram_latency]}} | {2{select_main_opcY2_reg_b[ram_latency]}} | {2{select_main_opcY3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcY0_out_b | memory_controller_main_opcY1_out_b | memory_controller_main_opcY2_out_b | memory_controller_main_opcY3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_b[j+1] <= select_main_opcY0_reg_b[j];
select_main_opcY1_reg_b[j+1] <= select_main_opcY1_reg_b[j];
select_main_opcY2_reg_b[j+1] <= select_main_opcY2_reg_b[j];
select_main_opcY3_reg_b[j+1] <= select_main_opcY3_reg_b[j];
end
always @(*)
begin
select_main_opcY0_reg_b[0] <= select_main_opcY0_b;
select_main_opcY1_reg_b[0] <= select_main_opcY1_b;
select_main_opcY2_reg_b[0] <= select_main_opcY2_b;
select_main_opcY3_reg_b[0] <= select_main_opcY3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module memory_controller_1
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcX1_address_a;
reg [5:0] main_opcX1_address_b;
reg main_opcX1_write_enable_a;
reg main_opcX1_write_enable_b;
reg [31:0] main_opcX1_in_a;
reg [31:0] main_opcX1_in_b;
wire [31:0] main_opcX1_out_a;
wire [31:0] main_opcX1_out_b;

// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX1_address_a ),
	.q_a( main_opcX1_out_a ),
	.address_b( main_opcX1_address_b ),
	.q_b( main_opcX1_out_b )
);
defparam main_opcX1.width_a = 32;
defparam main_opcX1.widthad_a = 6;
defparam main_opcX1.numwords_a = 62;
defparam main_opcX1.width_b = 32;
defparam main_opcX1.widthad_b = 6;
defparam main_opcX1.numwords_b = 62;
defparam main_opcX1.latency = ram_latency;
defparam main_opcX1.init_file = {`MEM_INIT_DIR, "main_opcX1.mif"};

reg [5:0] main_opcX2_address_a;
reg [5:0] main_opcX2_address_b;
reg main_opcX2_write_enable_a;
reg main_opcX2_write_enable_b;
reg [31:0] main_opcX2_in_a;
reg [31:0] main_opcX2_in_b;
wire [31:0] main_opcX2_out_a;
wire [31:0] main_opcX2_out_b;

// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX2_address_a ),
	.q_a( main_opcX2_out_a ),
	.address_b( main_opcX2_address_b ),
	.q_b( main_opcX2_out_b )
);
defparam main_opcX2.width_a = 32;
defparam main_opcX2.widthad_a = 6;
defparam main_opcX2.numwords_a = 62;
defparam main_opcX2.width_b = 32;
defparam main_opcX2.widthad_b = 6;
defparam main_opcX2.numwords_b = 62;
defparam main_opcX2.latency = ram_latency;
defparam main_opcX2.init_file = {`MEM_INIT_DIR, "main_opcX2.mif"};

reg [5:0] main_opcX3_address_a;
reg [5:0] main_opcX3_address_b;
reg main_opcX3_write_enable_a;
reg main_opcX3_write_enable_b;
reg [31:0] main_opcX3_in_a;
reg [31:0] main_opcX3_in_b;
wire [31:0] main_opcX3_out_a;
wire [31:0] main_opcX3_out_b;

// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
rom_dual_port main_opcX3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX3_address_a ),
	.q_a( main_opcX3_out_a ),
	.address_b( main_opcX3_address_b ),
	.q_b( main_opcX3_out_b )
);
defparam main_opcX3.width_a = 32;
defparam main_opcX3.widthad_a = 6;
defparam main_opcX3.numwords_a = 62;
defparam main_opcX3.width_b = 32;
defparam main_opcX3.widthad_b = 6;
defparam main_opcX3.numwords_b = 62;
defparam main_opcX3.latency = ram_latency;
defparam main_opcX3.init_file = {`MEM_INIT_DIR, "main_opcX3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcX1_a;
assign select_main_opcX1_a = (tag_a == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_a;
wire [31:0] memory_controller_main_opcX1_out_a;
assign memory_controller_main_opcX1_out_a = {32{ select_main_opcX1_reg_a[ram_latency]}} & main_opcX1_out_a;

wire select_main_opcX2_a;
assign select_main_opcX2_a = (tag_a == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_a;
wire [31:0] memory_controller_main_opcX2_out_a;
assign memory_controller_main_opcX2_out_a = {32{ select_main_opcX2_reg_a[ram_latency]}} & main_opcX2_out_a;

wire select_main_opcX3_a;
assign select_main_opcX3_a = (tag_a == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_a;
wire [31:0] memory_controller_main_opcX3_out_a;
assign memory_controller_main_opcX3_out_a = {32{ select_main_opcX3_reg_a[ram_latency]}} & main_opcX3_out_a;

always @(*)
begin
main_opcX1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX1_a}};
main_opcX1_write_enable_a = memory_controller_write_enable_a & select_main_opcX1_a;
main_opcX1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX2_a}};
main_opcX2_write_enable_a = memory_controller_write_enable_a & select_main_opcX2_a;
main_opcX2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX3_a}};
main_opcX3_write_enable_a = memory_controller_write_enable_a & select_main_opcX3_a;
main_opcX3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcX1_reg_a[ram_latency]}} | {2{select_main_opcX2_reg_a[ram_latency]}} | {2{select_main_opcX3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcX1_out_a | memory_controller_main_opcX2_out_a | memory_controller_main_opcX3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_a[j+1] <= select_main_opcX1_reg_a[j];
select_main_opcX2_reg_a[j+1] <= select_main_opcX2_reg_a[j];
select_main_opcX3_reg_a[j+1] <= select_main_opcX3_reg_a[j];
end
always @(*)
begin
select_main_opcX1_reg_a[0] <= select_main_opcX1_a;
select_main_opcX2_reg_a[0] <= select_main_opcX2_a;
select_main_opcX3_reg_a[0] <= select_main_opcX3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcX1_b;
assign select_main_opcX1_b = (tag_b == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_b;
wire [31:0] memory_controller_main_opcX1_out_b;
assign memory_controller_main_opcX1_out_b = {32{ select_main_opcX1_reg_b[ram_latency]}} & main_opcX1_out_b;

wire select_main_opcX2_b;
assign select_main_opcX2_b = (tag_b == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_b;
wire [31:0] memory_controller_main_opcX2_out_b;
assign memory_controller_main_opcX2_out_b = {32{ select_main_opcX2_reg_b[ram_latency]}} & main_opcX2_out_b;

wire select_main_opcX3_b;
assign select_main_opcX3_b = (tag_b == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_b;
wire [31:0] memory_controller_main_opcX3_out_b;
assign memory_controller_main_opcX3_out_b = {32{ select_main_opcX3_reg_b[ram_latency]}} & main_opcX3_out_b;

always @(*)
begin
main_opcX1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX1_b}};
main_opcX1_write_enable_b = memory_controller_write_enable_b & select_main_opcX1_b;
main_opcX1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX2_b}};
main_opcX2_write_enable_b = memory_controller_write_enable_b & select_main_opcX2_b;
main_opcX2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX3_b}};
main_opcX3_write_enable_b = memory_controller_write_enable_b & select_main_opcX3_b;
main_opcX3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcX1_reg_b[ram_latency]}} | {2{select_main_opcX2_reg_b[ram_latency]}} | {2{select_main_opcX3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcX1_out_b | memory_controller_main_opcX2_out_b | memory_controller_main_opcX3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_b[j+1] <= select_main_opcX1_reg_b[j];
select_main_opcX2_reg_b[j+1] <= select_main_opcX2_reg_b[j];
select_main_opcX3_reg_b[j+1] <= select_main_opcX3_reg_b[j];
end
always @(*)
begin
select_main_opcX1_reg_b[0] <= select_main_opcX1_b;
select_main_opcX2_reg_b[0] <= select_main_opcX2_b;
select_main_opcX3_reg_b[0] <= select_main_opcX3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module main
(
	clk,
	reset,
	start,
	finish,
	return_val,
	memory_controller_1_write_enable_a,
	memory_controller_1_in_a,
	memory_controller_1_enable_a,
	memory_controller_1_address_a,
	memory_controller_1_size_a,
	memory_controller_1_out_a,
	memory_controller_1_write_enable_b,
	memory_controller_1_in_b,
	memory_controller_1_enable_b,
	memory_controller_1_address_b,
	memory_controller_1_size_b,
	memory_controller_1_out_b,
	memory_controller_0_write_enable_a,
	memory_controller_0_in_a,
	memory_controller_0_enable_a,
	memory_controller_0_address_a,
	memory_controller_0_size_a,
	memory_controller_0_out_a,
	memory_controller_0_write_enable_b,
	memory_controller_0_in_b,
	memory_controller_0_enable_b,
	memory_controller_0_address_b,
	memory_controller_0_size_b,
	memory_controller_0_out_b
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_main_BB_entry_1 = 9'd1;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_2 = 9'd2;
parameter [8:0] LEGUP_F_main_BB_NodeBlock7_3 = 9'd3;
parameter [8:0] LEGUP_F_main_BB_NodeBlock5_4 = 9'd4;
parameter [8:0] LEGUP_F_main_BB_LeafBlock3_5 = 9'd5;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_backedge_6 = 9'd6;
parameter [8:0] LEGUP_F_main_BB_for_cond301_preheader_preheader_7 = 9'd7;
parameter [8:0] LEGUP_F_main_BB_NodeBlock1_8 = 9'd8;
parameter [8:0] LEGUP_F_main_BB_NodeBlock_9 = 9'd9;
parameter [8:0] LEGUP_F_main_BB_LeafBlock_10 = 9'd10;
parameter [8:0] LEGUP_F_main_BB_sw_bb_11 = 9'd11;
parameter [8:0] LEGUP_F_main_BB_sw_bb_12 = 9'd12;
parameter [8:0] LEGUP_F_main_BB_sw_bb_13 = 9'd13;
parameter [8:0] LEGUP_F_main_BB_sw_bb_14 = 9'd14;
parameter [8:0] LEGUP_F_main_BB_sw_bb_15 = 9'd15;
parameter [8:0] LEGUP_F_main_BB_sw_bb_16 = 9'd16;
parameter [8:0] LEGUP_F_main_BB_sw_bb_17 = 9'd17;
parameter [8:0] LEGUP_F_main_BB_sw_bb_18 = 9'd18;
parameter [8:0] LEGUP_F_main_BB_sw_bb_19 = 9'd19;
parameter [8:0] LEGUP_F_main_BB_sw_bb_20 = 9'd20;
parameter [8:0] LEGUP_F_main_BB_sw_bb_21 = 9'd21;
parameter [8:0] LEGUP_F_main_BB_sw_bb_22 = 9'd22;
parameter [8:0] LEGUP_F_main_BB_sw_bb_23 = 9'd23;
parameter [8:0] LEGUP_F_main_BB_sw_bb_24 = 9'd24;
parameter [8:0] LEGUP_F_main_BB_sw_bb_25 = 9'd25;
parameter [8:0] LEGUP_F_main_BB_sw_bb_26 = 9'd26;
parameter [8:0] LEGUP_F_main_BB_sw_bb_27 = 9'd27;
parameter [8:0] LEGUP_F_main_BB_sw_bb_28 = 9'd28;
parameter [8:0] LEGUP_F_main_BB_sw_bb_29 = 9'd29;
parameter [8:0] LEGUP_F_main_BB_sw_bb_30 = 9'd30;
parameter [8:0] LEGUP_F_main_BB_sw_bb_31 = 9'd31;
parameter [8:0] LEGUP_F_main_BB_sw_bb_32 = 9'd32;
parameter [8:0] LEGUP_F_main_BB_sw_bb_33 = 9'd33;
parameter [8:0] LEGUP_F_main_BB_sw_bb_34 = 9'd34;
parameter [8:0] LEGUP_F_main_BB_sw_bb_35 = 9'd35;
parameter [8:0] LEGUP_F_main_BB_sw_bb_36 = 9'd36;
parameter [8:0] LEGUP_F_main_BB_sw_bb_37 = 9'd37;
parameter [8:0] LEGUP_F_main_BB_sw_bb_38 = 9'd38;
parameter [8:0] LEGUP_F_main_BB_sw_bb_39 = 9'd39;
parameter [8:0] LEGUP_F_main_BB_sw_bb_40 = 9'd40;
parameter [8:0] LEGUP_F_main_BB_sw_bb_41 = 9'd41;
parameter [8:0] LEGUP_F_main_BB_sw_bb_42 = 9'd42;
parameter [8:0] LEGUP_F_main_BB_sw_bb_43 = 9'd43;
parameter [8:0] LEGUP_F_main_BB_sw_bb_44 = 9'd44;
parameter [8:0] LEGUP_F_main_BB_sw_bb_45 = 9'd45;
parameter [8:0] LEGUP_F_main_BB_sw_bb_46 = 9'd46;
parameter [8:0] LEGUP_F_main_BB_sw_bb75_47 = 9'd47;
parameter [8:0] LEGUP_F_main_BB_if_end_48 = 9'd48;
parameter [8:0] LEGUP_F_main_BB_if_end_49 = 9'd49;
parameter [8:0] LEGUP_F_main_BB_if_end_50 = 9'd50;
parameter [8:0] LEGUP_F_main_BB_sw_bb86_51 = 9'd51;
parameter [8:0] LEGUP_F_main_BB_if_end89_52 = 9'd52;
parameter [8:0] LEGUP_F_main_BB_if_end89_53 = 9'd53;
parameter [8:0] LEGUP_F_main_BB_if_end89_54 = 9'd54;
parameter [8:0] LEGUP_F_main_BB_if_end89_55 = 9'd55;
parameter [8:0] LEGUP_F_main_BB_if_end89_56 = 9'd56;
parameter [8:0] LEGUP_F_main_BB_if_end89_57 = 9'd57;
parameter [8:0] LEGUP_F_main_BB_if_end89_58 = 9'd58;
parameter [8:0] LEGUP_F_main_BB_if_end89_59 = 9'd59;
parameter [8:0] LEGUP_F_main_BB_if_end89_60 = 9'd60;
parameter [8:0] LEGUP_F_main_BB_if_end89_61 = 9'd61;
parameter [8:0] LEGUP_F_main_BB_if_end89_62 = 9'd62;
parameter [8:0] LEGUP_F_main_BB_if_end89_63 = 9'd63;
parameter [8:0] LEGUP_F_main_BB_if_end89_64 = 9'd64;
parameter [8:0] LEGUP_F_main_BB_if_end89_65 = 9'd65;
parameter [8:0] LEGUP_F_main_BB_if_end89_66 = 9'd66;
parameter [8:0] LEGUP_F_main_BB_if_end89_67 = 9'd67;
parameter [8:0] LEGUP_F_main_BB_if_end89_68 = 9'd68;
parameter [8:0] LEGUP_F_main_BB_if_end89_69 = 9'd69;
parameter [8:0] LEGUP_F_main_BB_if_end89_70 = 9'd70;
parameter [8:0] LEGUP_F_main_BB_if_end89_71 = 9'd71;
parameter [8:0] LEGUP_F_main_BB_if_end89_72 = 9'd72;
parameter [8:0] LEGUP_F_main_BB_if_end89_73 = 9'd73;
parameter [8:0] LEGUP_F_main_BB_if_end89_74 = 9'd74;
parameter [8:0] LEGUP_F_main_BB_if_end89_75 = 9'd75;
parameter [8:0] LEGUP_F_main_BB_if_end89_76 = 9'd76;
parameter [8:0] LEGUP_F_main_BB_if_end89_77 = 9'd77;
parameter [8:0] LEGUP_F_main_BB_if_end89_78 = 9'd78;
parameter [8:0] LEGUP_F_main_BB_if_end89_79 = 9'd79;
parameter [8:0] LEGUP_F_main_BB_if_end89_80 = 9'd80;
parameter [8:0] LEGUP_F_main_BB_if_end89_81 = 9'd81;
parameter [8:0] LEGUP_F_main_BB_if_end89_82 = 9'd82;
parameter [8:0] LEGUP_F_main_BB_if_end89_83 = 9'd83;
parameter [8:0] LEGUP_F_main_BB_if_end89_84 = 9'd84;
parameter [8:0] LEGUP_F_main_BB_if_then94_85 = 9'd85;
parameter [8:0] LEGUP_F_main_BB_if_then96_86 = 9'd86;
parameter [8:0] LEGUP_F_main_BB_if_then96_87 = 9'd87;
parameter [8:0] LEGUP_F_main_BB_if_then96_88 = 9'd88;
parameter [8:0] LEGUP_F_main_BB_if_then96_89 = 9'd89;
parameter [8:0] LEGUP_F_main_BB_if_then96_90 = 9'd90;
parameter [8:0] LEGUP_F_main_BB_if_then96_91 = 9'd91;
parameter [8:0] LEGUP_F_main_BB_if_then96_92 = 9'd92;
parameter [8:0] LEGUP_F_main_BB_if_then96_93 = 9'd93;
parameter [8:0] LEGUP_F_main_BB_if_then96_94 = 9'd94;
parameter [8:0] LEGUP_F_main_BB_if_then96_95 = 9'd95;
parameter [8:0] LEGUP_F_main_BB_if_then96_96 = 9'd96;
parameter [8:0] LEGUP_F_main_BB_if_then96_97 = 9'd97;
parameter [8:0] LEGUP_F_main_BB_if_then96_98 = 9'd98;
parameter [8:0] LEGUP_F_main_BB_if_then96_99 = 9'd99;
parameter [8:0] LEGUP_F_main_BB_if_then96_100 = 9'd100;
parameter [8:0] LEGUP_F_main_BB_if_then96_101 = 9'd101;
parameter [8:0] LEGUP_F_main_BB_if_then96_102 = 9'd102;
parameter [8:0] LEGUP_F_main_BB_if_then96_103 = 9'd103;
parameter [8:0] LEGUP_F_main_BB_if_then96_104 = 9'd104;
parameter [8:0] LEGUP_F_main_BB_if_then96_105 = 9'd105;
parameter [8:0] LEGUP_F_main_BB_if_then96_106 = 9'd106;
parameter [8:0] LEGUP_F_main_BB_if_then96_107 = 9'd107;
parameter [8:0] LEGUP_F_main_BB_if_then96_108 = 9'd108;
parameter [8:0] LEGUP_F_main_BB_if_then96_109 = 9'd109;
parameter [8:0] LEGUP_F_main_BB_if_then96_110 = 9'd110;
parameter [8:0] LEGUP_F_main_BB_if_then96_111 = 9'd111;
parameter [8:0] LEGUP_F_main_BB_if_then96_112 = 9'd112;
parameter [8:0] LEGUP_F_main_BB_if_then96_113 = 9'd113;
parameter [8:0] LEGUP_F_main_BB_if_then96_114 = 9'd114;
parameter [8:0] LEGUP_F_main_BB_if_then96_115 = 9'd115;
parameter [8:0] LEGUP_F_main_BB_if_then96_116 = 9'd116;
parameter [8:0] LEGUP_F_main_BB_if_then96_117 = 9'd117;
parameter [8:0] LEGUP_F_main_BB_if_then96_118 = 9'd118;
parameter [8:0] LEGUP_F_main_BB_if_then96_119 = 9'd119;
parameter [8:0] LEGUP_F_main_BB_if_else107_120 = 9'd120;
parameter [8:0] LEGUP_F_main_BB_if_then109_121 = 9'd121;
parameter [8:0] LEGUP_F_main_BB_if_then109_122 = 9'd122;
parameter [8:0] LEGUP_F_main_BB_if_then109_123 = 9'd123;
parameter [8:0] LEGUP_F_main_BB_if_then109_124 = 9'd124;
parameter [8:0] LEGUP_F_main_BB_if_then109_125 = 9'd125;
parameter [8:0] LEGUP_F_main_BB_if_then109_126 = 9'd126;
parameter [8:0] LEGUP_F_main_BB_if_then109_127 = 9'd127;
parameter [8:0] LEGUP_F_main_BB_if_then109_128 = 9'd128;
parameter [8:0] LEGUP_F_main_BB_if_then109_129 = 9'd129;
parameter [8:0] LEGUP_F_main_BB_if_then109_130 = 9'd130;
parameter [8:0] LEGUP_F_main_BB_if_then109_131 = 9'd131;
parameter [8:0] LEGUP_F_main_BB_if_then109_132 = 9'd132;
parameter [8:0] LEGUP_F_main_BB_if_then109_133 = 9'd133;
parameter [8:0] LEGUP_F_main_BB_if_then109_134 = 9'd134;
parameter [8:0] LEGUP_F_main_BB_if_then109_135 = 9'd135;
parameter [8:0] LEGUP_F_main_BB_if_then109_136 = 9'd136;
parameter [8:0] LEGUP_F_main_BB_if_then109_137 = 9'd137;
parameter [8:0] LEGUP_F_main_BB_if_then109_138 = 9'd138;
parameter [8:0] LEGUP_F_main_BB_if_then109_139 = 9'd139;
parameter [8:0] LEGUP_F_main_BB_if_then109_140 = 9'd140;
parameter [8:0] LEGUP_F_main_BB_if_then109_141 = 9'd141;
parameter [8:0] LEGUP_F_main_BB_if_then109_142 = 9'd142;
parameter [8:0] LEGUP_F_main_BB_if_then109_143 = 9'd143;
parameter [8:0] LEGUP_F_main_BB_if_then109_144 = 9'd144;
parameter [8:0] LEGUP_F_main_BB_if_then109_145 = 9'd145;
parameter [8:0] LEGUP_F_main_BB_if_then109_146 = 9'd146;
parameter [8:0] LEGUP_F_main_BB_if_then109_147 = 9'd147;
parameter [8:0] LEGUP_F_main_BB_if_then109_148 = 9'd148;
parameter [8:0] LEGUP_F_main_BB_if_then109_149 = 9'd149;
parameter [8:0] LEGUP_F_main_BB_if_then109_150 = 9'd150;
parameter [8:0] LEGUP_F_main_BB_if_then109_151 = 9'd151;
parameter [8:0] LEGUP_F_main_BB_if_then109_152 = 9'd152;
parameter [8:0] LEGUP_F_main_BB_if_then109_153 = 9'd153;
parameter [8:0] LEGUP_F_main_BB_if_then109_154 = 9'd154;
parameter [8:0] LEGUP_F_main_BB_if_else120_155 = 9'd155;
parameter [8:0] LEGUP_F_main_BB_if_else120_156 = 9'd156;
parameter [8:0] LEGUP_F_main_BB_if_else120_157 = 9'd157;
parameter [8:0] LEGUP_F_main_BB_if_else120_158 = 9'd158;
parameter [8:0] LEGUP_F_main_BB_if_else120_159 = 9'd159;
parameter [8:0] LEGUP_F_main_BB_if_else120_160 = 9'd160;
parameter [8:0] LEGUP_F_main_BB_if_else120_161 = 9'd161;
parameter [8:0] LEGUP_F_main_BB_if_else120_162 = 9'd162;
parameter [8:0] LEGUP_F_main_BB_if_else120_163 = 9'd163;
parameter [8:0] LEGUP_F_main_BB_if_else120_164 = 9'd164;
parameter [8:0] LEGUP_F_main_BB_if_else120_165 = 9'd165;
parameter [8:0] LEGUP_F_main_BB_if_else120_166 = 9'd166;
parameter [8:0] LEGUP_F_main_BB_if_else120_167 = 9'd167;
parameter [8:0] LEGUP_F_main_BB_if_else120_168 = 9'd168;
parameter [8:0] LEGUP_F_main_BB_if_else120_169 = 9'd169;
parameter [8:0] LEGUP_F_main_BB_if_else120_170 = 9'd170;
parameter [8:0] LEGUP_F_main_BB_if_else120_171 = 9'd171;
parameter [8:0] LEGUP_F_main_BB_if_else120_172 = 9'd172;
parameter [8:0] LEGUP_F_main_BB_if_else120_173 = 9'd173;
parameter [8:0] LEGUP_F_main_BB_if_else120_174 = 9'd174;
parameter [8:0] LEGUP_F_main_BB_if_else120_175 = 9'd175;
parameter [8:0] LEGUP_F_main_BB_if_else120_176 = 9'd176;
parameter [8:0] LEGUP_F_main_BB_if_else120_177 = 9'd177;
parameter [8:0] LEGUP_F_main_BB_if_else120_178 = 9'd178;
parameter [8:0] LEGUP_F_main_BB_if_else120_179 = 9'd179;
parameter [8:0] LEGUP_F_main_BB_if_else120_180 = 9'd180;
parameter [8:0] LEGUP_F_main_BB_if_else120_181 = 9'd181;
parameter [8:0] LEGUP_F_main_BB_if_else120_182 = 9'd182;
parameter [8:0] LEGUP_F_main_BB_if_else120_183 = 9'd183;
parameter [8:0] LEGUP_F_main_BB_if_else120_184 = 9'd184;
parameter [8:0] LEGUP_F_main_BB_if_else120_185 = 9'd185;
parameter [8:0] LEGUP_F_main_BB_if_else120_186 = 9'd186;
parameter [8:0] LEGUP_F_main_BB_if_else120_187 = 9'd187;
parameter [8:0] LEGUP_F_main_BB_if_then122_188 = 9'd188;
parameter [8:0] LEGUP_F_main_BB_if_then122_189 = 9'd189;
parameter [8:0] LEGUP_F_main_BB_if_then122_190 = 9'd190;
parameter [8:0] LEGUP_F_main_BB_if_then122_191 = 9'd191;
parameter [8:0] LEGUP_F_main_BB_if_then122_192 = 9'd192;
parameter [8:0] LEGUP_F_main_BB_if_then122_193 = 9'd193;
parameter [8:0] LEGUP_F_main_BB_if_then122_194 = 9'd194;
parameter [8:0] LEGUP_F_main_BB_if_then122_195 = 9'd195;
parameter [8:0] LEGUP_F_main_BB_if_then122_196 = 9'd196;
parameter [8:0] LEGUP_F_main_BB_if_then122_197 = 9'd197;
parameter [8:0] LEGUP_F_main_BB_if_then122_198 = 9'd198;
parameter [8:0] LEGUP_F_main_BB_if_then122_199 = 9'd199;
parameter [8:0] LEGUP_F_main_BB_if_then122_200 = 9'd200;
parameter [8:0] LEGUP_F_main_BB_if_then122_201 = 9'd201;
parameter [8:0] LEGUP_F_main_BB_if_then122_202 = 9'd202;
parameter [8:0] LEGUP_F_main_BB_if_then122_203 = 9'd203;
parameter [8:0] LEGUP_F_main_BB_if_then122_204 = 9'd204;
parameter [8:0] LEGUP_F_main_BB_if_then122_205 = 9'd205;
parameter [8:0] LEGUP_F_main_BB_if_then122_206 = 9'd206;
parameter [8:0] LEGUP_F_main_BB_if_then122_207 = 9'd207;
parameter [8:0] LEGUP_F_main_BB_if_then122_208 = 9'd208;
parameter [8:0] LEGUP_F_main_BB_if_then122_209 = 9'd209;
parameter [8:0] LEGUP_F_main_BB_if_then122_210 = 9'd210;
parameter [8:0] LEGUP_F_main_BB_if_then122_211 = 9'd211;
parameter [8:0] LEGUP_F_main_BB_if_then122_212 = 9'd212;
parameter [8:0] LEGUP_F_main_BB_if_then122_213 = 9'd213;
parameter [8:0] LEGUP_F_main_BB_if_then122_214 = 9'd214;
parameter [8:0] LEGUP_F_main_BB_if_then122_215 = 9'd215;
parameter [8:0] LEGUP_F_main_BB_if_then122_216 = 9'd216;
parameter [8:0] LEGUP_F_main_BB_if_then122_217 = 9'd217;
parameter [8:0] LEGUP_F_main_BB_if_then122_218 = 9'd218;
parameter [8:0] LEGUP_F_main_BB_if_then122_219 = 9'd219;
parameter [8:0] LEGUP_F_main_BB_if_then122_220 = 9'd220;
parameter [8:0] LEGUP_F_main_BB_if_else133_221 = 9'd221;
parameter [8:0] LEGUP_F_main_BB_if_else133_222 = 9'd222;
parameter [8:0] LEGUP_F_main_BB_if_else133_223 = 9'd223;
parameter [8:0] LEGUP_F_main_BB_if_else133_224 = 9'd224;
parameter [8:0] LEGUP_F_main_BB_if_else133_225 = 9'd225;
parameter [8:0] LEGUP_F_main_BB_if_else133_226 = 9'd226;
parameter [8:0] LEGUP_F_main_BB_if_else133_227 = 9'd227;
parameter [8:0] LEGUP_F_main_BB_if_else133_228 = 9'd228;
parameter [8:0] LEGUP_F_main_BB_if_else133_229 = 9'd229;
parameter [8:0] LEGUP_F_main_BB_if_else133_230 = 9'd230;
parameter [8:0] LEGUP_F_main_BB_if_else133_231 = 9'd231;
parameter [8:0] LEGUP_F_main_BB_if_else133_232 = 9'd232;
parameter [8:0] LEGUP_F_main_BB_if_else133_233 = 9'd233;
parameter [8:0] LEGUP_F_main_BB_if_else133_234 = 9'd234;
parameter [8:0] LEGUP_F_main_BB_if_else133_235 = 9'd235;
parameter [8:0] LEGUP_F_main_BB_if_else133_236 = 9'd236;
parameter [8:0] LEGUP_F_main_BB_if_else133_237 = 9'd237;
parameter [8:0] LEGUP_F_main_BB_if_else133_238 = 9'd238;
parameter [8:0] LEGUP_F_main_BB_if_else133_239 = 9'd239;
parameter [8:0] LEGUP_F_main_BB_if_else133_240 = 9'd240;
parameter [8:0] LEGUP_F_main_BB_if_else133_241 = 9'd241;
parameter [8:0] LEGUP_F_main_BB_if_else133_242 = 9'd242;
parameter [8:0] LEGUP_F_main_BB_if_else133_243 = 9'd243;
parameter [8:0] LEGUP_F_main_BB_if_else133_244 = 9'd244;
parameter [8:0] LEGUP_F_main_BB_if_else133_245 = 9'd245;
parameter [8:0] LEGUP_F_main_BB_if_else133_246 = 9'd246;
parameter [8:0] LEGUP_F_main_BB_if_else133_247 = 9'd247;
parameter [8:0] LEGUP_F_main_BB_if_else133_248 = 9'd248;
parameter [8:0] LEGUP_F_main_BB_if_else133_249 = 9'd249;
parameter [8:0] LEGUP_F_main_BB_if_else133_250 = 9'd250;
parameter [8:0] LEGUP_F_main_BB_if_else133_251 = 9'd251;
parameter [8:0] LEGUP_F_main_BB_if_else133_252 = 9'd252;
parameter [8:0] LEGUP_F_main_BB_if_else133_253 = 9'd253;
parameter [8:0] LEGUP_F_main_BB_if_else147_254 = 9'd254;
parameter [8:0] LEGUP_F_main_BB_if_then149_255 = 9'd255;
parameter [8:0] LEGUP_F_main_BB_if_then149_256 = 9'd256;
parameter [8:0] LEGUP_F_main_BB_if_then149_257 = 9'd257;
parameter [8:0] LEGUP_F_main_BB_NodeBlock16_258 = 9'd258;
parameter [8:0] LEGUP_F_main_BB_LeafBlock14_259 = 9'd259;
parameter [8:0] LEGUP_F_main_BB_LeafBlock12_260 = 9'd260;
parameter [8:0] LEGUP_F_main_BB_if_then156_261 = 9'd261;
parameter [8:0] LEGUP_F_main_BB_if_then156_262 = 9'd262;
parameter [8:0] LEGUP_F_main_BB_if_then156_263 = 9'd263;
parameter [8:0] LEGUP_F_main_BB_if_then163_264 = 9'd264;
parameter [8:0] LEGUP_F_main_BB_if_then163_265 = 9'd265;
parameter [8:0] LEGUP_F_main_BB_if_then163_266 = 9'd266;
parameter [8:0] LEGUP_F_main_BB_if_else168_267 = 9'd267;
parameter [8:0] LEGUP_F_main_BB_if_else168_268 = 9'd268;
parameter [8:0] LEGUP_F_main_BB_if_else168_269 = 9'd269;
parameter [8:0] LEGUP_F_main_BB_if_end176_270 = 9'd270;
parameter [8:0] LEGUP_F_main_BB_if_end176_271 = 9'd271;
parameter [8:0] LEGUP_F_main_BB_if_end176_272 = 9'd272;
parameter [8:0] LEGUP_F_main_BB_if_then188_273 = 9'd273;
parameter [8:0] LEGUP_F_main_BB_if_then188_274 = 9'd274;
parameter [8:0] LEGUP_F_main_BB_if_else193_275 = 9'd275;
parameter [8:0] LEGUP_F_main_BB_if_then195_276 = 9'd276;
parameter [8:0] LEGUP_F_main_BB_if_end198_277 = 9'd277;
parameter [8:0] LEGUP_F_main_BB_sw_bb203_278 = 9'd278;
parameter [8:0] LEGUP_F_main_BB_if_then205_279 = 9'd279;
parameter [8:0] LEGUP_F_main_BB_if_end207_280 = 9'd280;
parameter [8:0] LEGUP_F_main_BB_if_end207_281 = 9'd281;
parameter [8:0] LEGUP_F_main_BB_if_end207_282 = 9'd282;
parameter [8:0] LEGUP_F_main_BB_if_end207_283 = 9'd283;
parameter [8:0] LEGUP_F_main_BB_if_end207_284 = 9'd284;
parameter [8:0] LEGUP_F_main_BB_if_end207_285 = 9'd285;
parameter [8:0] LEGUP_F_main_BB_if_end207_286 = 9'd286;
parameter [8:0] LEGUP_F_main_BB_if_end207_287 = 9'd287;
parameter [8:0] LEGUP_F_main_BB_if_end207_288 = 9'd288;
parameter [8:0] LEGUP_F_main_BB_if_end207_289 = 9'd289;
parameter [8:0] LEGUP_F_main_BB_if_end207_290 = 9'd290;
parameter [8:0] LEGUP_F_main_BB_if_end207_291 = 9'd291;
parameter [8:0] LEGUP_F_main_BB_if_end207_292 = 9'd292;
parameter [8:0] LEGUP_F_main_BB_if_end207_293 = 9'd293;
parameter [8:0] LEGUP_F_main_BB_if_end207_294 = 9'd294;
parameter [8:0] LEGUP_F_main_BB_if_end207_295 = 9'd295;
parameter [8:0] LEGUP_F_main_BB_if_end207_296 = 9'd296;
parameter [8:0] LEGUP_F_main_BB_if_end207_297 = 9'd297;
parameter [8:0] LEGUP_F_main_BB_if_end207_298 = 9'd298;
parameter [8:0] LEGUP_F_main_BB_if_end207_299 = 9'd299;
parameter [8:0] LEGUP_F_main_BB_if_end207_300 = 9'd300;
parameter [8:0] LEGUP_F_main_BB_if_end207_301 = 9'd301;
parameter [8:0] LEGUP_F_main_BB_if_end207_302 = 9'd302;
parameter [8:0] LEGUP_F_main_BB_if_end207_303 = 9'd303;
parameter [8:0] LEGUP_F_main_BB_if_end207_304 = 9'd304;
parameter [8:0] LEGUP_F_main_BB_if_end207_305 = 9'd305;
parameter [8:0] LEGUP_F_main_BB_if_end207_306 = 9'd306;
parameter [8:0] LEGUP_F_main_BB_if_end207_307 = 9'd307;
parameter [8:0] LEGUP_F_main_BB_if_end207_308 = 9'd308;
parameter [8:0] LEGUP_F_main_BB_if_end207_309 = 9'd309;
parameter [8:0] LEGUP_F_main_BB_if_end207_310 = 9'd310;
parameter [8:0] LEGUP_F_main_BB_if_end207_311 = 9'd311;
parameter [8:0] LEGUP_F_main_BB_if_end207_312 = 9'd312;
parameter [8:0] LEGUP_F_main_BB_NodeBlock23_313 = 9'd313;
parameter [8:0] LEGUP_F_main_BB_LeafBlock21_314 = 9'd314;
parameter [8:0] LEGUP_F_main_BB_LeafBlock19_315 = 9'd315;
parameter [8:0] LEGUP_F_main_BB_if_then212_316 = 9'd316;
parameter [8:0] LEGUP_F_main_BB_if_then219_317 = 9'd317;
parameter [8:0] LEGUP_F_main_BB_if_then226_318 = 9'd318;
parameter [8:0] LEGUP_F_main_BB_if_else231_319 = 9'd319;
parameter [8:0] LEGUP_F_main_BB_if_end238_320 = 9'd320;
parameter [8:0] LEGUP_F_main_BB_if_end238_321 = 9'd321;
parameter [8:0] LEGUP_F_main_BB_if_end238_322 = 9'd322;
parameter [8:0] LEGUP_F_main_BB_if_end238_323 = 9'd323;
parameter [8:0] LEGUP_F_main_BB_if_end238_324 = 9'd324;
parameter [8:0] LEGUP_F_main_BB_if_end238_325 = 9'd325;
parameter [8:0] LEGUP_F_main_BB_if_then251_326 = 9'd326;
parameter [8:0] LEGUP_F_main_BB_if_then251_327 = 9'd327;
parameter [8:0] LEGUP_F_main_BB_if_else257_328 = 9'd328;
parameter [8:0] LEGUP_F_main_BB_if_then259_329 = 9'd329;
parameter [8:0] LEGUP_F_main_BB_sw_bb268_330 = 9'd330;
parameter [8:0] LEGUP_F_main_BB_if_end271_331 = 9'd331;
parameter [8:0] LEGUP_F_main_BB_if_end271_332 = 9'd332;
parameter [8:0] LEGUP_F_main_BB_if_end271_333 = 9'd333;
parameter [8:0] LEGUP_F_main_BB_if_end271_334 = 9'd334;
parameter [8:0] LEGUP_F_main_BB_if_end271_335 = 9'd335;
parameter [8:0] LEGUP_F_main_BB_if_end271_336 = 9'd336;
parameter [8:0] LEGUP_F_main_BB_if_end271_337 = 9'd337;
parameter [8:0] LEGUP_F_main_BB_if_end271_338 = 9'd338;
parameter [8:0] LEGUP_F_main_BB_if_end271_339 = 9'd339;
parameter [8:0] LEGUP_F_main_BB_if_end271_340 = 9'd340;
parameter [8:0] LEGUP_F_main_BB_if_end271_341 = 9'd341;
parameter [8:0] LEGUP_F_main_BB_if_end271_342 = 9'd342;
parameter [8:0] LEGUP_F_main_BB_if_end271_343 = 9'd343;
parameter [8:0] LEGUP_F_main_BB_if_end271_344 = 9'd344;
parameter [8:0] LEGUP_F_main_BB_if_end271_345 = 9'd345;
parameter [8:0] LEGUP_F_main_BB_if_end271_346 = 9'd346;
parameter [8:0] LEGUP_F_main_BB_if_end271_347 = 9'd347;
parameter [8:0] LEGUP_F_main_BB_if_end271_348 = 9'd348;
parameter [8:0] LEGUP_F_main_BB_if_end271_349 = 9'd349;
parameter [8:0] LEGUP_F_main_BB_if_end271_350 = 9'd350;
parameter [8:0] LEGUP_F_main_BB_if_end271_351 = 9'd351;
parameter [8:0] LEGUP_F_main_BB_if_end271_352 = 9'd352;
parameter [8:0] LEGUP_F_main_BB_if_end271_353 = 9'd353;
parameter [8:0] LEGUP_F_main_BB_if_end271_354 = 9'd354;
parameter [8:0] LEGUP_F_main_BB_if_end271_355 = 9'd355;
parameter [8:0] LEGUP_F_main_BB_if_end271_356 = 9'd356;
parameter [8:0] LEGUP_F_main_BB_if_end271_357 = 9'd357;
parameter [8:0] LEGUP_F_main_BB_if_end271_358 = 9'd358;
parameter [8:0] LEGUP_F_main_BB_if_end271_359 = 9'd359;
parameter [8:0] LEGUP_F_main_BB_if_end271_360 = 9'd360;
parameter [8:0] LEGUP_F_main_BB_if_end271_361 = 9'd361;
parameter [8:0] LEGUP_F_main_BB_if_end271_362 = 9'd362;
parameter [8:0] LEGUP_F_main_BB_if_end271_363 = 9'd363;
parameter [8:0] LEGUP_F_main_BB_if_end271_364 = 9'd364;
parameter [8:0] LEGUP_F_main_BB_if_end271_365 = 9'd365;
parameter [8:0] LEGUP_F_main_BB_if_end271_366 = 9'd366;
parameter [8:0] LEGUP_F_main_BB_if_end271_367 = 9'd367;
parameter [8:0] LEGUP_F_main_BB_for_cond301_preheader_368 = 9'd368;
parameter [8:0] LEGUP_F_main_BB_for_cond301_preheader_369 = 9'd369;
parameter [8:0] LEGUP_F_main_BB_for_cond301_preheader_370 = 9'd370;
parameter [8:0] LEGUP_F_main_BB_for_cond301_preheader_371 = 9'd371;
parameter [8:0] LEGUP_F_main_BB_for_cond301_preheader_372 = 9'd372;
parameter [8:0] LEGUP_F_main_BB_for_end313_373 = 9'd373;
parameter [8:0] LEGUP_F_main_BB_cleanup_374 = 9'd374;

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
output  memory_controller_1_write_enable_a;
output [63:0] memory_controller_1_in_a;
output reg  memory_controller_1_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_a;
output reg [1:0] memory_controller_1_size_a;
input [63:0] memory_controller_1_out_a;
output  memory_controller_1_write_enable_b;
output [63:0] memory_controller_1_in_b;
output  memory_controller_1_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_b;
output [1:0] memory_controller_1_size_b;
input [63:0] memory_controller_1_out_b;
output  memory_controller_0_write_enable_a;
output [63:0] memory_controller_0_in_a;
output reg  memory_controller_0_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_a;
output reg [1:0] memory_controller_0_size_a;
input [63:0] memory_controller_0_out_a;
output  memory_controller_0_write_enable_b;
output [63:0] memory_controller_0_in_b;
output  memory_controller_0_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_b;
output [1:0] memory_controller_0_size_b;
input [63:0] memory_controller_0_out_b;
reg [8:0] cur_state/* synthesis syn_encoding="onehot" */;
reg [8:0] next_state;
wire  fsm_stall;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1496_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1496_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla495_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla495_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1521;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1521_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2522;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2522_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3523;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3523_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4524;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4524_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_1_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_2_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_3_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_4_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_18_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_18_reg;
reg [31:0] main_NodeBlock9_state_0;
reg [31:0] main_NodeBlock9_state_0_reg;
reg [31:0] main_NodeBlock9_i_0;
reg [31:0] main_NodeBlock9_i_0_reg;
reg [31:0] main_NodeBlock9_j_0;
reg [31:0] main_NodeBlock9_j_0_reg;
reg [31:0] main_NodeBlock9_a_0;
reg [31:0] main_NodeBlock9_a_0_reg;
reg [31:0] main_NodeBlock9_b_0;
reg [31:0] main_NodeBlock9_b_0_reg;
reg [31:0] main_NodeBlock9_pos_a_X_0;
reg [31:0] main_NodeBlock9_pos_a_X_0_reg;
reg [31:0] main_NodeBlock9_pos_a_Y_0;
reg [31:0] main_NodeBlock9_pos_a_Y_0_reg;
reg [31:0] main_NodeBlock9_pos_b_X_0;
reg [31:0] main_NodeBlock9_pos_b_X_0_reg;
reg [31:0] main_NodeBlock9_pos_b_Y_0;
reg [31:0] main_NodeBlock9_pos_b_Y_0_reg;
reg [31:0] main_NodeBlock9_sum_mesh_0;
reg [31:0] main_NodeBlock9_sum_mesh_0_reg;
reg [31:0] main_NodeBlock9_sum_1hop_0;
reg [31:0] main_NodeBlock9_sum_1hop_0_reg;
reg [31:0] main_NodeBlock9_seed_0;
reg [31:0] main_NodeBlock9_seed_0_reg;
reg  main_NodeBlock9_Pivot10;
reg  main_NodeBlock7_Pivot8;
reg  main_NodeBlock5_Pivot6;
reg  main_LeafBlock3_SwitchLeaf4;
reg [31:0] main_NodeBlock9_backedge_state_0_be;
reg [31:0] main_NodeBlock9_backedge_state_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_i_0_be;
reg [31:0] main_NodeBlock9_backedge_i_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_j_0_be;
reg [31:0] main_NodeBlock9_backedge_j_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_a_0_be;
reg [31:0] main_NodeBlock9_backedge_a_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_b_0_be;
reg [31:0] main_NodeBlock9_backedge_b_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_seed_0_be;
reg [31:0] main_NodeBlock9_backedge_seed_0_be_reg;
reg  main_NodeBlock1_Pivot2;
reg  main_NodeBlock_Pivot;
reg  main_LeafBlock_SwitchLeaf;
reg [31:0] main_sw_bb_0;
reg [31:0] main_sw_bb_0_reg;
reg [31:0] main_sw_bb_sub_i;
reg [31:0] main_sw_bb_xor2_i;
reg [3:0] main_sw_bb_rem;
reg [3:0] main_sw_bb_rem_reg;
reg [29:0] main_sw_bb_bit_select7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_sw_bb_arrayidx66;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_sw_bb_arrayidx66_reg;
reg [31:0] main_sw_bb_xor2_i16;
reg [31:0] main_sw_bb_xor2_i16_reg;
reg [3:0] main_sw_bb_rem68;
reg [3:0] main_sw_bb_rem68_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_sw_bb_arrayidx69;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_sw_bb_arrayidx69_reg;
reg [31:0] main_sw_bb_add70;
reg [31:0] main_sw_bb_add70_reg;
reg [31:0] main_sw_bb_bit_concat8;
reg [31:0] main_sw_bb_sr_add6;
reg [31:0] main_sw_bb_sr_add6_reg;
reg [31:0] main_sw_bb_arrayidx73_sum;
reg [31:0] main_sw_bb_arrayidx73_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_sw_bb_arrayidx74;
reg  main_sw_bb75_cmp76;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx77;
reg [31:0] main_if_end_1;
reg [31:0] main_if_end_1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx78;
reg [31:0] main_if_end_2;
reg [31:0] main_if_end_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx79;
reg [31:0] main_if_end_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx80;
reg [31:0] main_if_end_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx81;
reg [31:0] main_if_end_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx82;
reg [31:0] main_if_end_6;
reg  main_if_end_cmp83;
reg [1:0] main_if_end_1_var0;
reg [1:0] main_if_end_1_var0_reg;
reg  main_sw_bb86_cmp87;
reg [31:0] main_if_end89_sub_i14;
reg [31:0] main_if_end89_xor2_i15;
reg [3:0] main_if_end89_rem91;
reg [3:0] main_if_end89_rem91_reg;
reg [31:0] main_if_end89_add92;
reg [31:0] main_if_end89_add92_reg;
reg  main_if_end89_cmp93;
reg  main_if_end89_cmp93_reg;
reg  main_if_end89_cmp95;
reg  main_if_end89_cmp95_reg;
reg [31:0] main_if_then96_xor2_i13;
reg [3:0] main_if_then96_rem98;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then96_arrayidx99;
reg [31:0] main_if_then96_7;
reg [31:0] main_if_then96_7_reg;
reg [31:0] main_if_then96_add100;
reg [31:0] main_if_then96_add100_reg;
reg [31:0] main_if_then96_xor2_i12;
reg [31:0] main_if_then96_xor2_i12_reg;
reg [3:0] main_if_then96_rem103;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then96_arrayidx104;
reg [31:0] main_if_then96_8;
reg [31:0] main_if_then96_8_reg;
reg [31:0] main_if_then96_add105;
reg [31:0] main_if_then96_add106;
reg [31:0] main_if_then96_add106_reg;
reg  main_if_else107_cmp108;
reg [31:0] main_if_then109_xor2_i10;
reg [3:0] main_if_then109_rem111;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then109_arrayidx112;
reg [31:0] main_if_then109_9;
reg [31:0] main_if_then109_9_reg;
reg [31:0] main_if_then109_add113;
reg [31:0] main_if_then109_add113_reg;
reg [31:0] main_if_then109_xor2_i9;
reg [31:0] main_if_then109_xor2_i9_reg;
reg [3:0] main_if_then109_rem116;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then109_arrayidx117;
reg [31:0] main_if_then109_10;
reg [31:0] main_if_then109_10_reg;
reg [31:0] main_if_then109_add118;
reg [31:0] main_if_then109_add119;
reg [31:0] main_if_then109_add119_reg;
reg  main_if_else120_cmp121;
reg  main_if_else120_cmp121_reg;
reg [31:0] main_if_else120_xor2_i7;
reg [3:0] main_if_else120_rem124;
reg [3:0] main_if_else120_rem124_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then122_arrayidx125;
reg [31:0] main_if_then122_11;
reg [31:0] main_if_then122_add126;
reg [31:0] main_if_then122_add126_reg;
reg [31:0] main_if_then122_xor2_i6;
reg [3:0] main_if_then122_rem129;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then122_arrayidx130;
reg [31:0] main_if_then122_12;
reg [31:0] main_if_then122_12_reg;
reg [31:0] main_if_then122_add131;
reg [31:0] main_if_then122_add132;
reg [31:0] main_if_then122_add132_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else133_arrayidx136;
reg [31:0] main_if_else133_13;
reg [31:0] main_if_else133_add137;
reg [31:0] main_if_else133_add137_reg;
reg [31:0] main_if_else133_xor2_i4;
reg [3:0] main_if_else133_rem140;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else133_arrayidx141;
reg [31:0] main_if_else133_14;
reg [31:0] main_if_else133_14_reg;
reg [31:0] main_if_else133_add142;
reg [31:0] main_if_else133_add143;
reg [31:0] main_if_else133_add143_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then149_arrayidx150;
reg [31:0] main_if_then149_15;
reg [31:0] main_if_then149_add151;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then149_arrayidx152;
reg [31:0] main_if_then149_16;
reg [31:0] main_if_then149_add153;
reg  main_NodeBlock16_Pivot17;
reg  main_LeafBlock14_SwitchLeaf15;
reg  main_LeafBlock12_SwitchLeaf13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then156_arrayidx157;
reg [31:0] main_if_then156_17;
reg [31:0] main_if_then156_add158;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then156_arrayidx159;
reg [31:0] main_if_then156_18;
reg [31:0] main_if_then156_add160;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then163_arrayidx164;
reg [31:0] main_if_then163_19;
reg [31:0] main_if_then163_add165;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then163_arrayidx166;
reg [31:0] main_if_then163_20;
reg [31:0] main_if_then163_add167;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else168_arrayidx169;
reg [31:0] main_if_else168_21;
reg [31:0] main_if_else168_add170;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else168_arrayidx171;
reg [31:0] main_if_else168_22;
reg [31:0] main_if_else168_add172;
reg [31:0] main_if_end176_xi_0;
reg [31:0] main_if_end176_xi_0_reg;
reg [31:0] main_if_end176_xj_0;
reg [31:0] main_if_end176_xj_0_reg;
reg [31:0] main_if_end176_seed_1;
reg [31:0] main_if_end176_seed_1_reg;
reg [29:0] main_if_end176_bit_select5;
reg [31:0] main_if_end176_inc177;
reg [31:0] main_if_end176_inc177_reg;
reg [31:0] main_if_end176_bit_concat6;
reg [31:0] main_if_end176_sr_add;
reg [31:0] main_if_end176_arrayidx178_sum;
reg [31:0] main_if_end176_arrayidx178_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end176_arrayidx179;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end176_arrayidx179_reg;
reg [31:0] main_if_end176_23;
reg  main_if_end176_cmp180;
reg  main_if_end176_24;
reg  main_if_end176_24_reg;
reg  main_if_end176_or_cond;
reg  main_if_end176_25;
reg  main_if_end176_25_reg;
reg  main_if_end176_or_cond501;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then188_arrayidx191;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then188_arrayidx192;
reg  main_if_else193_cmp194;
reg [31:0] main_if_end198_pos_a_X_1;
reg [31:0] main_if_end198_pos_a_X_1_reg;
reg [31:0] main_if_end198_pos_a_Y_1;
reg [31:0] main_if_end198_pos_a_Y_1_reg;
reg  main_if_end198_cmp199;
reg [1:0] main_if_end198_502;
reg [31:0] main_if_end198_inc177_1;
reg  main_sw_bb203_cmp204;
reg [31:0] main_if_then205_inc206;
reg [31:0] main_if_end207_sub_i1;
reg [31:0] main_if_end207_xor2_i2;
reg [3:0] main_if_end207_rem209;
reg [3:0] main_if_end207_rem209_reg;
reg [31:0] main_if_end207_add210;
reg [31:0] main_if_end207_add210_reg;
reg  main_if_end207_Pivot26;
reg  main_NodeBlock23_Pivot24;
reg  main_LeafBlock21_SwitchLeaf22;
reg  main_LeafBlock19_SwitchLeaf20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then212_arrayidx213;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then212_arrayidx215;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then219_arrayidx220;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then219_arrayidx222;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then226_arrayidx227;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then226_arrayidx229;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else231_arrayidx232;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else231_arrayidx234;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end238_pn_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end238_pn_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end238_pn500_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end238_pn500_in_reg;
reg [31:0] main_if_end238_pn500;
reg [31:0] main_if_end238_pn;
reg [31:0] main_if_end238_xj_1;
reg [31:0] main_if_end238_xj_1_reg;
reg [31:0] main_if_end238_xi_1;
reg [31:0] main_if_end238_xi_1_reg;
reg [29:0] main_if_end238_bit_select3;
reg [31:0] main_if_end238_bit_concat4;
reg [31:0] main_if_end238_sr_add9;
reg [31:0] main_if_end238_sr_add9_reg;
reg [31:0] main_if_end238_arrayidx240_sum;
reg [31:0] main_if_end238_arrayidx240_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end238_arrayidx241;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end238_arrayidx241_reg;
reg [31:0] main_if_end238_26;
reg  main_if_end238_cmp242;
reg  main_if_end238_27;
reg  main_if_end238_27_reg;
reg  main_if_end238_or_cond503;
reg  main_if_end238_28;
reg  main_if_end238_28_reg;
reg  main_if_end238_or_cond504;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then251_arrayidx254;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then251_arrayidx255;
reg [31:0] main_if_then251_inc256;
reg [31:0] main_if_then251_inc256_reg;
reg [31:0] main_if_else257_inc239;
reg  main_if_else257_cmp258;
reg  main_sw_bb268_cmp269;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end271_arrayidx272;
reg [31:0] main_if_end271_29;
reg [31:0] main_if_end271_29_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end271_arrayidx273;
reg [31:0] main_if_end271_30;
reg [31:0] main_if_end271_30_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end271_arrayidx274;
reg [31:0] main_if_end271_31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end271_arrayidx275;
reg [31:0] main_if_end271_32;
reg [31:0] main_if_end271_sub;
reg [31:0] main_if_end271_sub_reg;
reg  main_if_end271_bit_select2;
reg  main_if_end271_bit_select2_reg;
reg [31:0] main_if_end271_mul;
reg [31:0] main_if_end271_mul_reg;
reg [31:0] main_if_end271_mul_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end271_arrayidx279;
reg [31:0] main_if_end271_33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end271_arrayidx280;
reg [31:0] main_if_end271_34;
reg [31:0] main_if_end271_sub281;
reg [31:0] main_if_end271_sub281_reg;
reg  main_if_end271_bit_select1;
reg  main_if_end271_bit_select1_reg;
reg [31:0] main_if_end271_mul284;
reg [31:0] main_if_end271_mul284_reg;
reg [31:0] main_if_end271_diff_pos_y_0;
reg [31:0] main_if_end271_diff_pos_y_0_reg;
reg [31:0] main_if_end271_add286;
reg [31:0] main_if_end271_add286_reg;
reg [31:0] main_if_end271_newEarly_add288;
reg [31:0] main_if_end271_newEarly_add288_reg;
reg [31:0] main_if_end271_newCurOp_add288;
reg [31:0] main_if_end271_newCurOp_add288_reg;
reg [30:0] main_if_end271_div;
reg [3:0] main_if_end271_rem289;
reg [30:0] main_if_end271_div291;
reg [3:0] main_if_end271_rem292;
reg [31:0] main_if_end271_add293;
reg [31:0] main_if_end271_add293_reg;
reg [31:0] main_if_end271_newEarly_add294;
reg [31:0] main_if_end271_newEarly_add294_reg;
reg [31:0] main_if_end271_newEarly_sub295;
reg [31:0] main_if_end271_newEarly_add296;
reg [31:0] main_if_end271_newCurOp_add296;
reg [31:0] main_if_end271_inc297;
reg [31:0] main_if_end271_inc297_reg;
reg [2:0] main_for_cond301_preheader_i_3511;
reg [2:0] main_for_cond301_preheader_i_3511_reg;
reg [29:0] main_for_cond301_preheader_bit_select;
reg [31:0] main_for_cond301_preheader_bit_concat;
reg [31:0] main_for_cond301_preheader_sr_add11;
reg [31:0] main_for_cond301_preheader_sr_add11_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305;
reg [31:0] main_for_cond301_preheader_35;
reg [31:0] main_for_cond301_preheader_35_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305_1;
reg [31:0] main_for_cond301_preheader_36;
reg [31:0] main_for_cond301_preheader_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305_2_reg;
reg [31:0] main_for_cond301_preheader_37;
reg [31:0] main_for_cond301_preheader_37_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305_3_reg;
reg [31:0] main_for_cond301_preheader_38;
reg [31:0] main_for_cond301_preheader_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond301_preheader_arrayidx305_4_reg;
reg [31:0] main_for_cond301_preheader_39;
reg [31:0] main_for_cond301_preheader_40;
reg [31:0] main_for_cond301_preheader_41;
reg [31:0] main_for_cond301_preheader_42;
reg [31:0] main_for_cond301_preheader_43;
reg [3:0] main_for_cond301_preheader_44;
reg [3:0] main_for_cond301_preheader_44_reg;
reg  main_for_cond301_preheader_exitcond;
reg  main_for_cond301_preheader_exitcond_reg;
reg  main_cleanup_retval_0;
reg  main_cleanup_retval_0_reg;
reg [4:0] main_entry_vla495_address_a;
reg  main_entry_vla495_write_enable_a;
reg [31:0] main_entry_vla495_in_a;
wire [31:0] main_entry_vla495_out_a;
reg [4:0] main_entry_vla495_address_b;
reg  main_entry_vla495_write_enable_b;
reg [31:0] main_entry_vla495_in_b;
wire [31:0] main_entry_vla495_out_b;
reg [4:0] main_entry_vla1496_address_a;
reg  main_entry_vla1496_write_enable_a;
reg [31:0] main_entry_vla1496_in_a;
wire [31:0] main_entry_vla1496_out_a;
reg [4:0] main_entry_vla1496_address_b;
reg  main_entry_vla1496_write_enable_b;
reg [31:0] main_entry_vla1496_in_b;
wire [31:0] main_entry_vla1496_out_b;
reg [4:0] main_entry_vla2497_address_a;
reg  main_entry_vla2497_write_enable_a;
reg [31:0] main_entry_vla2497_in_a;
wire [31:0] main_entry_vla2497_out_a;
reg [4:0] main_entry_vla2497_address_b;
reg  main_entry_vla2497_write_enable_b;
reg [31:0] main_entry_vla2497_in_b;
wire [31:0] main_entry_vla2497_out_b;
reg [4:0] main_entry_vla3498_address_a;
reg  main_entry_vla3498_write_enable_a;
reg [31:0] main_entry_vla3498_in_a;
wire [31:0] main_entry_vla3498_out_a;
reg [4:0] main_entry_vla3498_address_b;
reg  main_entry_vla3498_write_enable_b;
reg [31:0] main_entry_vla3498_in_b;
wire [31:0] main_entry_vla3498_out_b;
reg [4:0] main_entry_vla4499_address_a;
reg  main_entry_vla4499_write_enable_a;
reg [31:0] main_entry_vla4499_in_a;
wire [31:0] main_entry_vla4499_out_a;
reg [4:0] main_entry_vla4499_address_b;
reg  main_entry_vla4499_write_enable_b;
reg [31:0] main_entry_vla4499_in_b;
wire [31:0] main_entry_vla4499_out_b;
reg [31:0] main_signed_modulus_32_0_op0;
reg [4:0] main_signed_modulus_32_0_op1;
reg  main_signed_modulus_32_0_inst_clock;
reg  main_signed_modulus_32_0_inst_aclr;
reg  main_signed_modulus_32_0_inst_clken;
reg [31:0] main_signed_modulus_32_0_inst_numer;
reg [4:0] main_signed_modulus_32_0_inst_denom;
wire [31:0] main_signed_modulus_32_0_inst_quotient;
wire [4:0] main_signed_modulus_32_0_inst_remain;
reg [4:0] divide_main_sw_bb_rem_temp_out;
reg  divide_main_sw_bb_rem_en;
reg [3:0] divide_main_sw_bb_rem_out;
reg [3:0] main_signed_modulus_32_0;
reg [31:0] main_signed_divide_32_0_op0;
reg [3:0] main_signed_divide_32_0_op1;
reg  main_signed_divide_32_0_inst_clock;
reg  main_signed_divide_32_0_inst_aclr;
reg  main_signed_divide_32_0_inst_clken;
reg [31:0] main_signed_divide_32_0_inst_numer;
reg [3:0] main_signed_divide_32_0_inst_denom;
wire [31:0] main_signed_divide_32_0_inst_quotient;
wire [3:0] main_signed_divide_32_0_inst_remain;
reg [31:0] divide_main_if_end271_div_temp_out;
reg  divide_main_if_end271_div_en;
reg [30:0] divide_main_if_end271_div_out;
reg [30:0] main_signed_divide_32_0;
wire [3:0] main_NodeBlock9_Pivot10_op1_temp;
wire [4:0] main_NodeBlock7_Pivot8_op1_temp;
wire [4:0] main_NodeBlock5_Pivot6_op1_temp;
wire [2:0] main_NodeBlock1_Pivot2_op1_temp;
wire [3:0] main_NodeBlock_Pivot_op1_temp;
reg [29:0] main_sw_bb_rem_width_extended;
wire [1:0] main_sw_bb_bit_concat8_bit_select_operand_2;
wire [3:0] main_NodeBlock16_Pivot17_op1_temp;
wire [1:0] main_if_end176_bit_concat6_bit_select_operand_2;
wire [7:0] main_if_else193_cmp194_op1_temp;
wire [2:0] main_if_end207_Pivot26_op1_temp;
wire [3:0] main_NodeBlock23_Pivot24_op1_temp;
wire [1:0] main_if_end238_bit_concat4_bit_select_operand_2;
wire [7:0] main_if_else257_cmp258_op1_temp;
reg [29:0] main_for_cond301_preheader_i_3511_reg_width_extended;
wire [1:0] main_for_cond301_preheader_bit_concat_bit_select_operand_2;

/*   %rem = srem i32 %xor2.i, 5, !dbg !148, !MSB !150, !LSB !67, !extendFrom !150*/
lpm_divide main_signed_modulus_32_0_inst (
	.clock (main_signed_modulus_32_0_inst_clock),
	.aclr (main_signed_modulus_32_0_inst_aclr),
	.clken (main_signed_modulus_32_0_inst_clken),
	.numer (main_signed_modulus_32_0_inst_numer),
	.denom (main_signed_modulus_32_0_inst_denom),
	.quotient (main_signed_modulus_32_0_inst_quotient),
	.remain (main_signed_modulus_32_0_inst_remain)
);

defparam
	main_signed_modulus_32_0_inst.lpm_widthn = 32,
	main_signed_modulus_32_0_inst.lpm_widthd = 5,
	main_signed_modulus_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_modulus_32_0_inst.lpm_pipeline = 32;

/*   %div = sdiv i32 %mul.sub, 2, !dbg !312, !MSB !139, !LSB !67, !extendFrom !313*/
lpm_divide main_signed_divide_32_0_inst (
	.clock (main_signed_divide_32_0_inst_clock),
	.aclr (main_signed_divide_32_0_inst_aclr),
	.clken (main_signed_divide_32_0_inst_clken),
	.numer (main_signed_divide_32_0_inst_numer),
	.denom (main_signed_divide_32_0_inst_denom),
	.quotient (main_signed_divide_32_0_inst_quotient),
	.remain (main_signed_divide_32_0_inst_remain)
);

defparam
	main_signed_divide_32_0_inst.lpm_widthn = 32,
	main_signed_divide_32_0_inst.lpm_widthd = 4,
	main_signed_divide_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_divide_32_0_inst.lpm_pipeline = 32;



//   %vla495 = alloca [22 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla495 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla495_address_a ),
	.wren_a( main_entry_vla495_write_enable_a ),
	.data_a( main_entry_vla495_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla495_out_a ),
	.address_b( main_entry_vla495_address_b ),
	.wren_b( main_entry_vla495_write_enable_b ),
	.data_b( main_entry_vla495_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla495_out_b )
);
defparam main_entry_vla495.width_a = 32;
defparam main_entry_vla495.widthad_a = 5;
defparam main_entry_vla495.width_be_a = 4;
defparam main_entry_vla495.numwords_a = 22;
defparam main_entry_vla495.width_b = 32;
defparam main_entry_vla495.widthad_b = 5;
defparam main_entry_vla495.width_be_b = 4;
defparam main_entry_vla495.numwords_b = 22;
defparam main_entry_vla495.latency = 1;


//   %vla1496 = alloca [22 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla1496 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla1496_address_a ),
	.wren_a( main_entry_vla1496_write_enable_a ),
	.data_a( main_entry_vla1496_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla1496_out_a ),
	.address_b( main_entry_vla1496_address_b ),
	.wren_b( main_entry_vla1496_write_enable_b ),
	.data_b( main_entry_vla1496_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla1496_out_b )
);
defparam main_entry_vla1496.width_a = 32;
defparam main_entry_vla1496.widthad_a = 5;
defparam main_entry_vla1496.width_be_a = 4;
defparam main_entry_vla1496.numwords_a = 22;
defparam main_entry_vla1496.width_b = 32;
defparam main_entry_vla1496.widthad_b = 5;
defparam main_entry_vla1496.width_be_b = 4;
defparam main_entry_vla1496.numwords_b = 22;
defparam main_entry_vla1496.latency = 1;


//   %vla2497 = alloca [19 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla2497 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla2497_address_a ),
	.wren_a( main_entry_vla2497_write_enable_a ),
	.data_a( main_entry_vla2497_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla2497_out_a ),
	.address_b( main_entry_vla2497_address_b ),
	.wren_b( main_entry_vla2497_write_enable_b ),
	.data_b( main_entry_vla2497_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla2497_out_b )
);
defparam main_entry_vla2497.width_a = 32;
defparam main_entry_vla2497.widthad_a = 5;
defparam main_entry_vla2497.width_be_a = 4;
defparam main_entry_vla2497.numwords_a = 19;
defparam main_entry_vla2497.width_b = 32;
defparam main_entry_vla2497.widthad_b = 5;
defparam main_entry_vla2497.width_be_b = 4;
defparam main_entry_vla2497.numwords_b = 19;
defparam main_entry_vla2497.latency = 1;


//   %vla3498 = alloca [19 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla3498 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla3498_address_a ),
	.wren_a( main_entry_vla3498_write_enable_a ),
	.data_a( main_entry_vla3498_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla3498_out_a ),
	.address_b( main_entry_vla3498_address_b ),
	.wren_b( main_entry_vla3498_write_enable_b ),
	.data_b( main_entry_vla3498_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla3498_out_b )
);
defparam main_entry_vla3498.width_a = 32;
defparam main_entry_vla3498.widthad_a = 5;
defparam main_entry_vla3498.width_be_a = 4;
defparam main_entry_vla3498.numwords_a = 19;
defparam main_entry_vla3498.width_b = 32;
defparam main_entry_vla3498.widthad_b = 5;
defparam main_entry_vla3498.width_be_b = 4;
defparam main_entry_vla3498.numwords_b = 19;
defparam main_entry_vla3498.latency = 1;


//   %vla4499 = alloca [25 x i32], align 4, !dbg !69, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla4499 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla4499_address_a ),
	.wren_a( main_entry_vla4499_write_enable_a ),
	.data_a( main_entry_vla4499_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla4499_out_a ),
	.address_b( main_entry_vla4499_address_b ),
	.wren_b( main_entry_vla4499_write_enable_b ),
	.data_b( main_entry_vla4499_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla4499_out_b )
);
defparam main_entry_vla4499.width_a = 32;
defparam main_entry_vla4499.widthad_a = 5;
defparam main_entry_vla4499.width_be_a = 4;
defparam main_entry_vla4499.numwords_a = 25;
defparam main_entry_vla4499.width_b = 32;
defparam main_entry_vla4499.widthad_b = 5;
defparam main_entry_vla4499.width_be_b = 4;
defparam main_entry_vla4499.numwords_b = 25;
defparam main_entry_vla4499.latency = 1;

/* Unsynthesizable Statements */
/* synthesis translate_off */
always @(posedge clk)
	if (!fsm_stall) begin
	if ((cur_state == LEGUP_F_main_BB_if_then195_276)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_if_then259_329)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_370)) begin
		$write("%3d ", $signed(main_for_cond301_preheader_39));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond301_preheader_39) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_370)) begin
		$write("%3d ", $signed(main_for_cond301_preheader_40));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond301_preheader_40) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_371)) begin
		$write("%3d ", $signed(main_for_cond301_preheader_41));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond301_preheader_41) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_371)) begin
		$write("%3d ", $signed(main_for_cond301_preheader_42));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond301_preheader_42) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_372)) begin
		$write("%3d ", $signed(main_for_cond301_preheader_43));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond301_preheader_43) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_372)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_end313_373)) begin
		$write("\nEvaluation = %d\nEvaluation 1-hop = %d\n", $signed(main_NodeBlock9_sum_mesh_0_reg), $signed(main_NodeBlock9_sum_1hop_0_reg));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_mesh_0_reg) === 1'bX) finish <= 0;
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_1hop_0_reg) === 1'bX) finish <= 0;
	end
end
/* synthesis translate_on */
always @(posedge clk) begin
if (reset == 1'b1)
	cur_state <= LEGUP_0;
else if (!fsm_stall)
	cur_state <= next_state;
end

always @(*)
begin
next_state = cur_state;
case(cur_state)  /* synthesis parallel_case */
LEGUP_0:
	if ((fsm_stall == 1'd0) && (start == 1'd1))
		next_state = LEGUP_F_main_BB_entry_1;
LEGUP_F_main_BB_LeafBlock12_260:
	if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then156_261;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else168_267;
LEGUP_F_main_BB_LeafBlock14_259:
	if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then163_264;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else168_267;
LEGUP_F_main_BB_LeafBlock19_315:
	if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then212_316;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else231_319;
LEGUP_F_main_BB_LeafBlock21_314:
	if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then226_318;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else231_319;
LEGUP_F_main_BB_LeafBlock3_5:
	if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond301_preheader_preheader_7;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_LeafBlock_10:
	if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb_11;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_NodeBlock16_258:
	if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock12_260;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock14_259;
LEGUP_F_main_BB_NodeBlock1_8:
	if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock_10;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock_9;
LEGUP_F_main_BB_NodeBlock23_313:
	if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then219_317;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock21_314;
LEGUP_F_main_BB_NodeBlock5_4:
	if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb268_330;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock3_5;
LEGUP_F_main_BB_NodeBlock7_3:
	if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb203_278;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock5_4;
LEGUP_F_main_BB_NodeBlock9_2:
	if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock1_8;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock7_3;
LEGUP_F_main_BB_NodeBlock9_backedge_6:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_NodeBlock_9:
	if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb75_47;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd0))
		next_state = LEGUP_F_main_BB_sw_bb86_51;
LEGUP_F_main_BB_cleanup_374:
		next_state = LEGUP_0;
LEGUP_F_main_BB_entry_1:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_for_cond301_preheader_368:
		next_state = LEGUP_F_main_BB_for_cond301_preheader_369;
LEGUP_F_main_BB_for_cond301_preheader_369:
		next_state = LEGUP_F_main_BB_for_cond301_preheader_370;
LEGUP_F_main_BB_for_cond301_preheader_370:
		next_state = LEGUP_F_main_BB_for_cond301_preheader_371;
LEGUP_F_main_BB_for_cond301_preheader_371:
		next_state = LEGUP_F_main_BB_for_cond301_preheader_372;
LEGUP_F_main_BB_for_cond301_preheader_372:
	if ((fsm_stall == 1'd0) && (main_for_cond301_preheader_exitcond_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end313_373;
	else if ((fsm_stall == 1'd0) && (main_for_cond301_preheader_exitcond_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond301_preheader_368;
LEGUP_F_main_BB_for_cond301_preheader_preheader_7:
		next_state = LEGUP_F_main_BB_for_cond301_preheader_368;
LEGUP_F_main_BB_for_end313_373:
		next_state = LEGUP_F_main_BB_cleanup_374;
LEGUP_F_main_BB_if_else107_120:
	if ((fsm_stall == 1'd0) && (main_if_else107_cmp108 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then109_121;
	else if ((fsm_stall == 1'd0) && (main_if_else107_cmp108 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else120_155;
LEGUP_F_main_BB_if_else120_155:
		next_state = LEGUP_F_main_BB_if_else120_156;
LEGUP_F_main_BB_if_else120_156:
		next_state = LEGUP_F_main_BB_if_else120_157;
LEGUP_F_main_BB_if_else120_157:
		next_state = LEGUP_F_main_BB_if_else120_158;
LEGUP_F_main_BB_if_else120_158:
		next_state = LEGUP_F_main_BB_if_else120_159;
LEGUP_F_main_BB_if_else120_159:
		next_state = LEGUP_F_main_BB_if_else120_160;
LEGUP_F_main_BB_if_else120_160:
		next_state = LEGUP_F_main_BB_if_else120_161;
LEGUP_F_main_BB_if_else120_161:
		next_state = LEGUP_F_main_BB_if_else120_162;
LEGUP_F_main_BB_if_else120_162:
		next_state = LEGUP_F_main_BB_if_else120_163;
LEGUP_F_main_BB_if_else120_163:
		next_state = LEGUP_F_main_BB_if_else120_164;
LEGUP_F_main_BB_if_else120_164:
		next_state = LEGUP_F_main_BB_if_else120_165;
LEGUP_F_main_BB_if_else120_165:
		next_state = LEGUP_F_main_BB_if_else120_166;
LEGUP_F_main_BB_if_else120_166:
		next_state = LEGUP_F_main_BB_if_else120_167;
LEGUP_F_main_BB_if_else120_167:
		next_state = LEGUP_F_main_BB_if_else120_168;
LEGUP_F_main_BB_if_else120_168:
		next_state = LEGUP_F_main_BB_if_else120_169;
LEGUP_F_main_BB_if_else120_169:
		next_state = LEGUP_F_main_BB_if_else120_170;
LEGUP_F_main_BB_if_else120_170:
		next_state = LEGUP_F_main_BB_if_else120_171;
LEGUP_F_main_BB_if_else120_171:
		next_state = LEGUP_F_main_BB_if_else120_172;
LEGUP_F_main_BB_if_else120_172:
		next_state = LEGUP_F_main_BB_if_else120_173;
LEGUP_F_main_BB_if_else120_173:
		next_state = LEGUP_F_main_BB_if_else120_174;
LEGUP_F_main_BB_if_else120_174:
		next_state = LEGUP_F_main_BB_if_else120_175;
LEGUP_F_main_BB_if_else120_175:
		next_state = LEGUP_F_main_BB_if_else120_176;
LEGUP_F_main_BB_if_else120_176:
		next_state = LEGUP_F_main_BB_if_else120_177;
LEGUP_F_main_BB_if_else120_177:
		next_state = LEGUP_F_main_BB_if_else120_178;
LEGUP_F_main_BB_if_else120_178:
		next_state = LEGUP_F_main_BB_if_else120_179;
LEGUP_F_main_BB_if_else120_179:
		next_state = LEGUP_F_main_BB_if_else120_180;
LEGUP_F_main_BB_if_else120_180:
		next_state = LEGUP_F_main_BB_if_else120_181;
LEGUP_F_main_BB_if_else120_181:
		next_state = LEGUP_F_main_BB_if_else120_182;
LEGUP_F_main_BB_if_else120_182:
		next_state = LEGUP_F_main_BB_if_else120_183;
LEGUP_F_main_BB_if_else120_183:
		next_state = LEGUP_F_main_BB_if_else120_184;
LEGUP_F_main_BB_if_else120_184:
		next_state = LEGUP_F_main_BB_if_else120_185;
LEGUP_F_main_BB_if_else120_185:
		next_state = LEGUP_F_main_BB_if_else120_186;
LEGUP_F_main_BB_if_else120_186:
		next_state = LEGUP_F_main_BB_if_else120_187;
LEGUP_F_main_BB_if_else120_187:
	if ((fsm_stall == 1'd0) && (main_if_else120_cmp121_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then122_188;
	else if ((fsm_stall == 1'd0) && (main_if_else120_cmp121_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else133_221;
LEGUP_F_main_BB_if_else133_221:
		next_state = LEGUP_F_main_BB_if_else133_222;
LEGUP_F_main_BB_if_else133_222:
		next_state = LEGUP_F_main_BB_if_else133_223;
LEGUP_F_main_BB_if_else133_223:
		next_state = LEGUP_F_main_BB_if_else133_224;
LEGUP_F_main_BB_if_else133_224:
		next_state = LEGUP_F_main_BB_if_else133_225;
LEGUP_F_main_BB_if_else133_225:
		next_state = LEGUP_F_main_BB_if_else133_226;
LEGUP_F_main_BB_if_else133_226:
		next_state = LEGUP_F_main_BB_if_else133_227;
LEGUP_F_main_BB_if_else133_227:
		next_state = LEGUP_F_main_BB_if_else133_228;
LEGUP_F_main_BB_if_else133_228:
		next_state = LEGUP_F_main_BB_if_else133_229;
LEGUP_F_main_BB_if_else133_229:
		next_state = LEGUP_F_main_BB_if_else133_230;
LEGUP_F_main_BB_if_else133_230:
		next_state = LEGUP_F_main_BB_if_else133_231;
LEGUP_F_main_BB_if_else133_231:
		next_state = LEGUP_F_main_BB_if_else133_232;
LEGUP_F_main_BB_if_else133_232:
		next_state = LEGUP_F_main_BB_if_else133_233;
LEGUP_F_main_BB_if_else133_233:
		next_state = LEGUP_F_main_BB_if_else133_234;
LEGUP_F_main_BB_if_else133_234:
		next_state = LEGUP_F_main_BB_if_else133_235;
LEGUP_F_main_BB_if_else133_235:
		next_state = LEGUP_F_main_BB_if_else133_236;
LEGUP_F_main_BB_if_else133_236:
		next_state = LEGUP_F_main_BB_if_else133_237;
LEGUP_F_main_BB_if_else133_237:
		next_state = LEGUP_F_main_BB_if_else133_238;
LEGUP_F_main_BB_if_else133_238:
		next_state = LEGUP_F_main_BB_if_else133_239;
LEGUP_F_main_BB_if_else133_239:
		next_state = LEGUP_F_main_BB_if_else133_240;
LEGUP_F_main_BB_if_else133_240:
		next_state = LEGUP_F_main_BB_if_else133_241;
LEGUP_F_main_BB_if_else133_241:
		next_state = LEGUP_F_main_BB_if_else133_242;
LEGUP_F_main_BB_if_else133_242:
		next_state = LEGUP_F_main_BB_if_else133_243;
LEGUP_F_main_BB_if_else133_243:
		next_state = LEGUP_F_main_BB_if_else133_244;
LEGUP_F_main_BB_if_else133_244:
		next_state = LEGUP_F_main_BB_if_else133_245;
LEGUP_F_main_BB_if_else133_245:
		next_state = LEGUP_F_main_BB_if_else133_246;
LEGUP_F_main_BB_if_else133_246:
		next_state = LEGUP_F_main_BB_if_else133_247;
LEGUP_F_main_BB_if_else133_247:
		next_state = LEGUP_F_main_BB_if_else133_248;
LEGUP_F_main_BB_if_else133_248:
		next_state = LEGUP_F_main_BB_if_else133_249;
LEGUP_F_main_BB_if_else133_249:
		next_state = LEGUP_F_main_BB_if_else133_250;
LEGUP_F_main_BB_if_else133_250:
		next_state = LEGUP_F_main_BB_if_else133_251;
LEGUP_F_main_BB_if_else133_251:
		next_state = LEGUP_F_main_BB_if_else133_252;
LEGUP_F_main_BB_if_else133_252:
		next_state = LEGUP_F_main_BB_if_else133_253;
LEGUP_F_main_BB_if_else133_253:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_else147_254:
	if ((fsm_stall == 1'd0) && (main_if_end89_cmp95_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then149_255;
	else if ((fsm_stall == 1'd0) && (main_if_end89_cmp95_reg == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock16_258;
LEGUP_F_main_BB_if_else168_267:
		next_state = LEGUP_F_main_BB_if_else168_268;
LEGUP_F_main_BB_if_else168_268:
		next_state = LEGUP_F_main_BB_if_else168_269;
LEGUP_F_main_BB_if_else168_269:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_else193_275:
	if ((fsm_stall == 1'd0) && (main_if_else193_cmp194 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then195_276;
	else if ((fsm_stall == 1'd0) && (main_if_else193_cmp194 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end198_277;
LEGUP_F_main_BB_if_else231_319:
		next_state = LEGUP_F_main_BB_if_end238_320;
LEGUP_F_main_BB_if_else257_328:
	if ((fsm_stall == 1'd0) && (main_if_else257_cmp258 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then259_329;
	else if ((fsm_stall == 1'd0) && (main_if_else257_cmp258 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end176_270:
		next_state = LEGUP_F_main_BB_if_end176_271;
LEGUP_F_main_BB_if_end176_271:
		next_state = LEGUP_F_main_BB_if_end176_272;
LEGUP_F_main_BB_if_end176_272:
	if ((fsm_stall == 1'd0) && (main_if_end176_or_cond501 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then188_273;
	else if ((fsm_stall == 1'd0) && (main_if_end176_or_cond501 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else193_275;
LEGUP_F_main_BB_if_end198_277:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end207_280:
		next_state = LEGUP_F_main_BB_if_end207_281;
LEGUP_F_main_BB_if_end207_281:
		next_state = LEGUP_F_main_BB_if_end207_282;
LEGUP_F_main_BB_if_end207_282:
		next_state = LEGUP_F_main_BB_if_end207_283;
LEGUP_F_main_BB_if_end207_283:
		next_state = LEGUP_F_main_BB_if_end207_284;
LEGUP_F_main_BB_if_end207_284:
		next_state = LEGUP_F_main_BB_if_end207_285;
LEGUP_F_main_BB_if_end207_285:
		next_state = LEGUP_F_main_BB_if_end207_286;
LEGUP_F_main_BB_if_end207_286:
		next_state = LEGUP_F_main_BB_if_end207_287;
LEGUP_F_main_BB_if_end207_287:
		next_state = LEGUP_F_main_BB_if_end207_288;
LEGUP_F_main_BB_if_end207_288:
		next_state = LEGUP_F_main_BB_if_end207_289;
LEGUP_F_main_BB_if_end207_289:
		next_state = LEGUP_F_main_BB_if_end207_290;
LEGUP_F_main_BB_if_end207_290:
		next_state = LEGUP_F_main_BB_if_end207_291;
LEGUP_F_main_BB_if_end207_291:
		next_state = LEGUP_F_main_BB_if_end207_292;
LEGUP_F_main_BB_if_end207_292:
		next_state = LEGUP_F_main_BB_if_end207_293;
LEGUP_F_main_BB_if_end207_293:
		next_state = LEGUP_F_main_BB_if_end207_294;
LEGUP_F_main_BB_if_end207_294:
		next_state = LEGUP_F_main_BB_if_end207_295;
LEGUP_F_main_BB_if_end207_295:
		next_state = LEGUP_F_main_BB_if_end207_296;
LEGUP_F_main_BB_if_end207_296:
		next_state = LEGUP_F_main_BB_if_end207_297;
LEGUP_F_main_BB_if_end207_297:
		next_state = LEGUP_F_main_BB_if_end207_298;
LEGUP_F_main_BB_if_end207_298:
		next_state = LEGUP_F_main_BB_if_end207_299;
LEGUP_F_main_BB_if_end207_299:
		next_state = LEGUP_F_main_BB_if_end207_300;
LEGUP_F_main_BB_if_end207_300:
		next_state = LEGUP_F_main_BB_if_end207_301;
LEGUP_F_main_BB_if_end207_301:
		next_state = LEGUP_F_main_BB_if_end207_302;
LEGUP_F_main_BB_if_end207_302:
		next_state = LEGUP_F_main_BB_if_end207_303;
LEGUP_F_main_BB_if_end207_303:
		next_state = LEGUP_F_main_BB_if_end207_304;
LEGUP_F_main_BB_if_end207_304:
		next_state = LEGUP_F_main_BB_if_end207_305;
LEGUP_F_main_BB_if_end207_305:
		next_state = LEGUP_F_main_BB_if_end207_306;
LEGUP_F_main_BB_if_end207_306:
		next_state = LEGUP_F_main_BB_if_end207_307;
LEGUP_F_main_BB_if_end207_307:
		next_state = LEGUP_F_main_BB_if_end207_308;
LEGUP_F_main_BB_if_end207_308:
		next_state = LEGUP_F_main_BB_if_end207_309;
LEGUP_F_main_BB_if_end207_309:
		next_state = LEGUP_F_main_BB_if_end207_310;
LEGUP_F_main_BB_if_end207_310:
		next_state = LEGUP_F_main_BB_if_end207_311;
LEGUP_F_main_BB_if_end207_311:
		next_state = LEGUP_F_main_BB_if_end207_312;
LEGUP_F_main_BB_if_end207_312:
	if ((fsm_stall == 1'd0) && (main_if_end207_Pivot26 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock19_315;
	else if ((fsm_stall == 1'd0) && (main_if_end207_Pivot26 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock23_313;
LEGUP_F_main_BB_if_end238_320:
		next_state = LEGUP_F_main_BB_if_end238_321;
LEGUP_F_main_BB_if_end238_321:
		next_state = LEGUP_F_main_BB_if_end238_322;
LEGUP_F_main_BB_if_end238_322:
		next_state = LEGUP_F_main_BB_if_end238_323;
LEGUP_F_main_BB_if_end238_323:
		next_state = LEGUP_F_main_BB_if_end238_324;
LEGUP_F_main_BB_if_end238_324:
		next_state = LEGUP_F_main_BB_if_end238_325;
LEGUP_F_main_BB_if_end238_325:
	if ((fsm_stall == 1'd0) && (main_if_end238_or_cond504 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then251_326;
	else if ((fsm_stall == 1'd0) && (main_if_end238_or_cond504 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else257_328;
LEGUP_F_main_BB_if_end271_331:
		next_state = LEGUP_F_main_BB_if_end271_332;
LEGUP_F_main_BB_if_end271_332:
		next_state = LEGUP_F_main_BB_if_end271_333;
LEGUP_F_main_BB_if_end271_333:
		next_state = LEGUP_F_main_BB_if_end271_334;
LEGUP_F_main_BB_if_end271_334:
		next_state = LEGUP_F_main_BB_if_end271_335;
LEGUP_F_main_BB_if_end271_335:
		next_state = LEGUP_F_main_BB_if_end271_336;
LEGUP_F_main_BB_if_end271_336:
		next_state = LEGUP_F_main_BB_if_end271_337;
LEGUP_F_main_BB_if_end271_337:
		next_state = LEGUP_F_main_BB_if_end271_338;
LEGUP_F_main_BB_if_end271_338:
		next_state = LEGUP_F_main_BB_if_end271_339;
LEGUP_F_main_BB_if_end271_339:
		next_state = LEGUP_F_main_BB_if_end271_340;
LEGUP_F_main_BB_if_end271_340:
		next_state = LEGUP_F_main_BB_if_end271_341;
LEGUP_F_main_BB_if_end271_341:
		next_state = LEGUP_F_main_BB_if_end271_342;
LEGUP_F_main_BB_if_end271_342:
		next_state = LEGUP_F_main_BB_if_end271_343;
LEGUP_F_main_BB_if_end271_343:
		next_state = LEGUP_F_main_BB_if_end271_344;
LEGUP_F_main_BB_if_end271_344:
		next_state = LEGUP_F_main_BB_if_end271_345;
LEGUP_F_main_BB_if_end271_345:
		next_state = LEGUP_F_main_BB_if_end271_346;
LEGUP_F_main_BB_if_end271_346:
		next_state = LEGUP_F_main_BB_if_end271_347;
LEGUP_F_main_BB_if_end271_347:
		next_state = LEGUP_F_main_BB_if_end271_348;
LEGUP_F_main_BB_if_end271_348:
		next_state = LEGUP_F_main_BB_if_end271_349;
LEGUP_F_main_BB_if_end271_349:
		next_state = LEGUP_F_main_BB_if_end271_350;
LEGUP_F_main_BB_if_end271_350:
		next_state = LEGUP_F_main_BB_if_end271_351;
LEGUP_F_main_BB_if_end271_351:
		next_state = LEGUP_F_main_BB_if_end271_352;
LEGUP_F_main_BB_if_end271_352:
		next_state = LEGUP_F_main_BB_if_end271_353;
LEGUP_F_main_BB_if_end271_353:
		next_state = LEGUP_F_main_BB_if_end271_354;
LEGUP_F_main_BB_if_end271_354:
		next_state = LEGUP_F_main_BB_if_end271_355;
LEGUP_F_main_BB_if_end271_355:
		next_state = LEGUP_F_main_BB_if_end271_356;
LEGUP_F_main_BB_if_end271_356:
		next_state = LEGUP_F_main_BB_if_end271_357;
LEGUP_F_main_BB_if_end271_357:
		next_state = LEGUP_F_main_BB_if_end271_358;
LEGUP_F_main_BB_if_end271_358:
		next_state = LEGUP_F_main_BB_if_end271_359;
LEGUP_F_main_BB_if_end271_359:
		next_state = LEGUP_F_main_BB_if_end271_360;
LEGUP_F_main_BB_if_end271_360:
		next_state = LEGUP_F_main_BB_if_end271_361;
LEGUP_F_main_BB_if_end271_361:
		next_state = LEGUP_F_main_BB_if_end271_362;
LEGUP_F_main_BB_if_end271_362:
		next_state = LEGUP_F_main_BB_if_end271_363;
LEGUP_F_main_BB_if_end271_363:
		next_state = LEGUP_F_main_BB_if_end271_364;
LEGUP_F_main_BB_if_end271_364:
		next_state = LEGUP_F_main_BB_if_end271_365;
LEGUP_F_main_BB_if_end271_365:
		next_state = LEGUP_F_main_BB_if_end271_366;
LEGUP_F_main_BB_if_end271_366:
		next_state = LEGUP_F_main_BB_if_end271_367;
LEGUP_F_main_BB_if_end271_367:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end89_52:
		next_state = LEGUP_F_main_BB_if_end89_53;
LEGUP_F_main_BB_if_end89_53:
		next_state = LEGUP_F_main_BB_if_end89_54;
LEGUP_F_main_BB_if_end89_54:
		next_state = LEGUP_F_main_BB_if_end89_55;
LEGUP_F_main_BB_if_end89_55:
		next_state = LEGUP_F_main_BB_if_end89_56;
LEGUP_F_main_BB_if_end89_56:
		next_state = LEGUP_F_main_BB_if_end89_57;
LEGUP_F_main_BB_if_end89_57:
		next_state = LEGUP_F_main_BB_if_end89_58;
LEGUP_F_main_BB_if_end89_58:
		next_state = LEGUP_F_main_BB_if_end89_59;
LEGUP_F_main_BB_if_end89_59:
		next_state = LEGUP_F_main_BB_if_end89_60;
LEGUP_F_main_BB_if_end89_60:
		next_state = LEGUP_F_main_BB_if_end89_61;
LEGUP_F_main_BB_if_end89_61:
		next_state = LEGUP_F_main_BB_if_end89_62;
LEGUP_F_main_BB_if_end89_62:
		next_state = LEGUP_F_main_BB_if_end89_63;
LEGUP_F_main_BB_if_end89_63:
		next_state = LEGUP_F_main_BB_if_end89_64;
LEGUP_F_main_BB_if_end89_64:
		next_state = LEGUP_F_main_BB_if_end89_65;
LEGUP_F_main_BB_if_end89_65:
		next_state = LEGUP_F_main_BB_if_end89_66;
LEGUP_F_main_BB_if_end89_66:
		next_state = LEGUP_F_main_BB_if_end89_67;
LEGUP_F_main_BB_if_end89_67:
		next_state = LEGUP_F_main_BB_if_end89_68;
LEGUP_F_main_BB_if_end89_68:
		next_state = LEGUP_F_main_BB_if_end89_69;
LEGUP_F_main_BB_if_end89_69:
		next_state = LEGUP_F_main_BB_if_end89_70;
LEGUP_F_main_BB_if_end89_70:
		next_state = LEGUP_F_main_BB_if_end89_71;
LEGUP_F_main_BB_if_end89_71:
		next_state = LEGUP_F_main_BB_if_end89_72;
LEGUP_F_main_BB_if_end89_72:
		next_state = LEGUP_F_main_BB_if_end89_73;
LEGUP_F_main_BB_if_end89_73:
		next_state = LEGUP_F_main_BB_if_end89_74;
LEGUP_F_main_BB_if_end89_74:
		next_state = LEGUP_F_main_BB_if_end89_75;
LEGUP_F_main_BB_if_end89_75:
		next_state = LEGUP_F_main_BB_if_end89_76;
LEGUP_F_main_BB_if_end89_76:
		next_state = LEGUP_F_main_BB_if_end89_77;
LEGUP_F_main_BB_if_end89_77:
		next_state = LEGUP_F_main_BB_if_end89_78;
LEGUP_F_main_BB_if_end89_78:
		next_state = LEGUP_F_main_BB_if_end89_79;
LEGUP_F_main_BB_if_end89_79:
		next_state = LEGUP_F_main_BB_if_end89_80;
LEGUP_F_main_BB_if_end89_80:
		next_state = LEGUP_F_main_BB_if_end89_81;
LEGUP_F_main_BB_if_end89_81:
		next_state = LEGUP_F_main_BB_if_end89_82;
LEGUP_F_main_BB_if_end89_82:
		next_state = LEGUP_F_main_BB_if_end89_83;
LEGUP_F_main_BB_if_end89_83:
		next_state = LEGUP_F_main_BB_if_end89_84;
LEGUP_F_main_BB_if_end89_84:
	if ((fsm_stall == 1'd0) && (main_if_end89_cmp93_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then94_85;
	else if ((fsm_stall == 1'd0) && (main_if_end89_cmp93_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else147_254;
LEGUP_F_main_BB_if_end_48:
		next_state = LEGUP_F_main_BB_if_end_49;
LEGUP_F_main_BB_if_end_49:
		next_state = LEGUP_F_main_BB_if_end_50;
LEGUP_F_main_BB_if_end_50:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then109_121:
		next_state = LEGUP_F_main_BB_if_then109_122;
LEGUP_F_main_BB_if_then109_122:
		next_state = LEGUP_F_main_BB_if_then109_123;
LEGUP_F_main_BB_if_then109_123:
		next_state = LEGUP_F_main_BB_if_then109_124;
LEGUP_F_main_BB_if_then109_124:
		next_state = LEGUP_F_main_BB_if_then109_125;
LEGUP_F_main_BB_if_then109_125:
		next_state = LEGUP_F_main_BB_if_then109_126;
LEGUP_F_main_BB_if_then109_126:
		next_state = LEGUP_F_main_BB_if_then109_127;
LEGUP_F_main_BB_if_then109_127:
		next_state = LEGUP_F_main_BB_if_then109_128;
LEGUP_F_main_BB_if_then109_128:
		next_state = LEGUP_F_main_BB_if_then109_129;
LEGUP_F_main_BB_if_then109_129:
		next_state = LEGUP_F_main_BB_if_then109_130;
LEGUP_F_main_BB_if_then109_130:
		next_state = LEGUP_F_main_BB_if_then109_131;
LEGUP_F_main_BB_if_then109_131:
		next_state = LEGUP_F_main_BB_if_then109_132;
LEGUP_F_main_BB_if_then109_132:
		next_state = LEGUP_F_main_BB_if_then109_133;
LEGUP_F_main_BB_if_then109_133:
		next_state = LEGUP_F_main_BB_if_then109_134;
LEGUP_F_main_BB_if_then109_134:
		next_state = LEGUP_F_main_BB_if_then109_135;
LEGUP_F_main_BB_if_then109_135:
		next_state = LEGUP_F_main_BB_if_then109_136;
LEGUP_F_main_BB_if_then109_136:
		next_state = LEGUP_F_main_BB_if_then109_137;
LEGUP_F_main_BB_if_then109_137:
		next_state = LEGUP_F_main_BB_if_then109_138;
LEGUP_F_main_BB_if_then109_138:
		next_state = LEGUP_F_main_BB_if_then109_139;
LEGUP_F_main_BB_if_then109_139:
		next_state = LEGUP_F_main_BB_if_then109_140;
LEGUP_F_main_BB_if_then109_140:
		next_state = LEGUP_F_main_BB_if_then109_141;
LEGUP_F_main_BB_if_then109_141:
		next_state = LEGUP_F_main_BB_if_then109_142;
LEGUP_F_main_BB_if_then109_142:
		next_state = LEGUP_F_main_BB_if_then109_143;
LEGUP_F_main_BB_if_then109_143:
		next_state = LEGUP_F_main_BB_if_then109_144;
LEGUP_F_main_BB_if_then109_144:
		next_state = LEGUP_F_main_BB_if_then109_145;
LEGUP_F_main_BB_if_then109_145:
		next_state = LEGUP_F_main_BB_if_then109_146;
LEGUP_F_main_BB_if_then109_146:
		next_state = LEGUP_F_main_BB_if_then109_147;
LEGUP_F_main_BB_if_then109_147:
		next_state = LEGUP_F_main_BB_if_then109_148;
LEGUP_F_main_BB_if_then109_148:
		next_state = LEGUP_F_main_BB_if_then109_149;
LEGUP_F_main_BB_if_then109_149:
		next_state = LEGUP_F_main_BB_if_then109_150;
LEGUP_F_main_BB_if_then109_150:
		next_state = LEGUP_F_main_BB_if_then109_151;
LEGUP_F_main_BB_if_then109_151:
		next_state = LEGUP_F_main_BB_if_then109_152;
LEGUP_F_main_BB_if_then109_152:
		next_state = LEGUP_F_main_BB_if_then109_153;
LEGUP_F_main_BB_if_then109_153:
		next_state = LEGUP_F_main_BB_if_then109_154;
LEGUP_F_main_BB_if_then109_154:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_then122_188:
		next_state = LEGUP_F_main_BB_if_then122_189;
LEGUP_F_main_BB_if_then122_189:
		next_state = LEGUP_F_main_BB_if_then122_190;
LEGUP_F_main_BB_if_then122_190:
		next_state = LEGUP_F_main_BB_if_then122_191;
LEGUP_F_main_BB_if_then122_191:
		next_state = LEGUP_F_main_BB_if_then122_192;
LEGUP_F_main_BB_if_then122_192:
		next_state = LEGUP_F_main_BB_if_then122_193;
LEGUP_F_main_BB_if_then122_193:
		next_state = LEGUP_F_main_BB_if_then122_194;
LEGUP_F_main_BB_if_then122_194:
		next_state = LEGUP_F_main_BB_if_then122_195;
LEGUP_F_main_BB_if_then122_195:
		next_state = LEGUP_F_main_BB_if_then122_196;
LEGUP_F_main_BB_if_then122_196:
		next_state = LEGUP_F_main_BB_if_then122_197;
LEGUP_F_main_BB_if_then122_197:
		next_state = LEGUP_F_main_BB_if_then122_198;
LEGUP_F_main_BB_if_then122_198:
		next_state = LEGUP_F_main_BB_if_then122_199;
LEGUP_F_main_BB_if_then122_199:
		next_state = LEGUP_F_main_BB_if_then122_200;
LEGUP_F_main_BB_if_then122_200:
		next_state = LEGUP_F_main_BB_if_then122_201;
LEGUP_F_main_BB_if_then122_201:
		next_state = LEGUP_F_main_BB_if_then122_202;
LEGUP_F_main_BB_if_then122_202:
		next_state = LEGUP_F_main_BB_if_then122_203;
LEGUP_F_main_BB_if_then122_203:
		next_state = LEGUP_F_main_BB_if_then122_204;
LEGUP_F_main_BB_if_then122_204:
		next_state = LEGUP_F_main_BB_if_then122_205;
LEGUP_F_main_BB_if_then122_205:
		next_state = LEGUP_F_main_BB_if_then122_206;
LEGUP_F_main_BB_if_then122_206:
		next_state = LEGUP_F_main_BB_if_then122_207;
LEGUP_F_main_BB_if_then122_207:
		next_state = LEGUP_F_main_BB_if_then122_208;
LEGUP_F_main_BB_if_then122_208:
		next_state = LEGUP_F_main_BB_if_then122_209;
LEGUP_F_main_BB_if_then122_209:
		next_state = LEGUP_F_main_BB_if_then122_210;
LEGUP_F_main_BB_if_then122_210:
		next_state = LEGUP_F_main_BB_if_then122_211;
LEGUP_F_main_BB_if_then122_211:
		next_state = LEGUP_F_main_BB_if_then122_212;
LEGUP_F_main_BB_if_then122_212:
		next_state = LEGUP_F_main_BB_if_then122_213;
LEGUP_F_main_BB_if_then122_213:
		next_state = LEGUP_F_main_BB_if_then122_214;
LEGUP_F_main_BB_if_then122_214:
		next_state = LEGUP_F_main_BB_if_then122_215;
LEGUP_F_main_BB_if_then122_215:
		next_state = LEGUP_F_main_BB_if_then122_216;
LEGUP_F_main_BB_if_then122_216:
		next_state = LEGUP_F_main_BB_if_then122_217;
LEGUP_F_main_BB_if_then122_217:
		next_state = LEGUP_F_main_BB_if_then122_218;
LEGUP_F_main_BB_if_then122_218:
		next_state = LEGUP_F_main_BB_if_then122_219;
LEGUP_F_main_BB_if_then122_219:
		next_state = LEGUP_F_main_BB_if_then122_220;
LEGUP_F_main_BB_if_then122_220:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_then149_255:
		next_state = LEGUP_F_main_BB_if_then149_256;
LEGUP_F_main_BB_if_then149_256:
		next_state = LEGUP_F_main_BB_if_then149_257;
LEGUP_F_main_BB_if_then149_257:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_then156_261:
		next_state = LEGUP_F_main_BB_if_then156_262;
LEGUP_F_main_BB_if_then156_262:
		next_state = LEGUP_F_main_BB_if_then156_263;
LEGUP_F_main_BB_if_then156_263:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_then163_264:
		next_state = LEGUP_F_main_BB_if_then163_265;
LEGUP_F_main_BB_if_then163_265:
		next_state = LEGUP_F_main_BB_if_then163_266;
LEGUP_F_main_BB_if_then163_266:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_then188_273:
		next_state = LEGUP_F_main_BB_if_then188_274;
LEGUP_F_main_BB_if_then188_274:
		next_state = LEGUP_F_main_BB_if_end198_277;
LEGUP_F_main_BB_if_then195_276:
		next_state = LEGUP_F_main_BB_cleanup_374;
LEGUP_F_main_BB_if_then205_279:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then212_316:
		next_state = LEGUP_F_main_BB_if_end238_320;
LEGUP_F_main_BB_if_then219_317:
		next_state = LEGUP_F_main_BB_if_end238_320;
LEGUP_F_main_BB_if_then226_318:
		next_state = LEGUP_F_main_BB_if_end238_320;
LEGUP_F_main_BB_if_then251_326:
		next_state = LEGUP_F_main_BB_if_then251_327;
LEGUP_F_main_BB_if_then251_327:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then259_329:
		next_state = LEGUP_F_main_BB_cleanup_374;
LEGUP_F_main_BB_if_then94_85:
	if ((fsm_stall == 1'd0) && (main_if_end89_cmp95_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then96_86;
	else if ((fsm_stall == 1'd0) && (main_if_end89_cmp95_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else107_120;
LEGUP_F_main_BB_if_then96_100:
		next_state = LEGUP_F_main_BB_if_then96_101;
LEGUP_F_main_BB_if_then96_101:
		next_state = LEGUP_F_main_BB_if_then96_102;
LEGUP_F_main_BB_if_then96_102:
		next_state = LEGUP_F_main_BB_if_then96_103;
LEGUP_F_main_BB_if_then96_103:
		next_state = LEGUP_F_main_BB_if_then96_104;
LEGUP_F_main_BB_if_then96_104:
		next_state = LEGUP_F_main_BB_if_then96_105;
LEGUP_F_main_BB_if_then96_105:
		next_state = LEGUP_F_main_BB_if_then96_106;
LEGUP_F_main_BB_if_then96_106:
		next_state = LEGUP_F_main_BB_if_then96_107;
LEGUP_F_main_BB_if_then96_107:
		next_state = LEGUP_F_main_BB_if_then96_108;
LEGUP_F_main_BB_if_then96_108:
		next_state = LEGUP_F_main_BB_if_then96_109;
LEGUP_F_main_BB_if_then96_109:
		next_state = LEGUP_F_main_BB_if_then96_110;
LEGUP_F_main_BB_if_then96_110:
		next_state = LEGUP_F_main_BB_if_then96_111;
LEGUP_F_main_BB_if_then96_111:
		next_state = LEGUP_F_main_BB_if_then96_112;
LEGUP_F_main_BB_if_then96_112:
		next_state = LEGUP_F_main_BB_if_then96_113;
LEGUP_F_main_BB_if_then96_113:
		next_state = LEGUP_F_main_BB_if_then96_114;
LEGUP_F_main_BB_if_then96_114:
		next_state = LEGUP_F_main_BB_if_then96_115;
LEGUP_F_main_BB_if_then96_115:
		next_state = LEGUP_F_main_BB_if_then96_116;
LEGUP_F_main_BB_if_then96_116:
		next_state = LEGUP_F_main_BB_if_then96_117;
LEGUP_F_main_BB_if_then96_117:
		next_state = LEGUP_F_main_BB_if_then96_118;
LEGUP_F_main_BB_if_then96_118:
		next_state = LEGUP_F_main_BB_if_then96_119;
LEGUP_F_main_BB_if_then96_119:
		next_state = LEGUP_F_main_BB_if_end176_270;
LEGUP_F_main_BB_if_then96_86:
		next_state = LEGUP_F_main_BB_if_then96_87;
LEGUP_F_main_BB_if_then96_87:
		next_state = LEGUP_F_main_BB_if_then96_88;
LEGUP_F_main_BB_if_then96_88:
		next_state = LEGUP_F_main_BB_if_then96_89;
LEGUP_F_main_BB_if_then96_89:
		next_state = LEGUP_F_main_BB_if_then96_90;
LEGUP_F_main_BB_if_then96_90:
		next_state = LEGUP_F_main_BB_if_then96_91;
LEGUP_F_main_BB_if_then96_91:
		next_state = LEGUP_F_main_BB_if_then96_92;
LEGUP_F_main_BB_if_then96_92:
		next_state = LEGUP_F_main_BB_if_then96_93;
LEGUP_F_main_BB_if_then96_93:
		next_state = LEGUP_F_main_BB_if_then96_94;
LEGUP_F_main_BB_if_then96_94:
		next_state = LEGUP_F_main_BB_if_then96_95;
LEGUP_F_main_BB_if_then96_95:
		next_state = LEGUP_F_main_BB_if_then96_96;
LEGUP_F_main_BB_if_then96_96:
		next_state = LEGUP_F_main_BB_if_then96_97;
LEGUP_F_main_BB_if_then96_97:
		next_state = LEGUP_F_main_BB_if_then96_98;
LEGUP_F_main_BB_if_then96_98:
		next_state = LEGUP_F_main_BB_if_then96_99;
LEGUP_F_main_BB_if_then96_99:
		next_state = LEGUP_F_main_BB_if_then96_100;
LEGUP_F_main_BB_sw_bb203_278:
	if ((fsm_stall == 1'd0) && (main_sw_bb203_cmp204 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end207_280;
	else if ((fsm_stall == 1'd0) && (main_sw_bb203_cmp204 == 1'd0))
		next_state = LEGUP_F_main_BB_if_then205_279;
LEGUP_F_main_BB_sw_bb268_330:
	if ((fsm_stall == 1'd0) && (main_sw_bb268_cmp269 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb268_cmp269 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end271_331;
LEGUP_F_main_BB_sw_bb75_47:
	if ((fsm_stall == 1'd0) && (main_sw_bb75_cmp76 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb75_cmp76 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end_48;
LEGUP_F_main_BB_sw_bb86_51:
	if ((fsm_stall == 1'd0) && (main_sw_bb86_cmp87 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end89_52;
	else if ((fsm_stall == 1'd0) && (main_sw_bb86_cmp87 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_sw_bb_11:
		next_state = LEGUP_F_main_BB_sw_bb_12;
LEGUP_F_main_BB_sw_bb_12:
		next_state = LEGUP_F_main_BB_sw_bb_13;
LEGUP_F_main_BB_sw_bb_13:
		next_state = LEGUP_F_main_BB_sw_bb_14;
LEGUP_F_main_BB_sw_bb_14:
		next_state = LEGUP_F_main_BB_sw_bb_15;
LEGUP_F_main_BB_sw_bb_15:
		next_state = LEGUP_F_main_BB_sw_bb_16;
LEGUP_F_main_BB_sw_bb_16:
		next_state = LEGUP_F_main_BB_sw_bb_17;
LEGUP_F_main_BB_sw_bb_17:
		next_state = LEGUP_F_main_BB_sw_bb_18;
LEGUP_F_main_BB_sw_bb_18:
		next_state = LEGUP_F_main_BB_sw_bb_19;
LEGUP_F_main_BB_sw_bb_19:
		next_state = LEGUP_F_main_BB_sw_bb_20;
LEGUP_F_main_BB_sw_bb_20:
		next_state = LEGUP_F_main_BB_sw_bb_21;
LEGUP_F_main_BB_sw_bb_21:
		next_state = LEGUP_F_main_BB_sw_bb_22;
LEGUP_F_main_BB_sw_bb_22:
		next_state = LEGUP_F_main_BB_sw_bb_23;
LEGUP_F_main_BB_sw_bb_23:
		next_state = LEGUP_F_main_BB_sw_bb_24;
LEGUP_F_main_BB_sw_bb_24:
		next_state = LEGUP_F_main_BB_sw_bb_25;
LEGUP_F_main_BB_sw_bb_25:
		next_state = LEGUP_F_main_BB_sw_bb_26;
LEGUP_F_main_BB_sw_bb_26:
		next_state = LEGUP_F_main_BB_sw_bb_27;
LEGUP_F_main_BB_sw_bb_27:
		next_state = LEGUP_F_main_BB_sw_bb_28;
LEGUP_F_main_BB_sw_bb_28:
		next_state = LEGUP_F_main_BB_sw_bb_29;
LEGUP_F_main_BB_sw_bb_29:
		next_state = LEGUP_F_main_BB_sw_bb_30;
LEGUP_F_main_BB_sw_bb_30:
		next_state = LEGUP_F_main_BB_sw_bb_31;
LEGUP_F_main_BB_sw_bb_31:
		next_state = LEGUP_F_main_BB_sw_bb_32;
LEGUP_F_main_BB_sw_bb_32:
		next_state = LEGUP_F_main_BB_sw_bb_33;
LEGUP_F_main_BB_sw_bb_33:
		next_state = LEGUP_F_main_BB_sw_bb_34;
LEGUP_F_main_BB_sw_bb_34:
		next_state = LEGUP_F_main_BB_sw_bb_35;
LEGUP_F_main_BB_sw_bb_35:
		next_state = LEGUP_F_main_BB_sw_bb_36;
LEGUP_F_main_BB_sw_bb_36:
		next_state = LEGUP_F_main_BB_sw_bb_37;
LEGUP_F_main_BB_sw_bb_37:
		next_state = LEGUP_F_main_BB_sw_bb_38;
LEGUP_F_main_BB_sw_bb_38:
		next_state = LEGUP_F_main_BB_sw_bb_39;
LEGUP_F_main_BB_sw_bb_39:
		next_state = LEGUP_F_main_BB_sw_bb_40;
LEGUP_F_main_BB_sw_bb_40:
		next_state = LEGUP_F_main_BB_sw_bb_41;
LEGUP_F_main_BB_sw_bb_41:
		next_state = LEGUP_F_main_BB_sw_bb_42;
LEGUP_F_main_BB_sw_bb_42:
		next_state = LEGUP_F_main_BB_sw_bb_43;
LEGUP_F_main_BB_sw_bb_43:
		next_state = LEGUP_F_main_BB_sw_bb_44;
LEGUP_F_main_BB_sw_bb_44:
		next_state = LEGUP_F_main_BB_sw_bb_45;
LEGUP_F_main_BB_sw_bb_45:
		next_state = LEGUP_F_main_BB_sw_bb_46;
LEGUP_F_main_BB_sw_bb_46:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
default:
	next_state = cur_state;
endcase

end
assign fsm_stall = 1'd0;
assign main_entry_vla1496_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla1496_sub_reg <= main_entry_vla1496_sub;
	end
end
assign main_entry_vla495_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla495_sub_reg <= main_entry_vla495_sub;
	end
end
assign main_entry_arrayidx6 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx6_reg <= main_entry_arrayidx6;
	end
end
assign main_entry_arrayidx7 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx7_reg <= main_entry_arrayidx7;
	end
end
assign main_entry_arrayidx8 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx8_reg <= main_entry_arrayidx8;
	end
end
assign main_entry_arrayidx9 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx9_reg <= main_entry_arrayidx9;
	end
end
assign main_entry_arrayidx10 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx10_reg <= main_entry_arrayidx10;
	end
end
assign main_entry_arrayidx11 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx11_reg <= main_entry_arrayidx11;
	end
end
assign main_entry_arrayidx12 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx12_reg <= main_entry_arrayidx12;
	end
end
assign main_entry_arrayidx13 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx13_reg <= main_entry_arrayidx13;
	end
end
assign main_entry_arrayidx14 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx14_reg <= main_entry_arrayidx14;
	end
end
assign main_entry_arrayidx15 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx15_reg <= main_entry_arrayidx15;
	end
end
assign main_entry_arrayidx16 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx16_reg <= main_entry_arrayidx16;
	end
end
assign main_entry_arrayidx17 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx17_reg <= main_entry_arrayidx17;
	end
end
assign main_entry_arrayidx18 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx18_reg <= main_entry_arrayidx18;
	end
end
assign main_entry_arrayidx19 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx19_reg <= main_entry_arrayidx19;
	end
end
assign main_entry_arrayidx20 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx20_reg <= main_entry_arrayidx20;
	end
end
assign main_entry_arrayidx21 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx21_reg <= main_entry_arrayidx21;
	end
end
assign main_entry_arrayidx22 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx22_reg <= main_entry_arrayidx22;
	end
end
assign main_entry_arrayidx23 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx23_reg <= main_entry_arrayidx23;
	end
end
assign main_entry_arrayidx24 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx24_reg <= main_entry_arrayidx24;
	end
end
assign main_entry_arrayidx25 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx25_reg <= main_entry_arrayidx25;
	end
end
assign main_entry_arrayidx26 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx26_reg <= main_entry_arrayidx26;
	end
end
assign main_entry_arrayidx27 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx27_reg <= main_entry_arrayidx27;
	end
end
assign main_entry_arrayidx28 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx28_reg <= main_entry_arrayidx28;
	end
end
assign main_entry_arrayidx29 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx29_reg <= main_entry_arrayidx29;
	end
end
assign main_entry_arrayidx30 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx30_reg <= main_entry_arrayidx30;
	end
end
assign main_entry_arrayidx31 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx31_reg <= main_entry_arrayidx31;
	end
end
assign main_entry_arrayidx32 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx32_reg <= main_entry_arrayidx32;
	end
end
assign main_entry_arrayidx33 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx33_reg <= main_entry_arrayidx33;
	end
end
assign main_entry_arrayidx34 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx34_reg <= main_entry_arrayidx34;
	end
end
assign main_entry_arrayidx35 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx35_reg <= main_entry_arrayidx35;
	end
end
assign main_entry_arrayidx36 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx36_reg <= main_entry_arrayidx36;
	end
end
assign main_entry_arrayidx37 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx37_reg <= main_entry_arrayidx37;
	end
end
assign main_entry_arrayidx38 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx38_reg <= main_entry_arrayidx38;
	end
end
assign main_entry_arrayidx39 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx39_reg <= main_entry_arrayidx39;
	end
end
assign main_entry_arrayidx40 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx40_reg <= main_entry_arrayidx40;
	end
end
assign main_entry_arrayidx41 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx41_reg <= main_entry_arrayidx41;
	end
end
assign main_entry_arrayidx42 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx42_reg <= main_entry_arrayidx42;
	end
end
assign main_entry_arrayidx43 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx43_reg <= main_entry_arrayidx43;
	end
end
assign main_entry_arrayidx44 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx44_reg <= main_entry_arrayidx44;
	end
end
assign main_entry_arrayidx45 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx45_reg <= main_entry_arrayidx45;
	end
end
assign main_entry_arrayidx46 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx46_reg <= main_entry_arrayidx46;
	end
end
assign main_entry_arrayidx47 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_reg <= main_entry_arrayidx47;
	end
end
assign main_entry_arrayidx53 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_reg <= main_entry_arrayidx53;
	end
end
assign main_entry_arrayidx53_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_1_reg <= main_entry_arrayidx53_1;
	end
end
assign main_entry_arrayidx53_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_2_reg <= main_entry_arrayidx53_2;
	end
end
assign main_entry_arrayidx53_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_3_reg <= main_entry_arrayidx53_3;
	end
end
assign main_entry_arrayidx53_4 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_4_reg <= main_entry_arrayidx53_4;
	end
end
assign main_entry_arrayidx53_1521 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_1521_reg <= main_entry_arrayidx53_1521;
	end
end
assign main_entry_arrayidx53_1_1 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_1_1_reg <= main_entry_arrayidx53_1_1;
	end
end
assign main_entry_arrayidx53_2_1 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_2_1_reg <= main_entry_arrayidx53_2_1;
	end
end
assign main_entry_arrayidx53_3_1 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_3_1_reg <= main_entry_arrayidx53_3_1;
	end
end
assign main_entry_arrayidx53_4_1 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_4_1_reg <= main_entry_arrayidx53_4_1;
	end
end
assign main_entry_arrayidx53_2522 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_2522_reg <= main_entry_arrayidx53_2522;
	end
end
assign main_entry_arrayidx53_1_2 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_1_2_reg <= main_entry_arrayidx53_1_2;
	end
end
assign main_entry_arrayidx53_2_2 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_2_2_reg <= main_entry_arrayidx53_2_2;
	end
end
assign main_entry_arrayidx53_3_2 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_3_2_reg <= main_entry_arrayidx53_3_2;
	end
end
assign main_entry_arrayidx53_4_2 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_4_2_reg <= main_entry_arrayidx53_4_2;
	end
end
assign main_entry_arrayidx53_3523 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_3523_reg <= main_entry_arrayidx53_3523;
	end
end
assign main_entry_arrayidx53_1_3 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_1_3_reg <= main_entry_arrayidx53_1_3;
	end
end
assign main_entry_arrayidx53_2_3 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_2_3_reg <= main_entry_arrayidx53_2_3;
	end
end
assign main_entry_arrayidx53_3_3 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_3_3_reg <= main_entry_arrayidx53_3_3;
	end
end
assign main_entry_arrayidx53_4_3 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_4_3_reg <= main_entry_arrayidx53_4_3;
	end
end
assign main_entry_arrayidx53_4524 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_4524_reg <= main_entry_arrayidx53_4524;
	end
end
assign main_entry_arrayidx53_1_4 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_1_4_reg <= main_entry_arrayidx53_1_4;
	end
end
assign main_entry_arrayidx53_2_4 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_2_4_reg <= main_entry_arrayidx53_2_4;
	end
end
assign main_entry_arrayidx53_3_4 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_3_4_reg <= main_entry_arrayidx53_3_4;
	end
end
assign main_entry_arrayidx53_4_4 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_4_4_reg <= main_entry_arrayidx53_4_4;
	end
end
assign main_entry_arrayidx60 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_reg <= main_entry_arrayidx60;
	end
end
assign main_entry_arrayidx61 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_reg <= main_entry_arrayidx61;
	end
end
assign main_entry_arrayidx60_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_1_reg <= main_entry_arrayidx60_1;
	end
end
assign main_entry_arrayidx61_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_1_reg <= main_entry_arrayidx61_1;
	end
end
assign main_entry_arrayidx60_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_2_reg <= main_entry_arrayidx60_2;
	end
end
assign main_entry_arrayidx61_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_2_reg <= main_entry_arrayidx61_2;
	end
end
assign main_entry_arrayidx60_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_3_reg <= main_entry_arrayidx60_3;
	end
end
assign main_entry_arrayidx61_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_3_reg <= main_entry_arrayidx61_3;
	end
end
assign main_entry_arrayidx60_4 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_4_reg <= main_entry_arrayidx60_4;
	end
end
assign main_entry_arrayidx61_4 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_4_reg <= main_entry_arrayidx61_4;
	end
end
assign main_entry_arrayidx60_5 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_5_reg <= main_entry_arrayidx60_5;
	end
end
assign main_entry_arrayidx61_5 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_5_reg <= main_entry_arrayidx61_5;
	end
end
assign main_entry_arrayidx60_6 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_6_reg <= main_entry_arrayidx60_6;
	end
end
assign main_entry_arrayidx61_6 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_6_reg <= main_entry_arrayidx61_6;
	end
end
assign main_entry_arrayidx60_7 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_7_reg <= main_entry_arrayidx60_7;
	end
end
assign main_entry_arrayidx61_7 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_7_reg <= main_entry_arrayidx61_7;
	end
end
assign main_entry_arrayidx60_8 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_8_reg <= main_entry_arrayidx60_8;
	end
end
assign main_entry_arrayidx61_8 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_8_reg <= main_entry_arrayidx61_8;
	end
end
assign main_entry_arrayidx60_9 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_9_reg <= main_entry_arrayidx60_9;
	end
end
assign main_entry_arrayidx61_9 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_9_reg <= main_entry_arrayidx61_9;
	end
end
assign main_entry_arrayidx60_10 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_10_reg <= main_entry_arrayidx60_10;
	end
end
assign main_entry_arrayidx61_10 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_10_reg <= main_entry_arrayidx61_10;
	end
end
assign main_entry_arrayidx60_11 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_11_reg <= main_entry_arrayidx60_11;
	end
end
assign main_entry_arrayidx61_11 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_11_reg <= main_entry_arrayidx61_11;
	end
end
assign main_entry_arrayidx60_12 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_12_reg <= main_entry_arrayidx60_12;
	end
end
assign main_entry_arrayidx61_12 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_12_reg <= main_entry_arrayidx61_12;
	end
end
assign main_entry_arrayidx60_13 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_13_reg <= main_entry_arrayidx60_13;
	end
end
assign main_entry_arrayidx61_13 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_13_reg <= main_entry_arrayidx61_13;
	end
end
assign main_entry_arrayidx60_14 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_14_reg <= main_entry_arrayidx60_14;
	end
end
assign main_entry_arrayidx61_14 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_14_reg <= main_entry_arrayidx61_14;
	end
end
assign main_entry_arrayidx60_15 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_15_reg <= main_entry_arrayidx60_15;
	end
end
assign main_entry_arrayidx61_15 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_15_reg <= main_entry_arrayidx61_15;
	end
end
assign main_entry_arrayidx60_16 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_16_reg <= main_entry_arrayidx60_16;
	end
end
assign main_entry_arrayidx61_16 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_16_reg <= main_entry_arrayidx61_16;
	end
end
assign main_entry_arrayidx60_17 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_17_reg <= main_entry_arrayidx60_17;
	end
end
assign main_entry_arrayidx61_17 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_17_reg <= main_entry_arrayidx61_17;
	end
end
assign main_entry_arrayidx60_18 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_18_reg <= main_entry_arrayidx60_18;
	end
end
assign main_entry_arrayidx61_18 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_18_reg <= main_entry_arrayidx61_18;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_state_0 = main_NodeBlock9_backedge_state_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_i_0 = main_NodeBlock9_backedge_i_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_j_0 = main_NodeBlock9_backedge_j_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_a_0 = main_NodeBlock9_backedge_a_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_b_0 = main_NodeBlock9_backedge_b_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_X_0 = main_NodeBlock9_backedge_pos_a_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_Y_0 = main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_X_0 = main_NodeBlock9_backedge_pos_b_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_Y_0 = main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_mesh_0 = main_NodeBlock9_backedge_sum_mesh_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_1hop_0 = main_NodeBlock9_backedge_sum_1hop_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0 = 32'd1993114092;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_seed_0 = main_NodeBlock9_backedge_seed_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
end
always @(*) begin
		main_NodeBlock9_Pivot10 = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock9_Pivot10_op1_temp}));
end
always @(*) begin
		main_NodeBlock7_Pivot8 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock7_Pivot8_op1_temp}));
end
always @(*) begin
		main_NodeBlock5_Pivot6 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock5_Pivot6_op1_temp}));
end
always @(*) begin
		main_LeafBlock3_SwitchLeaf4 = (main_NodeBlock9_state_0_reg == 32'd5);
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end_1_var0_reg};
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end198_502};
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd5;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then205_inc206;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then251_inc256_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd22;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_i_0_be = main_if_end271_inc297_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_end198_inc177_1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_else257_inc239;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_sw_bb_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_if_end_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_a_0_be = main_if_end271_29_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_if_end_2_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_b_0_be = main_if_end271_30_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end_3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end198_pos_a_X_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end_4;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end198_pos_a_Y_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end_5;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end238_xi_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = -32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end_6;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end238_xj_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_if_end271_newCurOp_add288_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_if_end271_newCurOp_add296;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_sw_bb_add70_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end176_seed_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end207_add210_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end207_add210_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_46) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb75_47) & (fsm_stall == 1'd0)) & (main_sw_bb75_cmp76 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_50) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb86_51) & (fsm_stall == 1'd0)) & (main_sw_bb86_cmp87 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end198_277) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then205_279) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then251_327) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else257_328) & (fsm_stall == 1'd0)) & (main_if_else257_cmp258 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb268_330) & (fsm_stall == 1'd0)) & (main_sw_bb268_cmp269 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end271_367) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
end
always @(*) begin
		main_NodeBlock1_Pivot2 = ($signed(main_NodeBlock9_state_0_reg) < $signed({29'd0,main_NodeBlock1_Pivot2_op1_temp}));
end
always @(*) begin
		main_NodeBlock_Pivot = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock_Pivot_op1_temp}));
end
always @(*) begin
		main_LeafBlock_SwitchLeaf = (main_NodeBlock9_state_0_reg == 32'd0);
end
always @(*) begin
		main_sw_bb_0 = main_entry_vla495_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_sw_bb_0_reg <= main_sw_bb_0;
	end
end
always @(*) begin
		main_sw_bb_sub_i = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_sw_bb_xor2_i = (main_sw_bb_sub_i ^ 32'd1);
end
always @(*) begin
	main_sw_bb_rem = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_43)) begin
		main_sw_bb_rem_reg <= main_sw_bb_rem;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end89_84)) begin
		main_sw_bb_rem_reg <= main_if_end89_rem91;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then96_118)) begin
		main_sw_bb_rem_reg <= main_if_then96_rem98;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then96_119)) begin
		main_sw_bb_rem_reg <= main_if_then96_rem103;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_153)) begin
		main_sw_bb_rem_reg <= main_if_then109_rem111;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_154)) begin
		main_sw_bb_rem_reg <= main_if_then109_rem116;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then122_220)) begin
		main_sw_bb_rem_reg <= main_if_then122_rem129;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_253)) begin
		main_sw_bb_rem_reg <= main_if_else133_rem140;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end207_312)) begin
		main_sw_bb_rem_reg <= main_if_end207_rem209;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_366)) begin
		main_sw_bb_rem_reg <= main_if_end271_rem289;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_367)) begin
		main_sw_bb_rem_reg <= main_if_end271_rem292;
	end
end
always @(*) begin
		main_sw_bb_bit_select7 = main_sw_bb_rem_width_extended[29:0];
end
always @(*) begin
		main_sw_bb_arrayidx66 = (1'd0 + (4 * main_sw_bb_0));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_sw_bb_arrayidx66_reg <= main_sw_bb_arrayidx66;
	end
end
always @(*) begin
		main_sw_bb_xor2_i16 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_sw_bb_xor2_i16_reg <= main_sw_bb_xor2_i16;
	end
end
always @(*) begin
	main_sw_bb_rem68 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_44)) begin
		main_sw_bb_rem68_reg <= main_sw_bb_rem68;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else120_187)) begin
		main_sw_bb_rem68_reg <= main_if_else120_rem124;
	end
end
always @(*) begin
		main_sw_bb_arrayidx69 = (1'd0 + (4 * main_sw_bb_0));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_sw_bb_arrayidx69_reg <= main_sw_bb_arrayidx69;
	end
end
always @(*) begin
		main_sw_bb_add70 = (main_NodeBlock9_seed_0_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_sw_bb_add70_reg <= main_sw_bb_add70;
	end
end
always @(*) begin
		main_sw_bb_bit_concat8 = {main_sw_bb_bit_select7[29:0], main_sw_bb_bit_concat8_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_sw_bb_sr_add6 = ($signed({{28{main_sw_bb_rem[3]}},main_sw_bb_rem}) + main_sw_bb_bit_concat8);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_43)) begin
		main_sw_bb_sr_add6_reg <= main_sw_bb_sr_add6;
	end
end
always @(*) begin
		main_sw_bb_arrayidx73_sum = (main_sw_bb_sr_add6_reg + $signed({{28{main_sw_bb_rem68[3]}},main_sw_bb_rem68}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_44)) begin
		main_sw_bb_arrayidx73_sum_reg <= main_sw_bb_arrayidx73_sum;
	end
end
always @(*) begin
		main_sw_bb_arrayidx74 = (1'd0 + (4 * main_sw_bb_arrayidx73_sum_reg));
end
always @(*) begin
		main_sw_bb75_cmp76 = (main_NodeBlock9_i_0_reg == 32'd22);
end
always @(*) begin
		main_if_end_arrayidx77 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_1 = main_entry_vla495_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_49)) begin
		main_if_end_1_reg <= main_if_end_1;
	end
end
always @(*) begin
		main_if_end_arrayidx78 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_2 = main_entry_vla1496_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_49)) begin
		main_if_end_2_reg <= main_if_end_2;
	end
end
always @(*) begin
		main_if_end_arrayidx79 = (1'd0 + (4 * main_if_end_1));
end
always @(*) begin
		main_if_end_3 = main_entry_vla2497_out_a;
end
always @(*) begin
		main_if_end_arrayidx80 = (1'd0 + (4 * main_if_end_1));
end
always @(*) begin
		main_if_end_4 = main_entry_vla3498_out_a;
end
always @(*) begin
		main_if_end_arrayidx81 = (1'd0 + (4 * main_if_end_2));
end
always @(*) begin
		main_if_end_5 = main_entry_vla2497_out_b;
end
always @(*) begin
		main_if_end_arrayidx82 = (1'd0 + (4 * main_if_end_2));
end
always @(*) begin
		main_if_end_6 = main_entry_vla3498_out_b;
end
always @(*) begin
		main_if_end_cmp83 = (main_NodeBlock9_i_0_reg == 32'd0);
end
always @(*) begin
		main_if_end_1_var0 = (main_if_end_cmp83 ? 32'd3 : 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_48)) begin
		main_if_end_1_var0_reg <= main_if_end_1_var0;
	end
end
always @(*) begin
		main_sw_bb86_cmp87 = (main_NodeBlock9_pos_a_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end89_sub_i14 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end89_xor2_i15 = (main_if_end89_sub_i14 ^ 32'd1);
end
always @(*) begin
	main_if_end89_rem91 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end89_rem91_reg = main_sw_bb_rem_reg;
end
always @(*) begin
		main_if_end89_add92 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end89_52)) begin
		main_if_end89_add92_reg <= main_if_end89_add92;
	end
end
always @(*) begin
		main_if_end89_cmp93 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end89_52)) begin
		main_if_end89_cmp93_reg <= main_if_end89_cmp93;
	end
end
always @(*) begin
		main_if_end89_cmp95 = ($signed(main_if_end89_rem91) == 32'd0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end89_84)) begin
		main_if_end89_cmp95_reg <= main_if_end89_cmp95;
	end
end
always @(*) begin
		main_if_then96_xor2_i13 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then96_rem98 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then96_arrayidx99 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then96_7 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then96_88)) begin
		main_if_then96_7_reg <= main_if_then96_7;
	end
end
always @(*) begin
		main_if_then96_add100 = (main_if_then96_7_reg + $signed({{28{main_if_then96_rem98[3]}},main_if_then96_rem98}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then96_118)) begin
		main_if_then96_add100_reg <= main_if_then96_add100;
	end
end
always @(*) begin
		main_if_then96_xor2_i12 = (main_if_end89_add92_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		main_if_then96_xor2_i12_reg <= main_if_then96_xor2_i12;
	end
end
always @(*) begin
	main_if_then96_rem103 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then96_arrayidx104 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then96_8 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then96_88)) begin
		main_if_then96_8_reg <= main_if_then96_8;
	end
end
always @(*) begin
		main_if_then96_add105 = (main_if_then96_8_reg + $signed({{28{main_if_then96_rem103[3]}},main_if_then96_rem103}));
end
always @(*) begin
		main_if_then96_add106 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		main_if_then96_add106_reg <= main_if_then96_add106;
	end
end
always @(*) begin
		main_if_else107_cmp108 = ($signed(main_if_end89_rem91_reg) == 32'd1);
end
always @(*) begin
		main_if_then109_xor2_i10 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then109_rem111 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then109_arrayidx112 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then109_9 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then109_123)) begin
		main_if_then109_9_reg <= main_if_then109_9;
	end
end
always @(*) begin
		main_if_then109_add113 = (main_if_then109_9_reg + $signed({{28{main_if_then109_rem111[3]}},main_if_then109_rem111}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then109_153)) begin
		main_if_then109_add113_reg <= main_if_then109_add113;
	end
end
always @(*) begin
		main_if_then109_xor2_i9 = (main_if_end89_add92_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		main_if_then109_xor2_i9_reg <= main_if_then109_xor2_i9;
	end
end
always @(*) begin
	main_if_then109_rem116 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then109_arrayidx117 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then109_10 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then109_123)) begin
		main_if_then109_10_reg <= main_if_then109_10;
	end
end
always @(*) begin
		main_if_then109_add118 = (main_if_then109_10_reg + $signed({{28{main_if_then109_rem116[3]}},main_if_then109_rem116}));
end
always @(*) begin
		main_if_then109_add119 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		main_if_then109_add119_reg <= main_if_then109_add119;
	end
end
always @(*) begin
		main_if_else120_cmp121 = ($signed(main_if_end89_rem91_reg) == 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else120_155)) begin
		main_if_else120_cmp121_reg <= main_if_else120_cmp121;
	end
end
always @(*) begin
		main_if_else120_xor2_i7 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_else120_rem124 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_else120_rem124_reg = main_sw_bb_rem68_reg;
end
always @(*) begin
		main_if_then122_arrayidx125 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then122_11 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then122_add126 = (main_if_then122_11 + $signed({{28{main_if_else120_rem124_reg[3]}},main_if_else120_rem124_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then122_190)) begin
		main_if_then122_add126_reg <= main_if_then122_add126;
	end
end
always @(*) begin
		main_if_then122_xor2_i6 = (main_if_end89_add92_reg ^ 32'd1);
end
always @(*) begin
	main_if_then122_rem129 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then122_arrayidx130 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then122_12 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then122_190)) begin
		main_if_then122_12_reg <= main_if_then122_12;
	end
end
always @(*) begin
		main_if_then122_add131 = (main_if_then122_12_reg + $signed({{28{main_if_then122_rem129[3]}},main_if_then122_rem129}));
end
always @(*) begin
		main_if_then122_add132 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		main_if_then122_add132_reg <= main_if_then122_add132;
	end
end
always @(*) begin
		main_if_else133_arrayidx136 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else133_13 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else133_add137 = (main_if_else133_13 + $signed({{28{main_if_else120_rem124_reg[3]}},main_if_else120_rem124_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else133_223)) begin
		main_if_else133_add137_reg <= main_if_else133_add137;
	end
end
always @(*) begin
		main_if_else133_xor2_i4 = (main_if_end89_add92_reg ^ 32'd1);
end
always @(*) begin
	main_if_else133_rem140 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_else133_arrayidx141 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else133_14 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else133_223)) begin
		main_if_else133_14_reg <= main_if_else133_14;
	end
end
always @(*) begin
		main_if_else133_add142 = (main_if_else133_14_reg + $signed({{28{main_if_else133_rem140[3]}},main_if_else133_rem140}));
end
always @(*) begin
		main_if_else133_add143 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		main_if_else133_add143_reg <= main_if_else133_add143;
	end
end
always @(*) begin
		main_if_then149_arrayidx150 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then149_15 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then149_add151 = (main_if_then149_15 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then149_arrayidx152 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then149_16 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then149_add153 = (main_if_then149_16 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_NodeBlock16_Pivot17 = ($signed($signed({{28{main_if_end89_rem91_reg[3]}},main_if_end89_rem91_reg})) < $signed({28'd0,main_NodeBlock16_Pivot17_op1_temp}));
end
always @(*) begin
		main_LeafBlock14_SwitchLeaf15 = ($signed(main_if_end89_rem91_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock12_SwitchLeaf13 = ($signed(main_if_end89_rem91_reg) == 32'd1);
end
always @(*) begin
		main_if_then156_arrayidx157 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then156_17 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then156_add158 = (main_if_then156_17 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then156_arrayidx159 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then156_18 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then156_add160 = (main_if_then156_18 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_then163_arrayidx164 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then163_19 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then163_add165 = (main_if_then163_19 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then163_arrayidx166 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then163_20 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then163_add167 = (main_if_then163_20 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_else168_arrayidx169 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else168_21 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else168_add170 = (main_if_else168_21 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_else168_arrayidx171 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else168_22 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_else168_add172 = (main_if_else168_22 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then96_119) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0 = main_if_then96_add100_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then109_154) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0 = main_if_then109_add113_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then122_220) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0 = main_if_then122_add126_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else133_253) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0 = main_if_else133_add137_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then149_257) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0 = main_if_then149_add151;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then156_263) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0 = main_if_then156_add158;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then163_266) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0 = main_if_then163_add165;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else168_269) & (fsm_stall == 1'd0))) */ begin
		main_if_end176_xi_0 = main_if_else168_add170;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then96_119) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then109_154) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then122_220) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else133_253) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then149_257) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then156_263) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then163_266) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else168_269) & (fsm_stall == 1'd0))) begin
		main_if_end176_xi_0_reg <= main_if_end176_xi_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then96_119) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0 = main_if_then96_add105;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then109_154) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0 = main_if_then109_add118;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then122_220) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0 = main_if_then122_add131;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else133_253) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0 = main_if_else133_add142;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then149_257) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0 = main_if_then149_add153;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then156_263) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0 = main_if_then156_add160;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then163_266) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0 = main_if_then163_add167;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else168_269) & (fsm_stall == 1'd0))) */ begin
		main_if_end176_xj_0 = main_if_else168_add172;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then96_119) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then109_154) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then122_220) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else133_253) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then149_257) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then156_263) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then163_266) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else168_269) & (fsm_stall == 1'd0))) begin
		main_if_end176_xj_0_reg <= main_if_end176_xj_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then96_119) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1 = main_if_then96_add106_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then109_154) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1 = main_if_then109_add119_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then122_220) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1 = main_if_then122_add132_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else133_253) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1 = main_if_else133_add143_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then149_257) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1 = main_if_end89_add92_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then156_263) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1 = main_if_end89_add92_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then163_266) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1 = main_if_end89_add92_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else168_269) & (fsm_stall == 1'd0))) */ begin
		main_if_end176_seed_1 = main_if_end89_add92_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then96_119) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then109_154) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then122_220) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else133_253) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then149_257) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then156_263) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then163_266) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else168_269) & (fsm_stall == 1'd0))) begin
		main_if_end176_seed_1_reg <= main_if_end176_seed_1;
	end
end
always @(*) begin
		main_if_end176_bit_select5 = main_if_end176_xi_0_reg[29:0];
end
always @(*) begin
		main_if_end176_inc177 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end176_270)) begin
		main_if_end176_inc177_reg <= main_if_end176_inc177;
	end
end
always @(*) begin
		main_if_end176_bit_concat6 = {main_if_end176_bit_select5[29:0], main_if_end176_bit_concat6_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end176_sr_add = (main_if_end176_xi_0_reg + main_if_end176_bit_concat6);
end
always @(*) begin
		main_if_end176_arrayidx178_sum = (main_if_end176_sr_add + main_if_end176_xj_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end176_270)) begin
		main_if_end176_arrayidx178_sum_reg <= main_if_end176_arrayidx178_sum;
	end
end
always @(*) begin
		main_if_end176_arrayidx179 = (1'd0 + (4 * main_if_end176_arrayidx178_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end176_271)) begin
		main_if_end176_arrayidx179_reg <= main_if_end176_arrayidx179;
	end
end
always @(*) begin
		main_if_end176_23 = main_entry_vla4499_out_a;
end
always @(*) begin
		main_if_end176_cmp180 = (main_if_end176_23 == $signed(-32'd1));
end
always @(*) begin
		main_if_end176_24 = (main_if_end176_xi_0_reg < 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end176_270)) begin
		main_if_end176_24_reg <= main_if_end176_24;
	end
end
always @(*) begin
		main_if_end176_or_cond = (main_if_end176_cmp180 & main_if_end176_24_reg);
end
always @(*) begin
		main_if_end176_25 = (main_if_end176_xj_0_reg < 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end176_270)) begin
		main_if_end176_25_reg <= main_if_end176_25;
	end
end
always @(*) begin
		main_if_end176_or_cond501 = (main_if_end176_or_cond & main_if_end176_25_reg);
end
always @(*) begin
		main_if_then188_arrayidx191 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_then188_arrayidx192 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_else193_cmp194 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else193_cmp194_op1_temp}));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then188_274) & (fsm_stall == 1'd0))) begin
		main_if_end198_pos_a_X_1 = main_if_end176_xi_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else193_275) & (fsm_stall == 1'd0)) & (main_if_else193_cmp194 == 1'd0))) */ begin
		main_if_end198_pos_a_X_1 = -32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then188_274) & (fsm_stall == 1'd0))) begin
		main_if_end198_pos_a_X_1_reg <= main_if_end198_pos_a_X_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else193_275) & (fsm_stall == 1'd0)) & (main_if_else193_cmp194 == 1'd0))) begin
		main_if_end198_pos_a_X_1_reg <= main_if_end198_pos_a_X_1;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then188_274) & (fsm_stall == 1'd0))) begin
		main_if_end198_pos_a_Y_1 = main_if_end176_xj_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else193_275) & (fsm_stall == 1'd0)) & (main_if_else193_cmp194 == 1'd0))) */ begin
		main_if_end198_pos_a_Y_1 = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then188_274) & (fsm_stall == 1'd0))) begin
		main_if_end198_pos_a_Y_1_reg <= main_if_end198_pos_a_Y_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else193_275) & (fsm_stall == 1'd0)) & (main_if_else193_cmp194 == 1'd0))) begin
		main_if_end198_pos_a_Y_1_reg <= main_if_end198_pos_a_Y_1;
	end
end
always @(*) begin
		main_if_end198_cmp199 = (main_if_end198_pos_a_X_1_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end198_502 = (main_if_end198_cmp199 ? 32'd2 : 32'd3);
end
always @(*) begin
		main_if_end198_inc177_1 = (main_if_end198_cmp199 ? main_if_end176_inc177_reg : 32'd0);
end
always @(*) begin
		main_sw_bb203_cmp204 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_then205_inc206 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(*) begin
		main_if_end207_sub_i1 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end207_xor2_i2 = (main_if_end207_sub_i1 ^ 32'd1);
end
always @(*) begin
	main_if_end207_rem209 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end207_rem209_reg = main_sw_bb_rem_reg;
end
always @(*) begin
		main_if_end207_add210 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end207_280)) begin
		main_if_end207_add210_reg <= main_if_end207_add210;
	end
end
always @(*) begin
		main_if_end207_Pivot26 = ($signed($signed({{28{main_if_end207_rem209[3]}},main_if_end207_rem209})) < $signed({29'd0,main_if_end207_Pivot26_op1_temp}));
end
always @(*) begin
		main_NodeBlock23_Pivot24 = ($signed($signed({{28{main_if_end207_rem209_reg[3]}},main_if_end207_rem209_reg})) < $signed({28'd0,main_NodeBlock23_Pivot24_op1_temp}));
end
always @(*) begin
		main_LeafBlock21_SwitchLeaf22 = ($signed(main_if_end207_rem209_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock19_SwitchLeaf20 = ($signed(main_if_end207_rem209_reg) == 32'd0);
end
always @(*) begin
		main_if_then212_arrayidx213 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then212_arrayidx215 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then219_arrayidx220 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then219_arrayidx222 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then226_arrayidx227 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then226_arrayidx229 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else231_arrayidx232 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else231_arrayidx234 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then212_316) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn_in = main_if_then212_arrayidx213;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then219_317) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn_in = main_if_then219_arrayidx220;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then226_318) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn_in = main_if_then226_arrayidx227;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else231_319) & (fsm_stall == 1'd0))) */ begin
		main_if_end238_pn_in = main_if_else231_arrayidx232;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then212_316) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn_in_reg <= main_if_end238_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then219_317) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn_in_reg <= main_if_end238_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then226_318) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn_in_reg <= main_if_end238_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else231_319) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn_in_reg <= main_if_end238_pn_in;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then212_316) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn500_in = main_if_then212_arrayidx215;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then219_317) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn500_in = main_if_then219_arrayidx222;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then226_318) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn500_in = main_if_then226_arrayidx229;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else231_319) & (fsm_stall == 1'd0))) */ begin
		main_if_end238_pn500_in = main_if_else231_arrayidx234;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then212_316) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn500_in_reg <= main_if_end238_pn500_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then219_317) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn500_in_reg <= main_if_end238_pn500_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then226_318) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn500_in_reg <= main_if_end238_pn500_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else231_319) & (fsm_stall == 1'd0))) begin
		main_if_end238_pn500_in_reg <= main_if_end238_pn500_in;
	end
end
always @(*) begin
		main_if_end238_pn500 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_end238_pn = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_end238_xj_1 = (main_if_end238_pn500 + main_NodeBlock9_pos_a_Y_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end238_322)) begin
		main_if_end238_xj_1_reg <= main_if_end238_xj_1;
	end
end
always @(*) begin
		main_if_end238_xi_1 = (main_if_end238_pn + main_NodeBlock9_pos_a_X_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end238_322)) begin
		main_if_end238_xi_1_reg <= main_if_end238_xi_1;
	end
end
always @(*) begin
		main_if_end238_bit_select3 = main_if_end238_xi_1[29:0];
end
always @(*) begin
		main_if_end238_bit_concat4 = {main_if_end238_bit_select3[29:0], main_if_end238_bit_concat4_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end238_sr_add9 = (main_if_end238_xi_1 + main_if_end238_bit_concat4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end238_322)) begin
		main_if_end238_sr_add9_reg <= main_if_end238_sr_add9;
	end
end
always @(*) begin
		main_if_end238_arrayidx240_sum = (main_if_end238_sr_add9_reg + main_if_end238_xj_1_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end238_323)) begin
		main_if_end238_arrayidx240_sum_reg <= main_if_end238_arrayidx240_sum;
	end
end
always @(*) begin
		main_if_end238_arrayidx241 = (1'd0 + (4 * main_if_end238_arrayidx240_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end238_324)) begin
		main_if_end238_arrayidx241_reg <= main_if_end238_arrayidx241;
	end
end
always @(*) begin
		main_if_end238_26 = main_entry_vla4499_out_b;
end
always @(*) begin
		main_if_end238_cmp242 = (main_if_end238_26 == $signed(-32'd1));
end
always @(*) begin
		main_if_end238_27 = (main_if_end238_xi_1 < 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end238_322)) begin
		main_if_end238_27_reg <= main_if_end238_27;
	end
end
always @(*) begin
		main_if_end238_or_cond503 = (main_if_end238_cmp242 & main_if_end238_27_reg);
end
always @(*) begin
		main_if_end238_28 = (main_if_end238_xj_1 < 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end238_322)) begin
		main_if_end238_28_reg <= main_if_end238_28;
	end
end
always @(*) begin
		main_if_end238_or_cond504 = (main_if_end238_or_cond503 & main_if_end238_28_reg);
end
always @(*) begin
		main_if_then251_arrayidx254 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then251_arrayidx255 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then251_inc256 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_if_then251_inc256_reg <= main_if_then251_inc256;
	end
end
always @(*) begin
		main_if_else257_inc239 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(*) begin
		main_if_else257_cmp258 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else257_cmp258_op1_temp}));
end
always @(*) begin
		main_sw_bb268_cmp269 = (main_NodeBlock9_i_0_reg == 32'd22);
end
always @(*) begin
		main_if_end271_arrayidx272 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end271_29 = main_entry_vla495_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_332)) begin
		main_if_end271_29_reg <= main_if_end271_29;
	end
end
always @(*) begin
		main_if_end271_arrayidx273 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end271_30 = main_entry_vla1496_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_332)) begin
		main_if_end271_30_reg <= main_if_end271_30;
	end
end
always @(*) begin
		main_if_end271_arrayidx274 = (1'd0 + (4 * main_if_end271_29));
end
always @(*) begin
		main_if_end271_31 = main_entry_vla2497_out_a;
end
always @(*) begin
		main_if_end271_arrayidx275 = (1'd0 + (4 * main_if_end271_30));
end
always @(*) begin
		main_if_end271_32 = main_entry_vla2497_out_b;
end
always @(*) begin
		main_if_end271_sub = (main_if_end271_31 - main_if_end271_32);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_333)) begin
		main_if_end271_sub_reg <= main_if_end271_sub;
	end
end
always @(*) begin
		main_if_end271_bit_select2 = main_if_end271_sub[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_333)) begin
		main_if_end271_bit_select2_reg <= main_if_end271_bit_select2;
	end
end
always @(*) begin
		main_if_end271_mul = (32'd0 - main_if_end271_sub);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_333)) begin
		main_if_end271_mul_reg <= main_if_end271_mul;
	end
end
always @(*) begin
		main_if_end271_mul_sub = (main_if_end271_bit_select2_reg ? main_if_end271_mul_reg : main_if_end271_sub_reg);
end
always @(*) begin
		main_if_end271_arrayidx279 = (1'd0 + (4 * main_if_end271_29));
end
always @(*) begin
		main_if_end271_33 = main_entry_vla3498_out_a;
end
always @(*) begin
		main_if_end271_arrayidx280 = (1'd0 + (4 * main_if_end271_30));
end
always @(*) begin
		main_if_end271_34 = main_entry_vla3498_out_b;
end
always @(*) begin
		main_if_end271_sub281 = (main_if_end271_33 - main_if_end271_34);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_333)) begin
		main_if_end271_sub281_reg <= main_if_end271_sub281;
	end
end
always @(*) begin
		main_if_end271_bit_select1 = main_if_end271_sub281[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_333)) begin
		main_if_end271_bit_select1_reg <= main_if_end271_bit_select1;
	end
end
always @(*) begin
		main_if_end271_mul284 = (32'd0 - main_if_end271_sub281);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_333)) begin
		main_if_end271_mul284_reg <= main_if_end271_mul284;
	end
end
always @(*) begin
		main_if_end271_diff_pos_y_0 = (main_if_end271_bit_select1_reg ? main_if_end271_mul284_reg : main_if_end271_sub281_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_334)) begin
		main_if_end271_diff_pos_y_0_reg <= main_if_end271_diff_pos_y_0;
	end
end
always @(*) begin
		main_if_end271_add286 = (main_NodeBlock9_sum_mesh_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_331)) begin
		main_if_end271_add286_reg <= main_if_end271_add286;
	end
end
always @(*) begin
		main_if_end271_newEarly_add288 = (main_if_end271_mul_sub + main_if_end271_diff_pos_y_0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_334)) begin
		main_if_end271_newEarly_add288_reg <= main_if_end271_newEarly_add288;
	end
end
always @(*) begin
		main_if_end271_newCurOp_add288 = (main_if_end271_add286_reg + main_if_end271_newEarly_add288_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_335)) begin
		main_if_end271_newCurOp_add288_reg <= main_if_end271_newCurOp_add288;
	end
end
always @(*) begin
	main_if_end271_div = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end271_rem289 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end271_div291 = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end271_rem292 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_end271_add293 = (main_NodeBlock9_sum_1hop_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_331)) begin
		main_if_end271_add293_reg <= main_if_end271_add293;
	end
end
always @(*) begin
		main_if_end271_newEarly_add294 = ($signed({{1{main_if_end271_div[30]}},main_if_end271_div}) + $signed({{28{main_if_end271_rem289[3]}},main_if_end271_rem289}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_366)) begin
		main_if_end271_newEarly_add294_reg <= main_if_end271_newEarly_add294;
	end
end
always @(*) begin
		main_if_end271_newEarly_sub295 = (main_if_end271_add293_reg + $signed({{1{main_if_end271_div291[30]}},main_if_end271_div291}));
end
always @(*) begin
		main_if_end271_newEarly_add296 = (main_if_end271_newEarly_add294_reg + $signed({{28{main_if_end271_rem292[3]}},main_if_end271_rem292}));
end
always @(*) begin
		main_if_end271_newCurOp_add296 = (main_if_end271_newEarly_sub295 + main_if_end271_newEarly_add296);
end
always @(*) begin
		main_if_end271_inc297 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_331)) begin
		main_if_end271_inc297_reg <= main_if_end271_inc297;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond301_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond301_preheader_i_3511 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_cond301_preheader_372) & (fsm_stall == 1'd0)) & (main_for_cond301_preheader_exitcond_reg == 1'd0))) */ begin
		main_for_cond301_preheader_i_3511 = main_for_cond301_preheader_44_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond301_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond301_preheader_i_3511_reg <= main_for_cond301_preheader_i_3511;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_cond301_preheader_372) & (fsm_stall == 1'd0)) & (main_for_cond301_preheader_exitcond_reg == 1'd0))) begin
		main_for_cond301_preheader_i_3511_reg <= main_for_cond301_preheader_i_3511;
	end
end
always @(*) begin
		main_for_cond301_preheader_bit_select = main_for_cond301_preheader_i_3511_reg_width_extended[29:0];
end
always @(*) begin
		main_for_cond301_preheader_bit_concat = {main_for_cond301_preheader_bit_select[29:0], main_for_cond301_preheader_bit_concat_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_cond301_preheader_sr_add11 = ({29'd0,main_for_cond301_preheader_i_3511_reg} + main_for_cond301_preheader_bit_concat);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_368)) begin
		main_for_cond301_preheader_sr_add11_reg <= main_for_cond301_preheader_sr_add11;
	end
end
always @(*) begin
		main_for_cond301_preheader_arrayidx305 = (1'd0 + (4 * main_for_cond301_preheader_sr_add11_reg));
end
always @(*) begin
		main_for_cond301_preheader_35 = (main_for_cond301_preheader_sr_add11 + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_368)) begin
		main_for_cond301_preheader_35_reg <= main_for_cond301_preheader_35;
	end
end
always @(*) begin
		main_for_cond301_preheader_arrayidx305_1 = (1'd0 + (4 * main_for_cond301_preheader_35_reg));
end
always @(*) begin
		main_for_cond301_preheader_36 = (main_for_cond301_preheader_sr_add11 + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_368)) begin
		main_for_cond301_preheader_36_reg <= main_for_cond301_preheader_36;
	end
end
always @(*) begin
		main_for_cond301_preheader_arrayidx305_2 = (1'd0 + (4 * main_for_cond301_preheader_36_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_369)) begin
		main_for_cond301_preheader_arrayidx305_2_reg <= main_for_cond301_preheader_arrayidx305_2;
	end
end
always @(*) begin
		main_for_cond301_preheader_37 = (main_for_cond301_preheader_sr_add11 + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_368)) begin
		main_for_cond301_preheader_37_reg <= main_for_cond301_preheader_37;
	end
end
always @(*) begin
		main_for_cond301_preheader_arrayidx305_3 = (1'd0 + (4 * main_for_cond301_preheader_37_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_369)) begin
		main_for_cond301_preheader_arrayidx305_3_reg <= main_for_cond301_preheader_arrayidx305_3;
	end
end
always @(*) begin
		main_for_cond301_preheader_38 = (main_for_cond301_preheader_sr_add11 + 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_368)) begin
		main_for_cond301_preheader_38_reg <= main_for_cond301_preheader_38;
	end
end
always @(*) begin
		main_for_cond301_preheader_arrayidx305_4 = (1'd0 + (4 * main_for_cond301_preheader_38_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_369)) begin
		main_for_cond301_preheader_arrayidx305_4_reg <= main_for_cond301_preheader_arrayidx305_4;
	end
end
always @(*) begin
		main_for_cond301_preheader_39 = main_entry_vla4499_out_a;
end
always @(*) begin
		main_for_cond301_preheader_40 = main_entry_vla4499_out_b;
end
always @(*) begin
		main_for_cond301_preheader_41 = main_entry_vla4499_out_a;
end
always @(*) begin
		main_for_cond301_preheader_42 = main_entry_vla4499_out_b;
end
always @(*) begin
		main_for_cond301_preheader_43 = main_entry_vla4499_out_a;
end
always @(*) begin
		main_for_cond301_preheader_44 = ({1'd0,main_for_cond301_preheader_i_3511_reg} + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_368)) begin
		main_for_cond301_preheader_44_reg <= main_for_cond301_preheader_44;
	end
end
always @(*) begin
		main_for_cond301_preheader_exitcond = (main_for_cond301_preheader_44 == 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_368)) begin
		main_for_cond301_preheader_exitcond_reg <= main_for_cond301_preheader_exitcond;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then195_276) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then259_329) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_for_end313_373) & (fsm_stall == 1'd0))) */ begin
		main_cleanup_retval_0 = 32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then195_276) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then259_329) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end313_373) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
end
always @(*) begin
	main_entry_vla495_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla495_address_a = (main_entry_vla495_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx20_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx24_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx28_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx32_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx36_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx40_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla495_address_a = (main_entry_arrayidx44_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla495_address_a = (main_entry_vla495_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_48)) begin
		main_entry_vla495_address_a = (main_if_end_arrayidx77 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla495_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla495_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla495_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla495_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla495_in_a = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla495_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla495_in_a = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla495_in_a = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla495_in_a = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla495_in_a = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla495_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla495_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla495_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla495_in_a = 32'd9;
	end
end
always @(*) begin
	main_entry_vla495_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx22_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx26_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx30_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx34_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx38_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx42_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla495_address_b = (main_entry_arrayidx46_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_331)) begin
		main_entry_vla495_address_b = (main_if_end271_arrayidx272 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla495_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla495_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla495_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla495_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla495_in_b = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla495_in_b = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla495_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla495_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla495_in_b = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla495_in_b = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla495_in_b = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla495_in_b = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla495_in_b = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla495_in_b = 32'd16;
	end
end
always @(*) begin
	main_entry_vla1496_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1496_address_a = (main_entry_vla1496_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx21_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx25_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx29_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx33_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx37_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx41_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1496_address_a = (main_entry_arrayidx45_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_48)) begin
		main_entry_vla1496_address_a = (main_if_end_arrayidx78 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1496_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1496_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1496_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1496_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1496_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1496_in_a = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1496_in_a = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1496_in_a = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1496_in_a = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1496_in_a = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1496_in_a = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1496_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1496_in_a = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1496_in_a = 32'd13;
	end
end
always @(*) begin
	main_entry_vla1496_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx19_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx23_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx27_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx31_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx35_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx39_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx43_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1496_address_b = (main_entry_arrayidx47_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_331)) begin
		main_entry_vla1496_address_b = (main_if_end271_arrayidx273 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1496_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1496_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1496_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1496_in_b = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1496_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1496_in_b = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1496_in_b = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1496_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1496_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1496_in_b = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1496_in_b = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1496_in_b = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1496_in_b = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1496_in_b = 32'd14;
	end
end
always @(*) begin
	main_entry_vla2497_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2497_address_a = (main_entry_arrayidx60_18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_49)) begin
		main_entry_vla2497_address_a = (main_if_end_arrayidx79 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla2497_address_a = (main_if_then188_arrayidx191 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_332)) begin
		main_entry_vla2497_address_a = (main_if_end271_arrayidx274 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2497_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla2497_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2497_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2497_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla2497_in_a = main_if_end176_xi_0_reg;
	end
end
always @(*) begin
	main_entry_vla2497_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2497_address_b = (main_entry_arrayidx60_17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_43)) begin
		main_entry_vla2497_address_b = (main_sw_bb_arrayidx66_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_49)) begin
		main_entry_vla2497_address_b = (main_if_end_arrayidx81 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla2497_address_b = (main_if_then251_arrayidx254 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_332)) begin
		main_entry_vla2497_address_b = (main_if_end271_arrayidx275 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2497_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_43)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla2497_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2497_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2497_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_43)) begin
		main_entry_vla2497_in_b = {{28{main_sw_bb_rem[3]}},main_sw_bb_rem};
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla2497_in_b = main_if_end238_xi_1_reg;
	end
end
always @(*) begin
	main_entry_vla3498_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3498_address_a = (main_entry_arrayidx61_18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_49)) begin
		main_entry_vla3498_address_a = (main_if_end_arrayidx80 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla3498_address_a = (main_if_then188_arrayidx192 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_332)) begin
		main_entry_vla3498_address_a = (main_if_end271_arrayidx279 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3498_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla3498_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3498_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3498_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla3498_in_a = main_if_end176_xj_0_reg;
	end
end
always @(*) begin
	main_entry_vla3498_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3498_address_b = (main_entry_arrayidx61_17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_44)) begin
		main_entry_vla3498_address_b = (main_sw_bb_arrayidx69_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_49)) begin
		main_entry_vla3498_address_b = (main_if_end_arrayidx82 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla3498_address_b = (main_if_then251_arrayidx255 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end271_332)) begin
		main_entry_vla3498_address_b = (main_if_end271_arrayidx280 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3498_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_44)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla3498_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3498_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3498_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_44)) begin
		main_entry_vla3498_in_b = {{28{main_sw_bb_rem68[3]}},main_sw_bb_rem68};
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla3498_in_b = main_if_end238_xj_1_reg;
	end
end
always @(*) begin
	main_entry_vla4499_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_1_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_3_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_2522_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_2_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_4_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_1_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_3_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_4524_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_2_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4499_address_a = (main_entry_arrayidx53_4_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end176_271)) begin
		main_entry_vla4499_address_a = (main_if_end176_arrayidx179 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla4499_address_a = (main_if_end176_arrayidx179_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_369)) begin
		main_entry_vla4499_address_a = (main_for_cond301_preheader_arrayidx305 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_370)) begin
		main_entry_vla4499_address_a = (main_for_cond301_preheader_arrayidx305_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_371)) begin
		main_entry_vla4499_address_a = (main_for_cond301_preheader_arrayidx305_4_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4499_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla4499_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4499_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4499_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then188_273)) begin
		main_entry_vla4499_in_a = main_NodeBlock9_a_0_reg;
	end
end
always @(*) begin
	main_entry_vla4499_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_1521_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_2_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_4_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_1_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_3_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_3523_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_2_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_4_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_1_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4499_address_b = (main_entry_arrayidx53_3_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_45)) begin
		main_entry_vla4499_address_b = (main_sw_bb_arrayidx74 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end238_324)) begin
		main_entry_vla4499_address_b = (main_if_end238_arrayidx241 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla4499_address_b = (main_if_end238_arrayidx241_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_369)) begin
		main_entry_vla4499_address_b = (main_for_cond301_preheader_arrayidx305_1 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond301_preheader_370)) begin
		main_entry_vla4499_address_b = (main_for_cond301_preheader_arrayidx305_3_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4499_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_45)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla4499_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4499_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4499_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_45)) begin
		main_entry_vla4499_in_b = main_sw_bb_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then251_326)) begin
		main_entry_vla4499_in_b = main_NodeBlock9_b_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_signed_modulus_32_0_op0 = main_sw_bb_xor2_i;
	end
	else if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_signed_modulus_32_0_op0 = main_sw_bb_xor2_i16_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end89_52)) begin
		main_signed_modulus_32_0_op0 = main_if_end89_xor2_i15;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		main_signed_modulus_32_0_op0 = main_if_then96_xor2_i13;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then96_87)) begin
		main_signed_modulus_32_0_op0 = main_if_then96_xor2_i12_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		main_signed_modulus_32_0_op0 = main_if_then109_xor2_i10;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then109_122)) begin
		main_signed_modulus_32_0_op0 = main_if_then109_xor2_i9_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else120_155)) begin
		main_signed_modulus_32_0_op0 = main_if_else120_xor2_i7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		main_signed_modulus_32_0_op0 = main_if_then122_xor2_i6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		main_signed_modulus_32_0_op0 = main_if_else133_xor2_i4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end207_280)) begin
		main_signed_modulus_32_0_op0 = main_if_end207_xor2_i2;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end271_334)) begin
		main_signed_modulus_32_0_op0 = main_if_end271_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end271_335)) */ begin
		main_signed_modulus_32_0_op0 = main_if_end271_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end89_52)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then96_87)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then109_122)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else120_155)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		main_signed_modulus_32_0_op1 = 32'd5;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end207_280)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end271_334)) begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end271_335)) */ begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_modulus_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_modulus_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_modulus_32_0_inst_clken = divide_main_sw_bb_rem_en;
end
always @(*) begin
	main_signed_modulus_32_0_inst_numer = main_signed_modulus_32_0_op0;
end
always @(*) begin
	main_signed_modulus_32_0_inst_denom = main_signed_modulus_32_0_op1;
end
always @(*) begin
	divide_main_sw_bb_rem_temp_out = main_signed_modulus_32_0_inst_remain;
end
always @(*) begin
	divide_main_sw_bb_rem_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_sw_bb_rem_out = divide_main_sw_bb_rem_temp_out;
end
always @(*) begin
	main_signed_modulus_32_0 = divide_main_sw_bb_rem_out;
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_334)) begin
		main_signed_divide_32_0_op0 = main_if_end271_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end271_335)) */ begin
		main_signed_divide_32_0_op0 = main_if_end271_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end271_334)) begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end271_335)) */ begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_divide_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_divide_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_divide_32_0_inst_clken = divide_main_if_end271_div_en;
end
always @(*) begin
	main_signed_divide_32_0_inst_numer = main_signed_divide_32_0_op0;
end
always @(*) begin
	main_signed_divide_32_0_inst_denom = main_signed_divide_32_0_op1;
end
always @(*) begin
	divide_main_if_end271_div_temp_out = main_signed_divide_32_0_inst_quotient;
end
always @(*) begin
	divide_main_if_end271_div_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end271_div_out = divide_main_if_end271_div_temp_out;
end
always @(*) begin
	main_signed_divide_32_0 = divide_main_if_end271_div_out;
end
assign main_NodeBlock9_Pivot10_op1_temp = 32'd3;
assign main_NodeBlock7_Pivot8_op1_temp = 32'd4;
assign main_NodeBlock5_Pivot6_op1_temp = 32'd5;
assign main_NodeBlock1_Pivot2_op1_temp = 32'd1;
assign main_NodeBlock_Pivot_op1_temp = 32'd2;
always @(*) begin
	main_sw_bb_rem_width_extended = {{26{main_sw_bb_rem[3]}},main_sw_bb_rem};
end
assign main_sw_bb_bit_concat8_bit_select_operand_2 = 2'd0;
assign main_NodeBlock16_Pivot17_op1_temp = 32'd2;
assign main_if_end176_bit_concat6_bit_select_operand_2 = 2'd0;
assign main_if_else193_cmp194_op1_temp = 32'd60;
assign main_if_end207_Pivot26_op1_temp = 32'd1;
assign main_NodeBlock23_Pivot24_op1_temp = 32'd2;
assign main_if_end238_bit_concat4_bit_select_operand_2 = 2'd0;
assign main_if_else257_cmp258_op1_temp = 32'd60;
always @(*) begin
	main_for_cond301_preheader_i_3511_reg_width_extended = {27'd0,main_for_cond301_preheader_i_3511_reg};
end
assign main_for_cond301_preheader_bit_concat_bit_select_operand_2 = 2'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		finish <= 1'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_374)) begin
		finish <= (fsm_stall == 1'd0);
	end
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		return_val <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_374)) begin
		return_val <= main_cleanup_retval_0_reg;
	end
end
assign memory_controller_1_write_enable_a = 1'd0;
assign memory_controller_1_in_a = 64'd0;
always @(*) begin
	memory_controller_1_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then149_255)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_261)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then163_264)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else168_267)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end238_320)) begin
		memory_controller_1_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_1_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		memory_controller_1_address_a = main_if_then96_arrayidx99;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		memory_controller_1_address_a = main_if_then109_arrayidx112;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		memory_controller_1_address_a = main_if_then122_arrayidx125;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		memory_controller_1_address_a = main_if_else133_arrayidx136;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then149_255)) begin
		memory_controller_1_address_a = main_if_then149_arrayidx150;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_261)) begin
		memory_controller_1_address_a = main_if_then156_arrayidx157;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then163_264)) begin
		memory_controller_1_address_a = main_if_then163_arrayidx164;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else168_267)) begin
		memory_controller_1_address_a = main_if_else168_arrayidx169;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end238_320)) begin
		memory_controller_1_address_a = main_if_end238_pn_in_reg;
	end
end
always @(*) begin
	memory_controller_1_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then149_255)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_261)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then163_264)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else168_267)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end238_320)) begin
		memory_controller_1_size_a = 2'd2;
	end
end
assign memory_controller_1_write_enable_b = 1'd0;
assign memory_controller_1_in_b = 64'd0;
assign memory_controller_1_enable_b = 1'd0;
assign memory_controller_1_address_b = 0;
assign memory_controller_1_size_b = 2'd0;
assign memory_controller_0_write_enable_a = 1'd0;
assign memory_controller_0_in_a = 64'd0;
always @(*) begin
	memory_controller_0_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then149_255)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_261)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then163_264)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else168_267)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end238_320)) begin
		memory_controller_0_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_0_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		memory_controller_0_address_a = main_if_then96_arrayidx104;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		memory_controller_0_address_a = main_if_then109_arrayidx117;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		memory_controller_0_address_a = main_if_then122_arrayidx130;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		memory_controller_0_address_a = main_if_else133_arrayidx141;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then149_255)) begin
		memory_controller_0_address_a = main_if_then149_arrayidx152;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_261)) begin
		memory_controller_0_address_a = main_if_then156_arrayidx159;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then163_264)) begin
		memory_controller_0_address_a = main_if_then163_arrayidx166;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else168_267)) begin
		memory_controller_0_address_a = main_if_else168_arrayidx171;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end238_320)) begin
		memory_controller_0_address_a = main_if_end238_pn500_in_reg;
	end
end
always @(*) begin
	memory_controller_0_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then96_86)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then109_121)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then122_188)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_221)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then149_255)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_261)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then163_264)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else168_267)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end238_320)) begin
		memory_controller_0_size_a = 2'd2;
	end
end
assign memory_controller_0_write_enable_b = 1'd0;
assign memory_controller_0_in_b = 64'd0;
assign memory_controller_0_enable_b = 1'd0;
assign memory_controller_0_address_b = 0;
assign memory_controller_0_size_b = 2'd0;

endmodule
module ram_dual_port
(
	clk,
	clken,
	address_a,
	address_b,
	wren_a,
	data_a,
	byteena_a,
	wren_b,
	data_b,
	byteena_b,
	q_b,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
wire [(width_b-1):0] q_b_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
input  wren_b;
input [(width_b-1):0] data_b;
input [width_be_b-1:0] byteena_b;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
	.address_b (address_b),
    .addressstall_b (1'd0),
    .rden_b (clken),
    .q_b (q_b),
    .wren_a (wren_a),
    .data_a (data_a),
    .wren_b (wren_b),
    .data_b (data_b),
    .byteena_b (byteena_b),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.width_byteena_b = width_be_b,
    altsyncram_component.operation_mode = "BIDIR_DUAL_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_b = "BYPASS",
    altsyncram_component.clock_enable_output_b = "BYPASS",
    altsyncram_component.outdata_aclr_b = "NONE",
    altsyncram_component.outdata_reg_b = output_registered,
    altsyncram_component.numwords_b = numwords_b,
    altsyncram_component.widthad_b = widthad_b,
    altsyncram_component.width_b = width_b,
    altsyncram_component.address_reg_b = "CLOCK0",
    altsyncram_component.byteena_reg_b = "CLOCK0",
    altsyncram_component.indata_reg_b = "CLOCK0",
    altsyncram_component.wrcontrol_wraddress_reg_b = "CLOCK0",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module rom_dual_port
(
	clk,
	clken,
	address_a,
	q_a,
	address_b,
	q_b
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = {`MEM_INIT_DIR, "UNUSED.mif"};
parameter  latency = 1;

input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
reg [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
reg [(width_b-1):0] q_b_wire;

(* ram_init_file = init_file *) reg [width_a-1:0] ram [numwords_a-1:0];

integer i;
/* synthesis translate_off */
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == {`MEM_INIT_DIR, "UNUSED.mif"})
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

localparam input_latency = ((latency - 1) >> 1);
localparam output_latency = (latency - 1) - input_latency;
integer j;

reg [(widthad_a-1):0] address_a_reg[input_latency:0];
reg [(widthad_b-1):0] address_b_reg[input_latency:0];

always @(*)
begin
  address_a_reg[0] = address_a;
  address_b_reg[0] = address_b;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < input_latency; j=j+1)
   begin
       address_a_reg[j+1] <= address_a_reg[j];
       address_b_reg[j+1] <= address_b_reg[j];
   end
end

always @ (posedge clk)
if (clken)
begin
    q_a_wire <= ram[address_a_reg[input_latency]];
end

always @ (posedge clk)
if (clken)
begin
    q_b_wire <= ram[address_b_reg[input_latency]];
end


reg [(width_a-1):0] q_a_reg[output_latency:0];

always @(*)
begin
   q_a_reg[0] <= q_a_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
   end
end

assign q_a = q_a_reg[output_latency];
reg [(width_b-1):0] q_b_reg[output_latency:0];

always @(*)
begin
   q_b_reg[0] <= q_b_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_b = q_b_reg[output_latency];

endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);




initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;
@(negedge clk);
start <= 0;
end

always@(posedge clk) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end


endmodule
