// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Tue May  5 08:40:09 2020
// ----------------------------------------------------------------------------
`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 12
`define MEMORY_CONTROLLER_TAG_SIZE 9
// This directory contains the memory initialization files generated by LegUp.
// This relative path is used by ModelSim and FPGA synthesis tool.
`define MEM_INIT_DIR "../mem_init/"
// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX1 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcX1_a {`TAG_g_main_opcX1, 23'd0}
// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX2 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcX2_a {`TAG_g_main_opcX2, 23'd0}
// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
`define TAG_g_main_opcX3 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcX3_a {`TAG_g_main_opcX3, 23'd0}
// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY0 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcY0_a {`TAG_g_main_opcY0, 23'd0}
// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcY1_a {`TAG_g_main_opcY1, 23'd0}
// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY2 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcY2_a {`TAG_g_main_opcY2, 23'd0}
// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY3 `MEMORY_CONTROLLER_TAG_SIZE'd5
`define TAG_g_main_opcY3_a {`TAG_g_main_opcY3, 23'd0}

`timescale 1 ns / 1 ns
module top
(
	clk,
	reset,
	start,
	finish,
	return_val
);

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
reg  main_inst_clk;
reg  main_inst_reset;
reg  main_inst_start;
wire  main_inst_finish;
wire [31:0] main_inst_return_val;
wire  main_inst_memory_controller_1_write_enable_a;
wire [63:0] main_inst_memory_controller_1_in_a;
wire  main_inst_memory_controller_1_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_a;
wire [1:0] main_inst_memory_controller_1_size_a;
reg [63:0] main_inst_memory_controller_1_out_a;
wire  main_inst_memory_controller_1_write_enable_b;
wire [63:0] main_inst_memory_controller_1_in_b;
wire  main_inst_memory_controller_1_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_b;
wire [1:0] main_inst_memory_controller_1_size_b;
reg [63:0] main_inst_memory_controller_1_out_b;
wire  main_inst_memory_controller_0_write_enable_a;
wire [63:0] main_inst_memory_controller_0_in_a;
wire  main_inst_memory_controller_0_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_a;
wire [1:0] main_inst_memory_controller_0_size_a;
reg [63:0] main_inst_memory_controller_0_out_a;
wire  main_inst_memory_controller_0_write_enable_b;
wire [63:0] main_inst_memory_controller_0_in_b;
wire  main_inst_memory_controller_0_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_b;
wire [1:0] main_inst_memory_controller_0_size_b;
reg [63:0] main_inst_memory_controller_0_out_b;
reg  main_inst_finish_reg;
reg [31:0] main_inst_return_val_reg;
reg  memory_controller_1_inst_clk;
wire  memory_controller_1_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_a;
reg  memory_controller_1_inst_memory_controller_enable_a;
reg [1:0] memory_controller_1_inst_memory_controller_size_a;
reg  memory_controller_1_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_1_inst_memory_controller_in_a;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_b;
reg  memory_controller_1_inst_memory_controller_enable_b;
reg [1:0] memory_controller_1_inst_memory_controller_size_b;
reg  memory_controller_1_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_1_inst_memory_controller_in_b;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_b;
reg  memory_controller_0_inst_clk;
wire  memory_controller_0_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_a;
reg  memory_controller_0_inst_memory_controller_enable_a;
reg [1:0] memory_controller_0_inst_memory_controller_size_a;
reg  memory_controller_0_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_0_inst_memory_controller_in_a;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_b;
reg  memory_controller_0_inst_memory_controller_enable_b;
reg [1:0] memory_controller_0_inst_memory_controller_size_b;
reg  memory_controller_0_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_0_inst_memory_controller_in_b;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_b;


main main_inst (
	.clk (main_inst_clk),
	.reset (main_inst_reset),
	.start (main_inst_start),
	.finish (main_inst_finish),
	.return_val (main_inst_return_val),
	.memory_controller_1_write_enable_a (main_inst_memory_controller_1_write_enable_a),
	.memory_controller_1_in_a (main_inst_memory_controller_1_in_a),
	.memory_controller_1_enable_a (main_inst_memory_controller_1_enable_a),
	.memory_controller_1_address_a (main_inst_memory_controller_1_address_a),
	.memory_controller_1_size_a (main_inst_memory_controller_1_size_a),
	.memory_controller_1_out_a (main_inst_memory_controller_1_out_a),
	.memory_controller_1_write_enable_b (main_inst_memory_controller_1_write_enable_b),
	.memory_controller_1_in_b (main_inst_memory_controller_1_in_b),
	.memory_controller_1_enable_b (main_inst_memory_controller_1_enable_b),
	.memory_controller_1_address_b (main_inst_memory_controller_1_address_b),
	.memory_controller_1_size_b (main_inst_memory_controller_1_size_b),
	.memory_controller_1_out_b (main_inst_memory_controller_1_out_b),
	.memory_controller_0_write_enable_a (main_inst_memory_controller_0_write_enable_a),
	.memory_controller_0_in_a (main_inst_memory_controller_0_in_a),
	.memory_controller_0_enable_a (main_inst_memory_controller_0_enable_a),
	.memory_controller_0_address_a (main_inst_memory_controller_0_address_a),
	.memory_controller_0_size_a (main_inst_memory_controller_0_size_a),
	.memory_controller_0_out_a (main_inst_memory_controller_0_out_a),
	.memory_controller_0_write_enable_b (main_inst_memory_controller_0_write_enable_b),
	.memory_controller_0_in_b (main_inst_memory_controller_0_in_b),
	.memory_controller_0_enable_b (main_inst_memory_controller_0_enable_b),
	.memory_controller_0_address_b (main_inst_memory_controller_0_address_b),
	.memory_controller_0_size_b (main_inst_memory_controller_0_size_b),
	.memory_controller_0_out_b (main_inst_memory_controller_0_out_b)
);



memory_controller_1 memory_controller_1_inst (
	.clk (memory_controller_1_inst_clk),
	.memory_controller_waitrequest (memory_controller_1_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_1_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_1_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_1_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_1_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_1_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_1_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_1_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_1_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_1_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_1_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_1_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_1_inst_memory_controller_out_reg_b)
);



memory_controller_0 memory_controller_0_inst (
	.clk (memory_controller_0_inst_clk),
	.memory_controller_waitrequest (memory_controller_0_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_0_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_0_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_0_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_0_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_0_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_0_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_0_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_0_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_0_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_0_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_0_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_0_inst_memory_controller_out_reg_b)
);



always @(*) begin
	main_inst_clk = clk;
end
always @(*) begin
	main_inst_reset = reset;
end
always @(*) begin
	main_inst_start = start;
end
always @(*) begin
	main_inst_memory_controller_1_out_a = memory_controller_1_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_1_out_b = memory_controller_1_inst_memory_controller_out_reg_b;
end
always @(*) begin
	main_inst_memory_controller_0_out_a = memory_controller_0_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_0_out_b = memory_controller_0_inst_memory_controller_out_reg_b;
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_finish_reg <= 1'd0;
	end
	if (main_inst_finish) begin
		main_inst_finish_reg <= 1'd1;
	end
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_return_val_reg <= 0;
	end
	if (main_inst_finish) begin
		main_inst_return_val_reg <= main_inst_return_val;
	end
end
always @(*) begin
	memory_controller_1_inst_clk = clk;
end
assign memory_controller_1_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_1_inst_memory_controller_address_a = main_inst_memory_controller_1_address_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_a = main_inst_memory_controller_1_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_a = main_inst_memory_controller_1_size_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_a = main_inst_memory_controller_1_write_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_a = main_inst_memory_controller_1_in_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_address_b = main_inst_memory_controller_1_address_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_b = main_inst_memory_controller_1_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_b = main_inst_memory_controller_1_size_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_b = main_inst_memory_controller_1_write_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_b = main_inst_memory_controller_1_in_b;
end
always @(*) begin
	memory_controller_0_inst_clk = clk;
end
assign memory_controller_0_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_0_inst_memory_controller_address_a = main_inst_memory_controller_0_address_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_a = main_inst_memory_controller_0_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_a = main_inst_memory_controller_0_size_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_a = main_inst_memory_controller_0_write_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_a = main_inst_memory_controller_0_in_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_address_b = main_inst_memory_controller_0_address_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_b = main_inst_memory_controller_0_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_b = main_inst_memory_controller_0_size_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_b = main_inst_memory_controller_0_write_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_b = main_inst_memory_controller_0_in_b;
end
always @(*) begin
	finish = main_inst_finish;
end
always @(*) begin
	return_val = main_inst_return_val;
end

endmodule
`timescale 1 ns / 1 ns
module memory_controller_0
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcY0_address_a;
reg [5:0] main_opcY0_address_b;
reg main_opcY0_write_enable_a;
reg main_opcY0_write_enable_b;
reg [31:0] main_opcY0_in_a;
reg [31:0] main_opcY0_in_b;
wire [31:0] main_opcY0_out_a;
wire [31:0] main_opcY0_out_b;

// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY0 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY0_address_a ),
	.q_a( main_opcY0_out_a ),
	.address_b( main_opcY0_address_b ),
	.q_b( main_opcY0_out_b )
);
defparam main_opcY0.width_a = 32;
defparam main_opcY0.widthad_a = 6;
defparam main_opcY0.numwords_a = 62;
defparam main_opcY0.width_b = 32;
defparam main_opcY0.widthad_b = 6;
defparam main_opcY0.numwords_b = 62;
defparam main_opcY0.latency = ram_latency;
defparam main_opcY0.init_file = {`MEM_INIT_DIR, "main_opcY0.mif"};

reg [5:0] main_opcY1_address_a;
reg [5:0] main_opcY1_address_b;
reg main_opcY1_write_enable_a;
reg main_opcY1_write_enable_b;
reg [31:0] main_opcY1_in_a;
reg [31:0] main_opcY1_in_b;
wire [31:0] main_opcY1_out_a;
wire [31:0] main_opcY1_out_b;

// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY1_address_a ),
	.q_a( main_opcY1_out_a ),
	.address_b( main_opcY1_address_b ),
	.q_b( main_opcY1_out_b )
);
defparam main_opcY1.width_a = 32;
defparam main_opcY1.widthad_a = 6;
defparam main_opcY1.numwords_a = 62;
defparam main_opcY1.width_b = 32;
defparam main_opcY1.widthad_b = 6;
defparam main_opcY1.numwords_b = 62;
defparam main_opcY1.latency = ram_latency;
defparam main_opcY1.init_file = {`MEM_INIT_DIR, "main_opcY1.mif"};

reg [5:0] main_opcY2_address_a;
reg [5:0] main_opcY2_address_b;
reg main_opcY2_write_enable_a;
reg main_opcY2_write_enable_b;
reg [31:0] main_opcY2_in_a;
reg [31:0] main_opcY2_in_b;
wire [31:0] main_opcY2_out_a;
wire [31:0] main_opcY2_out_b;

// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY2_address_a ),
	.q_a( main_opcY2_out_a ),
	.address_b( main_opcY2_address_b ),
	.q_b( main_opcY2_out_b )
);
defparam main_opcY2.width_a = 32;
defparam main_opcY2.widthad_a = 6;
defparam main_opcY2.numwords_a = 62;
defparam main_opcY2.width_b = 32;
defparam main_opcY2.widthad_b = 6;
defparam main_opcY2.numwords_b = 62;
defparam main_opcY2.latency = ram_latency;
defparam main_opcY2.init_file = {`MEM_INIT_DIR, "main_opcY2.mif"};

reg [5:0] main_opcY3_address_a;
reg [5:0] main_opcY3_address_b;
reg main_opcY3_write_enable_a;
reg main_opcY3_write_enable_b;
reg [31:0] main_opcY3_in_a;
reg [31:0] main_opcY3_in_b;
wire [31:0] main_opcY3_out_a;
wire [31:0] main_opcY3_out_b;

// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY3_address_a ),
	.q_a( main_opcY3_out_a ),
	.address_b( main_opcY3_address_b ),
	.q_b( main_opcY3_out_b )
);
defparam main_opcY3.width_a = 32;
defparam main_opcY3.widthad_a = 6;
defparam main_opcY3.numwords_a = 62;
defparam main_opcY3.width_b = 32;
defparam main_opcY3.widthad_b = 6;
defparam main_opcY3.numwords_b = 62;
defparam main_opcY3.latency = ram_latency;
defparam main_opcY3.init_file = {`MEM_INIT_DIR, "main_opcY3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcY0_a;
assign select_main_opcY0_a = (tag_a == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_a;
wire [31:0] memory_controller_main_opcY0_out_a;
assign memory_controller_main_opcY0_out_a = {32{ select_main_opcY0_reg_a[ram_latency]}} & main_opcY0_out_a;

wire select_main_opcY1_a;
assign select_main_opcY1_a = (tag_a == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_a;
wire [31:0] memory_controller_main_opcY1_out_a;
assign memory_controller_main_opcY1_out_a = {32{ select_main_opcY1_reg_a[ram_latency]}} & main_opcY1_out_a;

wire select_main_opcY2_a;
assign select_main_opcY2_a = (tag_a == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_a;
wire [31:0] memory_controller_main_opcY2_out_a;
assign memory_controller_main_opcY2_out_a = {32{ select_main_opcY2_reg_a[ram_latency]}} & main_opcY2_out_a;

wire select_main_opcY3_a;
assign select_main_opcY3_a = (tag_a == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_a;
wire [31:0] memory_controller_main_opcY3_out_a;
assign memory_controller_main_opcY3_out_a = {32{ select_main_opcY3_reg_a[ram_latency]}} & main_opcY3_out_a;

always @(*)
begin
main_opcY0_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY0_a}};
main_opcY0_write_enable_a = memory_controller_write_enable_a & select_main_opcY0_a;
main_opcY0_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY1_a}};
main_opcY1_write_enable_a = memory_controller_write_enable_a & select_main_opcY1_a;
main_opcY1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY2_a}};
main_opcY2_write_enable_a = memory_controller_write_enable_a & select_main_opcY2_a;
main_opcY2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY3_a}};
main_opcY3_write_enable_a = memory_controller_write_enable_a & select_main_opcY3_a;
main_opcY3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcY0_reg_a[ram_latency]}} | {2{select_main_opcY1_reg_a[ram_latency]}} | {2{select_main_opcY2_reg_a[ram_latency]}} | {2{select_main_opcY3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcY0_out_a | memory_controller_main_opcY1_out_a | memory_controller_main_opcY2_out_a | memory_controller_main_opcY3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_a[j+1] <= select_main_opcY0_reg_a[j];
select_main_opcY1_reg_a[j+1] <= select_main_opcY1_reg_a[j];
select_main_opcY2_reg_a[j+1] <= select_main_opcY2_reg_a[j];
select_main_opcY3_reg_a[j+1] <= select_main_opcY3_reg_a[j];
end
always @(*)
begin
select_main_opcY0_reg_a[0] <= select_main_opcY0_a;
select_main_opcY1_reg_a[0] <= select_main_opcY1_a;
select_main_opcY2_reg_a[0] <= select_main_opcY2_a;
select_main_opcY3_reg_a[0] <= select_main_opcY3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcY0_b;
assign select_main_opcY0_b = (tag_b == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_b;
wire [31:0] memory_controller_main_opcY0_out_b;
assign memory_controller_main_opcY0_out_b = {32{ select_main_opcY0_reg_b[ram_latency]}} & main_opcY0_out_b;

wire select_main_opcY1_b;
assign select_main_opcY1_b = (tag_b == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_b;
wire [31:0] memory_controller_main_opcY1_out_b;
assign memory_controller_main_opcY1_out_b = {32{ select_main_opcY1_reg_b[ram_latency]}} & main_opcY1_out_b;

wire select_main_opcY2_b;
assign select_main_opcY2_b = (tag_b == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_b;
wire [31:0] memory_controller_main_opcY2_out_b;
assign memory_controller_main_opcY2_out_b = {32{ select_main_opcY2_reg_b[ram_latency]}} & main_opcY2_out_b;

wire select_main_opcY3_b;
assign select_main_opcY3_b = (tag_b == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_b;
wire [31:0] memory_controller_main_opcY3_out_b;
assign memory_controller_main_opcY3_out_b = {32{ select_main_opcY3_reg_b[ram_latency]}} & main_opcY3_out_b;

always @(*)
begin
main_opcY0_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY0_b}};
main_opcY0_write_enable_b = memory_controller_write_enable_b & select_main_opcY0_b;
main_opcY0_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY1_b}};
main_opcY1_write_enable_b = memory_controller_write_enable_b & select_main_opcY1_b;
main_opcY1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY2_b}};
main_opcY2_write_enable_b = memory_controller_write_enable_b & select_main_opcY2_b;
main_opcY2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY3_b}};
main_opcY3_write_enable_b = memory_controller_write_enable_b & select_main_opcY3_b;
main_opcY3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcY0_reg_b[ram_latency]}} | {2{select_main_opcY1_reg_b[ram_latency]}} | {2{select_main_opcY2_reg_b[ram_latency]}} | {2{select_main_opcY3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcY0_out_b | memory_controller_main_opcY1_out_b | memory_controller_main_opcY2_out_b | memory_controller_main_opcY3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_b[j+1] <= select_main_opcY0_reg_b[j];
select_main_opcY1_reg_b[j+1] <= select_main_opcY1_reg_b[j];
select_main_opcY2_reg_b[j+1] <= select_main_opcY2_reg_b[j];
select_main_opcY3_reg_b[j+1] <= select_main_opcY3_reg_b[j];
end
always @(*)
begin
select_main_opcY0_reg_b[0] <= select_main_opcY0_b;
select_main_opcY1_reg_b[0] <= select_main_opcY1_b;
select_main_opcY2_reg_b[0] <= select_main_opcY2_b;
select_main_opcY3_reg_b[0] <= select_main_opcY3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module memory_controller_1
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcX1_address_a;
reg [5:0] main_opcX1_address_b;
reg main_opcX1_write_enable_a;
reg main_opcX1_write_enable_b;
reg [31:0] main_opcX1_in_a;
reg [31:0] main_opcX1_in_b;
wire [31:0] main_opcX1_out_a;
wire [31:0] main_opcX1_out_b;

// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX1_address_a ),
	.q_a( main_opcX1_out_a ),
	.address_b( main_opcX1_address_b ),
	.q_b( main_opcX1_out_b )
);
defparam main_opcX1.width_a = 32;
defparam main_opcX1.widthad_a = 6;
defparam main_opcX1.numwords_a = 62;
defparam main_opcX1.width_b = 32;
defparam main_opcX1.widthad_b = 6;
defparam main_opcX1.numwords_b = 62;
defparam main_opcX1.latency = ram_latency;
defparam main_opcX1.init_file = {`MEM_INIT_DIR, "main_opcX1.mif"};

reg [5:0] main_opcX2_address_a;
reg [5:0] main_opcX2_address_b;
reg main_opcX2_write_enable_a;
reg main_opcX2_write_enable_b;
reg [31:0] main_opcX2_in_a;
reg [31:0] main_opcX2_in_b;
wire [31:0] main_opcX2_out_a;
wire [31:0] main_opcX2_out_b;

// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX2_address_a ),
	.q_a( main_opcX2_out_a ),
	.address_b( main_opcX2_address_b ),
	.q_b( main_opcX2_out_b )
);
defparam main_opcX2.width_a = 32;
defparam main_opcX2.widthad_a = 6;
defparam main_opcX2.numwords_a = 62;
defparam main_opcX2.width_b = 32;
defparam main_opcX2.widthad_b = 6;
defparam main_opcX2.numwords_b = 62;
defparam main_opcX2.latency = ram_latency;
defparam main_opcX2.init_file = {`MEM_INIT_DIR, "main_opcX2.mif"};

reg [5:0] main_opcX3_address_a;
reg [5:0] main_opcX3_address_b;
reg main_opcX3_write_enable_a;
reg main_opcX3_write_enable_b;
reg [31:0] main_opcX3_in_a;
reg [31:0] main_opcX3_in_b;
wire [31:0] main_opcX3_out_a;
wire [31:0] main_opcX3_out_b;

// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
rom_dual_port main_opcX3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX3_address_a ),
	.q_a( main_opcX3_out_a ),
	.address_b( main_opcX3_address_b ),
	.q_b( main_opcX3_out_b )
);
defparam main_opcX3.width_a = 32;
defparam main_opcX3.widthad_a = 6;
defparam main_opcX3.numwords_a = 62;
defparam main_opcX3.width_b = 32;
defparam main_opcX3.widthad_b = 6;
defparam main_opcX3.numwords_b = 62;
defparam main_opcX3.latency = ram_latency;
defparam main_opcX3.init_file = {`MEM_INIT_DIR, "main_opcX3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcX1_a;
assign select_main_opcX1_a = (tag_a == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_a;
wire [31:0] memory_controller_main_opcX1_out_a;
assign memory_controller_main_opcX1_out_a = {32{ select_main_opcX1_reg_a[ram_latency]}} & main_opcX1_out_a;

wire select_main_opcX2_a;
assign select_main_opcX2_a = (tag_a == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_a;
wire [31:0] memory_controller_main_opcX2_out_a;
assign memory_controller_main_opcX2_out_a = {32{ select_main_opcX2_reg_a[ram_latency]}} & main_opcX2_out_a;

wire select_main_opcX3_a;
assign select_main_opcX3_a = (tag_a == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_a;
wire [31:0] memory_controller_main_opcX3_out_a;
assign memory_controller_main_opcX3_out_a = {32{ select_main_opcX3_reg_a[ram_latency]}} & main_opcX3_out_a;

always @(*)
begin
main_opcX1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX1_a}};
main_opcX1_write_enable_a = memory_controller_write_enable_a & select_main_opcX1_a;
main_opcX1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX2_a}};
main_opcX2_write_enable_a = memory_controller_write_enable_a & select_main_opcX2_a;
main_opcX2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX3_a}};
main_opcX3_write_enable_a = memory_controller_write_enable_a & select_main_opcX3_a;
main_opcX3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcX1_reg_a[ram_latency]}} | {2{select_main_opcX2_reg_a[ram_latency]}} | {2{select_main_opcX3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcX1_out_a | memory_controller_main_opcX2_out_a | memory_controller_main_opcX3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_a[j+1] <= select_main_opcX1_reg_a[j];
select_main_opcX2_reg_a[j+1] <= select_main_opcX2_reg_a[j];
select_main_opcX3_reg_a[j+1] <= select_main_opcX3_reg_a[j];
end
always @(*)
begin
select_main_opcX1_reg_a[0] <= select_main_opcX1_a;
select_main_opcX2_reg_a[0] <= select_main_opcX2_a;
select_main_opcX3_reg_a[0] <= select_main_opcX3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcX1_b;
assign select_main_opcX1_b = (tag_b == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_b;
wire [31:0] memory_controller_main_opcX1_out_b;
assign memory_controller_main_opcX1_out_b = {32{ select_main_opcX1_reg_b[ram_latency]}} & main_opcX1_out_b;

wire select_main_opcX2_b;
assign select_main_opcX2_b = (tag_b == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_b;
wire [31:0] memory_controller_main_opcX2_out_b;
assign memory_controller_main_opcX2_out_b = {32{ select_main_opcX2_reg_b[ram_latency]}} & main_opcX2_out_b;

wire select_main_opcX3_b;
assign select_main_opcX3_b = (tag_b == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_b;
wire [31:0] memory_controller_main_opcX3_out_b;
assign memory_controller_main_opcX3_out_b = {32{ select_main_opcX3_reg_b[ram_latency]}} & main_opcX3_out_b;

always @(*)
begin
main_opcX1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX1_b}};
main_opcX1_write_enable_b = memory_controller_write_enable_b & select_main_opcX1_b;
main_opcX1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX2_b}};
main_opcX2_write_enable_b = memory_controller_write_enable_b & select_main_opcX2_b;
main_opcX2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX3_b}};
main_opcX3_write_enable_b = memory_controller_write_enable_b & select_main_opcX3_b;
main_opcX3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcX1_reg_b[ram_latency]}} | {2{select_main_opcX2_reg_b[ram_latency]}} | {2{select_main_opcX3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcX1_out_b | memory_controller_main_opcX2_out_b | memory_controller_main_opcX3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_b[j+1] <= select_main_opcX1_reg_b[j];
select_main_opcX2_reg_b[j+1] <= select_main_opcX2_reg_b[j];
select_main_opcX3_reg_b[j+1] <= select_main_opcX3_reg_b[j];
end
always @(*)
begin
select_main_opcX1_reg_b[0] <= select_main_opcX1_b;
select_main_opcX2_reg_b[0] <= select_main_opcX2_b;
select_main_opcX3_reg_b[0] <= select_main_opcX3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module main
(
	clk,
	reset,
	start,
	finish,
	return_val,
	memory_controller_1_write_enable_a,
	memory_controller_1_in_a,
	memory_controller_1_enable_a,
	memory_controller_1_address_a,
	memory_controller_1_size_a,
	memory_controller_1_out_a,
	memory_controller_1_write_enable_b,
	memory_controller_1_in_b,
	memory_controller_1_enable_b,
	memory_controller_1_address_b,
	memory_controller_1_size_b,
	memory_controller_1_out_b,
	memory_controller_0_write_enable_a,
	memory_controller_0_in_a,
	memory_controller_0_enable_a,
	memory_controller_0_address_a,
	memory_controller_0_size_a,
	memory_controller_0_out_a,
	memory_controller_0_write_enable_b,
	memory_controller_0_in_b,
	memory_controller_0_enable_b,
	memory_controller_0_address_b,
	memory_controller_0_size_b,
	memory_controller_0_out_b
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_main_BB_entry_1 = 9'd1;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_2 = 9'd2;
parameter [8:0] LEGUP_F_main_BB_NodeBlock7_3 = 9'd3;
parameter [8:0] LEGUP_F_main_BB_NodeBlock5_4 = 9'd4;
parameter [8:0] LEGUP_F_main_BB_LeafBlock3_5 = 9'd5;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_backedge_6 = 9'd6;
parameter [8:0] LEGUP_F_main_BB_for_cond331_preheader_preheader_7 = 9'd7;
parameter [8:0] LEGUP_F_main_BB_NodeBlock1_8 = 9'd8;
parameter [8:0] LEGUP_F_main_BB_NodeBlock_9 = 9'd9;
parameter [8:0] LEGUP_F_main_BB_LeafBlock_10 = 9'd10;
parameter [8:0] LEGUP_F_main_BB_sw_bb_11 = 9'd11;
parameter [8:0] LEGUP_F_main_BB_sw_bb_12 = 9'd12;
parameter [8:0] LEGUP_F_main_BB_sw_bb_13 = 9'd13;
parameter [8:0] LEGUP_F_main_BB_sw_bb_14 = 9'd14;
parameter [8:0] LEGUP_F_main_BB_sw_bb_15 = 9'd15;
parameter [8:0] LEGUP_F_main_BB_sw_bb_16 = 9'd16;
parameter [8:0] LEGUP_F_main_BB_sw_bb_17 = 9'd17;
parameter [8:0] LEGUP_F_main_BB_sw_bb_18 = 9'd18;
parameter [8:0] LEGUP_F_main_BB_sw_bb_19 = 9'd19;
parameter [8:0] LEGUP_F_main_BB_sw_bb_20 = 9'd20;
parameter [8:0] LEGUP_F_main_BB_sw_bb_21 = 9'd21;
parameter [8:0] LEGUP_F_main_BB_sw_bb_22 = 9'd22;
parameter [8:0] LEGUP_F_main_BB_sw_bb_23 = 9'd23;
parameter [8:0] LEGUP_F_main_BB_sw_bb_24 = 9'd24;
parameter [8:0] LEGUP_F_main_BB_sw_bb_25 = 9'd25;
parameter [8:0] LEGUP_F_main_BB_sw_bb_26 = 9'd26;
parameter [8:0] LEGUP_F_main_BB_sw_bb_27 = 9'd27;
parameter [8:0] LEGUP_F_main_BB_sw_bb_28 = 9'd28;
parameter [8:0] LEGUP_F_main_BB_sw_bb_29 = 9'd29;
parameter [8:0] LEGUP_F_main_BB_sw_bb_30 = 9'd30;
parameter [8:0] LEGUP_F_main_BB_for_body89_31 = 9'd31;
parameter [8:0] LEGUP_F_main_BB_for_body89_32 = 9'd32;
parameter [8:0] LEGUP_F_main_BB_for_end94_33 = 9'd33;
parameter [8:0] LEGUP_F_main_BB_for_end94_34 = 9'd34;
parameter [8:0] LEGUP_F_main_BB_for_end94_35 = 9'd35;
parameter [8:0] LEGUP_F_main_BB_for_end94_36 = 9'd36;
parameter [8:0] LEGUP_F_main_BB_for_end94_37 = 9'd37;
parameter [8:0] LEGUP_F_main_BB_for_end94_38 = 9'd38;
parameter [8:0] LEGUP_F_main_BB_for_end94_39 = 9'd39;
parameter [8:0] LEGUP_F_main_BB_for_end94_40 = 9'd40;
parameter [8:0] LEGUP_F_main_BB_for_end94_41 = 9'd41;
parameter [8:0] LEGUP_F_main_BB_for_end94_42 = 9'd42;
parameter [8:0] LEGUP_F_main_BB_for_end94_43 = 9'd43;
parameter [8:0] LEGUP_F_main_BB_for_end94_44 = 9'd44;
parameter [8:0] LEGUP_F_main_BB_for_end94_45 = 9'd45;
parameter [8:0] LEGUP_F_main_BB_for_end94_46 = 9'd46;
parameter [8:0] LEGUP_F_main_BB_for_end94_47 = 9'd47;
parameter [8:0] LEGUP_F_main_BB_for_end94_48 = 9'd48;
parameter [8:0] LEGUP_F_main_BB_for_end94_49 = 9'd49;
parameter [8:0] LEGUP_F_main_BB_for_end94_50 = 9'd50;
parameter [8:0] LEGUP_F_main_BB_for_end94_51 = 9'd51;
parameter [8:0] LEGUP_F_main_BB_for_end94_52 = 9'd52;
parameter [8:0] LEGUP_F_main_BB_for_end94_53 = 9'd53;
parameter [8:0] LEGUP_F_main_BB_for_end94_54 = 9'd54;
parameter [8:0] LEGUP_F_main_BB_for_end94_55 = 9'd55;
parameter [8:0] LEGUP_F_main_BB_for_end94_56 = 9'd56;
parameter [8:0] LEGUP_F_main_BB_for_end94_57 = 9'd57;
parameter [8:0] LEGUP_F_main_BB_for_end94_58 = 9'd58;
parameter [8:0] LEGUP_F_main_BB_for_end94_59 = 9'd59;
parameter [8:0] LEGUP_F_main_BB_for_end94_60 = 9'd60;
parameter [8:0] LEGUP_F_main_BB_for_end94_61 = 9'd61;
parameter [8:0] LEGUP_F_main_BB_for_end94_62 = 9'd62;
parameter [8:0] LEGUP_F_main_BB_for_end94_63 = 9'd63;
parameter [8:0] LEGUP_F_main_BB_for_end94_64 = 9'd64;
parameter [8:0] LEGUP_F_main_BB_for_end94_65 = 9'd65;
parameter [8:0] LEGUP_F_main_BB_for_end94_66 = 9'd66;
parameter [8:0] LEGUP_F_main_BB_for_end94_67 = 9'd67;
parameter [8:0] LEGUP_F_main_BB_for_end94_68 = 9'd68;
parameter [8:0] LEGUP_F_main_BB_sw_bb105_69 = 9'd69;
parameter [8:0] LEGUP_F_main_BB_if_end_70 = 9'd70;
parameter [8:0] LEGUP_F_main_BB_if_end_71 = 9'd71;
parameter [8:0] LEGUP_F_main_BB_if_end_72 = 9'd72;
parameter [8:0] LEGUP_F_main_BB_sw_bb116_73 = 9'd73;
parameter [8:0] LEGUP_F_main_BB_if_end119_74 = 9'd74;
parameter [8:0] LEGUP_F_main_BB_if_end119_75 = 9'd75;
parameter [8:0] LEGUP_F_main_BB_if_end119_76 = 9'd76;
parameter [8:0] LEGUP_F_main_BB_if_end119_77 = 9'd77;
parameter [8:0] LEGUP_F_main_BB_if_end119_78 = 9'd78;
parameter [8:0] LEGUP_F_main_BB_if_end119_79 = 9'd79;
parameter [8:0] LEGUP_F_main_BB_if_end119_80 = 9'd80;
parameter [8:0] LEGUP_F_main_BB_if_end119_81 = 9'd81;
parameter [8:0] LEGUP_F_main_BB_if_end119_82 = 9'd82;
parameter [8:0] LEGUP_F_main_BB_if_end119_83 = 9'd83;
parameter [8:0] LEGUP_F_main_BB_if_end119_84 = 9'd84;
parameter [8:0] LEGUP_F_main_BB_if_end119_85 = 9'd85;
parameter [8:0] LEGUP_F_main_BB_if_end119_86 = 9'd86;
parameter [8:0] LEGUP_F_main_BB_if_end119_87 = 9'd87;
parameter [8:0] LEGUP_F_main_BB_if_end119_88 = 9'd88;
parameter [8:0] LEGUP_F_main_BB_if_end119_89 = 9'd89;
parameter [8:0] LEGUP_F_main_BB_if_end119_90 = 9'd90;
parameter [8:0] LEGUP_F_main_BB_if_end119_91 = 9'd91;
parameter [8:0] LEGUP_F_main_BB_if_end119_92 = 9'd92;
parameter [8:0] LEGUP_F_main_BB_if_end119_93 = 9'd93;
parameter [8:0] LEGUP_F_main_BB_if_end119_94 = 9'd94;
parameter [8:0] LEGUP_F_main_BB_if_end119_95 = 9'd95;
parameter [8:0] LEGUP_F_main_BB_if_end119_96 = 9'd96;
parameter [8:0] LEGUP_F_main_BB_if_end119_97 = 9'd97;
parameter [8:0] LEGUP_F_main_BB_if_end119_98 = 9'd98;
parameter [8:0] LEGUP_F_main_BB_if_end119_99 = 9'd99;
parameter [8:0] LEGUP_F_main_BB_if_end119_100 = 9'd100;
parameter [8:0] LEGUP_F_main_BB_if_end119_101 = 9'd101;
parameter [8:0] LEGUP_F_main_BB_if_end119_102 = 9'd102;
parameter [8:0] LEGUP_F_main_BB_if_end119_103 = 9'd103;
parameter [8:0] LEGUP_F_main_BB_if_end119_104 = 9'd104;
parameter [8:0] LEGUP_F_main_BB_if_end119_105 = 9'd105;
parameter [8:0] LEGUP_F_main_BB_if_end119_106 = 9'd106;
parameter [8:0] LEGUP_F_main_BB_if_then124_107 = 9'd107;
parameter [8:0] LEGUP_F_main_BB_if_then126_108 = 9'd108;
parameter [8:0] LEGUP_F_main_BB_if_then126_109 = 9'd109;
parameter [8:0] LEGUP_F_main_BB_if_then126_110 = 9'd110;
parameter [8:0] LEGUP_F_main_BB_if_then126_111 = 9'd111;
parameter [8:0] LEGUP_F_main_BB_if_then126_112 = 9'd112;
parameter [8:0] LEGUP_F_main_BB_if_then126_113 = 9'd113;
parameter [8:0] LEGUP_F_main_BB_if_then126_114 = 9'd114;
parameter [8:0] LEGUP_F_main_BB_if_then126_115 = 9'd115;
parameter [8:0] LEGUP_F_main_BB_if_then126_116 = 9'd116;
parameter [8:0] LEGUP_F_main_BB_if_then126_117 = 9'd117;
parameter [8:0] LEGUP_F_main_BB_if_then126_118 = 9'd118;
parameter [8:0] LEGUP_F_main_BB_if_then126_119 = 9'd119;
parameter [8:0] LEGUP_F_main_BB_if_then126_120 = 9'd120;
parameter [8:0] LEGUP_F_main_BB_if_then126_121 = 9'd121;
parameter [8:0] LEGUP_F_main_BB_if_then126_122 = 9'd122;
parameter [8:0] LEGUP_F_main_BB_if_then126_123 = 9'd123;
parameter [8:0] LEGUP_F_main_BB_if_then126_124 = 9'd124;
parameter [8:0] LEGUP_F_main_BB_if_then126_125 = 9'd125;
parameter [8:0] LEGUP_F_main_BB_if_then126_126 = 9'd126;
parameter [8:0] LEGUP_F_main_BB_if_then126_127 = 9'd127;
parameter [8:0] LEGUP_F_main_BB_if_then126_128 = 9'd128;
parameter [8:0] LEGUP_F_main_BB_if_then126_129 = 9'd129;
parameter [8:0] LEGUP_F_main_BB_if_then126_130 = 9'd130;
parameter [8:0] LEGUP_F_main_BB_if_then126_131 = 9'd131;
parameter [8:0] LEGUP_F_main_BB_if_then126_132 = 9'd132;
parameter [8:0] LEGUP_F_main_BB_if_then126_133 = 9'd133;
parameter [8:0] LEGUP_F_main_BB_if_then126_134 = 9'd134;
parameter [8:0] LEGUP_F_main_BB_if_then126_135 = 9'd135;
parameter [8:0] LEGUP_F_main_BB_if_then126_136 = 9'd136;
parameter [8:0] LEGUP_F_main_BB_if_then126_137 = 9'd137;
parameter [8:0] LEGUP_F_main_BB_if_then126_138 = 9'd138;
parameter [8:0] LEGUP_F_main_BB_if_then126_139 = 9'd139;
parameter [8:0] LEGUP_F_main_BB_if_then126_140 = 9'd140;
parameter [8:0] LEGUP_F_main_BB_if_then126_141 = 9'd141;
parameter [8:0] LEGUP_F_main_BB_if_else137_142 = 9'd142;
parameter [8:0] LEGUP_F_main_BB_if_then139_143 = 9'd143;
parameter [8:0] LEGUP_F_main_BB_if_then139_144 = 9'd144;
parameter [8:0] LEGUP_F_main_BB_if_then139_145 = 9'd145;
parameter [8:0] LEGUP_F_main_BB_if_then139_146 = 9'd146;
parameter [8:0] LEGUP_F_main_BB_if_then139_147 = 9'd147;
parameter [8:0] LEGUP_F_main_BB_if_then139_148 = 9'd148;
parameter [8:0] LEGUP_F_main_BB_if_then139_149 = 9'd149;
parameter [8:0] LEGUP_F_main_BB_if_then139_150 = 9'd150;
parameter [8:0] LEGUP_F_main_BB_if_then139_151 = 9'd151;
parameter [8:0] LEGUP_F_main_BB_if_then139_152 = 9'd152;
parameter [8:0] LEGUP_F_main_BB_if_then139_153 = 9'd153;
parameter [8:0] LEGUP_F_main_BB_if_then139_154 = 9'd154;
parameter [8:0] LEGUP_F_main_BB_if_then139_155 = 9'd155;
parameter [8:0] LEGUP_F_main_BB_if_then139_156 = 9'd156;
parameter [8:0] LEGUP_F_main_BB_if_then139_157 = 9'd157;
parameter [8:0] LEGUP_F_main_BB_if_then139_158 = 9'd158;
parameter [8:0] LEGUP_F_main_BB_if_then139_159 = 9'd159;
parameter [8:0] LEGUP_F_main_BB_if_then139_160 = 9'd160;
parameter [8:0] LEGUP_F_main_BB_if_then139_161 = 9'd161;
parameter [8:0] LEGUP_F_main_BB_if_then139_162 = 9'd162;
parameter [8:0] LEGUP_F_main_BB_if_then139_163 = 9'd163;
parameter [8:0] LEGUP_F_main_BB_if_then139_164 = 9'd164;
parameter [8:0] LEGUP_F_main_BB_if_then139_165 = 9'd165;
parameter [8:0] LEGUP_F_main_BB_if_then139_166 = 9'd166;
parameter [8:0] LEGUP_F_main_BB_if_then139_167 = 9'd167;
parameter [8:0] LEGUP_F_main_BB_if_then139_168 = 9'd168;
parameter [8:0] LEGUP_F_main_BB_if_then139_169 = 9'd169;
parameter [8:0] LEGUP_F_main_BB_if_then139_170 = 9'd170;
parameter [8:0] LEGUP_F_main_BB_if_then139_171 = 9'd171;
parameter [8:0] LEGUP_F_main_BB_if_then139_172 = 9'd172;
parameter [8:0] LEGUP_F_main_BB_if_then139_173 = 9'd173;
parameter [8:0] LEGUP_F_main_BB_if_then139_174 = 9'd174;
parameter [8:0] LEGUP_F_main_BB_if_then139_175 = 9'd175;
parameter [8:0] LEGUP_F_main_BB_if_then139_176 = 9'd176;
parameter [8:0] LEGUP_F_main_BB_if_else150_177 = 9'd177;
parameter [8:0] LEGUP_F_main_BB_if_else150_178 = 9'd178;
parameter [8:0] LEGUP_F_main_BB_if_else150_179 = 9'd179;
parameter [8:0] LEGUP_F_main_BB_if_else150_180 = 9'd180;
parameter [8:0] LEGUP_F_main_BB_if_else150_181 = 9'd181;
parameter [8:0] LEGUP_F_main_BB_if_else150_182 = 9'd182;
parameter [8:0] LEGUP_F_main_BB_if_else150_183 = 9'd183;
parameter [8:0] LEGUP_F_main_BB_if_else150_184 = 9'd184;
parameter [8:0] LEGUP_F_main_BB_if_else150_185 = 9'd185;
parameter [8:0] LEGUP_F_main_BB_if_else150_186 = 9'd186;
parameter [8:0] LEGUP_F_main_BB_if_else150_187 = 9'd187;
parameter [8:0] LEGUP_F_main_BB_if_else150_188 = 9'd188;
parameter [8:0] LEGUP_F_main_BB_if_else150_189 = 9'd189;
parameter [8:0] LEGUP_F_main_BB_if_else150_190 = 9'd190;
parameter [8:0] LEGUP_F_main_BB_if_else150_191 = 9'd191;
parameter [8:0] LEGUP_F_main_BB_if_else150_192 = 9'd192;
parameter [8:0] LEGUP_F_main_BB_if_else150_193 = 9'd193;
parameter [8:0] LEGUP_F_main_BB_if_else150_194 = 9'd194;
parameter [8:0] LEGUP_F_main_BB_if_else150_195 = 9'd195;
parameter [8:0] LEGUP_F_main_BB_if_else150_196 = 9'd196;
parameter [8:0] LEGUP_F_main_BB_if_else150_197 = 9'd197;
parameter [8:0] LEGUP_F_main_BB_if_else150_198 = 9'd198;
parameter [8:0] LEGUP_F_main_BB_if_else150_199 = 9'd199;
parameter [8:0] LEGUP_F_main_BB_if_else150_200 = 9'd200;
parameter [8:0] LEGUP_F_main_BB_if_else150_201 = 9'd201;
parameter [8:0] LEGUP_F_main_BB_if_else150_202 = 9'd202;
parameter [8:0] LEGUP_F_main_BB_if_else150_203 = 9'd203;
parameter [8:0] LEGUP_F_main_BB_if_else150_204 = 9'd204;
parameter [8:0] LEGUP_F_main_BB_if_else150_205 = 9'd205;
parameter [8:0] LEGUP_F_main_BB_if_else150_206 = 9'd206;
parameter [8:0] LEGUP_F_main_BB_if_else150_207 = 9'd207;
parameter [8:0] LEGUP_F_main_BB_if_else150_208 = 9'd208;
parameter [8:0] LEGUP_F_main_BB_if_else150_209 = 9'd209;
parameter [8:0] LEGUP_F_main_BB_if_then152_210 = 9'd210;
parameter [8:0] LEGUP_F_main_BB_if_then152_211 = 9'd211;
parameter [8:0] LEGUP_F_main_BB_if_then152_212 = 9'd212;
parameter [8:0] LEGUP_F_main_BB_if_then152_213 = 9'd213;
parameter [8:0] LEGUP_F_main_BB_if_then152_214 = 9'd214;
parameter [8:0] LEGUP_F_main_BB_if_then152_215 = 9'd215;
parameter [8:0] LEGUP_F_main_BB_if_then152_216 = 9'd216;
parameter [8:0] LEGUP_F_main_BB_if_then152_217 = 9'd217;
parameter [8:0] LEGUP_F_main_BB_if_then152_218 = 9'd218;
parameter [8:0] LEGUP_F_main_BB_if_then152_219 = 9'd219;
parameter [8:0] LEGUP_F_main_BB_if_then152_220 = 9'd220;
parameter [8:0] LEGUP_F_main_BB_if_then152_221 = 9'd221;
parameter [8:0] LEGUP_F_main_BB_if_then152_222 = 9'd222;
parameter [8:0] LEGUP_F_main_BB_if_then152_223 = 9'd223;
parameter [8:0] LEGUP_F_main_BB_if_then152_224 = 9'd224;
parameter [8:0] LEGUP_F_main_BB_if_then152_225 = 9'd225;
parameter [8:0] LEGUP_F_main_BB_if_then152_226 = 9'd226;
parameter [8:0] LEGUP_F_main_BB_if_then152_227 = 9'd227;
parameter [8:0] LEGUP_F_main_BB_if_then152_228 = 9'd228;
parameter [8:0] LEGUP_F_main_BB_if_then152_229 = 9'd229;
parameter [8:0] LEGUP_F_main_BB_if_then152_230 = 9'd230;
parameter [8:0] LEGUP_F_main_BB_if_then152_231 = 9'd231;
parameter [8:0] LEGUP_F_main_BB_if_then152_232 = 9'd232;
parameter [8:0] LEGUP_F_main_BB_if_then152_233 = 9'd233;
parameter [8:0] LEGUP_F_main_BB_if_then152_234 = 9'd234;
parameter [8:0] LEGUP_F_main_BB_if_then152_235 = 9'd235;
parameter [8:0] LEGUP_F_main_BB_if_then152_236 = 9'd236;
parameter [8:0] LEGUP_F_main_BB_if_then152_237 = 9'd237;
parameter [8:0] LEGUP_F_main_BB_if_then152_238 = 9'd238;
parameter [8:0] LEGUP_F_main_BB_if_then152_239 = 9'd239;
parameter [8:0] LEGUP_F_main_BB_if_then152_240 = 9'd240;
parameter [8:0] LEGUP_F_main_BB_if_then152_241 = 9'd241;
parameter [8:0] LEGUP_F_main_BB_if_then152_242 = 9'd242;
parameter [8:0] LEGUP_F_main_BB_if_else163_243 = 9'd243;
parameter [8:0] LEGUP_F_main_BB_if_else163_244 = 9'd244;
parameter [8:0] LEGUP_F_main_BB_if_else163_245 = 9'd245;
parameter [8:0] LEGUP_F_main_BB_if_else163_246 = 9'd246;
parameter [8:0] LEGUP_F_main_BB_if_else163_247 = 9'd247;
parameter [8:0] LEGUP_F_main_BB_if_else163_248 = 9'd248;
parameter [8:0] LEGUP_F_main_BB_if_else163_249 = 9'd249;
parameter [8:0] LEGUP_F_main_BB_if_else163_250 = 9'd250;
parameter [8:0] LEGUP_F_main_BB_if_else163_251 = 9'd251;
parameter [8:0] LEGUP_F_main_BB_if_else163_252 = 9'd252;
parameter [8:0] LEGUP_F_main_BB_if_else163_253 = 9'd253;
parameter [8:0] LEGUP_F_main_BB_if_else163_254 = 9'd254;
parameter [8:0] LEGUP_F_main_BB_if_else163_255 = 9'd255;
parameter [8:0] LEGUP_F_main_BB_if_else163_256 = 9'd256;
parameter [8:0] LEGUP_F_main_BB_if_else163_257 = 9'd257;
parameter [8:0] LEGUP_F_main_BB_if_else163_258 = 9'd258;
parameter [8:0] LEGUP_F_main_BB_if_else163_259 = 9'd259;
parameter [8:0] LEGUP_F_main_BB_if_else163_260 = 9'd260;
parameter [8:0] LEGUP_F_main_BB_if_else163_261 = 9'd261;
parameter [8:0] LEGUP_F_main_BB_if_else163_262 = 9'd262;
parameter [8:0] LEGUP_F_main_BB_if_else163_263 = 9'd263;
parameter [8:0] LEGUP_F_main_BB_if_else163_264 = 9'd264;
parameter [8:0] LEGUP_F_main_BB_if_else163_265 = 9'd265;
parameter [8:0] LEGUP_F_main_BB_if_else163_266 = 9'd266;
parameter [8:0] LEGUP_F_main_BB_if_else163_267 = 9'd267;
parameter [8:0] LEGUP_F_main_BB_if_else163_268 = 9'd268;
parameter [8:0] LEGUP_F_main_BB_if_else163_269 = 9'd269;
parameter [8:0] LEGUP_F_main_BB_if_else163_270 = 9'd270;
parameter [8:0] LEGUP_F_main_BB_if_else163_271 = 9'd271;
parameter [8:0] LEGUP_F_main_BB_if_else163_272 = 9'd272;
parameter [8:0] LEGUP_F_main_BB_if_else163_273 = 9'd273;
parameter [8:0] LEGUP_F_main_BB_if_else163_274 = 9'd274;
parameter [8:0] LEGUP_F_main_BB_if_else163_275 = 9'd275;
parameter [8:0] LEGUP_F_main_BB_if_else177_276 = 9'd276;
parameter [8:0] LEGUP_F_main_BB_if_then179_277 = 9'd277;
parameter [8:0] LEGUP_F_main_BB_if_then179_278 = 9'd278;
parameter [8:0] LEGUP_F_main_BB_if_then179_279 = 9'd279;
parameter [8:0] LEGUP_F_main_BB_NodeBlock16_280 = 9'd280;
parameter [8:0] LEGUP_F_main_BB_LeafBlock14_281 = 9'd281;
parameter [8:0] LEGUP_F_main_BB_LeafBlock12_282 = 9'd282;
parameter [8:0] LEGUP_F_main_BB_if_then186_283 = 9'd283;
parameter [8:0] LEGUP_F_main_BB_if_then186_284 = 9'd284;
parameter [8:0] LEGUP_F_main_BB_if_then186_285 = 9'd285;
parameter [8:0] LEGUP_F_main_BB_if_then193_286 = 9'd286;
parameter [8:0] LEGUP_F_main_BB_if_then193_287 = 9'd287;
parameter [8:0] LEGUP_F_main_BB_if_then193_288 = 9'd288;
parameter [8:0] LEGUP_F_main_BB_if_else198_289 = 9'd289;
parameter [8:0] LEGUP_F_main_BB_if_else198_290 = 9'd290;
parameter [8:0] LEGUP_F_main_BB_if_else198_291 = 9'd291;
parameter [8:0] LEGUP_F_main_BB_if_end206_292 = 9'd292;
parameter [8:0] LEGUP_F_main_BB_if_end206_293 = 9'd293;
parameter [8:0] LEGUP_F_main_BB_if_end206_294 = 9'd294;
parameter [8:0] LEGUP_F_main_BB_if_then218_295 = 9'd295;
parameter [8:0] LEGUP_F_main_BB_if_then218_296 = 9'd296;
parameter [8:0] LEGUP_F_main_BB_if_else223_297 = 9'd297;
parameter [8:0] LEGUP_F_main_BB_if_then225_298 = 9'd298;
parameter [8:0] LEGUP_F_main_BB_if_end228_299 = 9'd299;
parameter [8:0] LEGUP_F_main_BB_sw_bb233_300 = 9'd300;
parameter [8:0] LEGUP_F_main_BB_if_then235_301 = 9'd301;
parameter [8:0] LEGUP_F_main_BB_if_end237_302 = 9'd302;
parameter [8:0] LEGUP_F_main_BB_if_end237_303 = 9'd303;
parameter [8:0] LEGUP_F_main_BB_if_end237_304 = 9'd304;
parameter [8:0] LEGUP_F_main_BB_if_end237_305 = 9'd305;
parameter [8:0] LEGUP_F_main_BB_if_end237_306 = 9'd306;
parameter [8:0] LEGUP_F_main_BB_if_end237_307 = 9'd307;
parameter [8:0] LEGUP_F_main_BB_if_end237_308 = 9'd308;
parameter [8:0] LEGUP_F_main_BB_if_end237_309 = 9'd309;
parameter [8:0] LEGUP_F_main_BB_if_end237_310 = 9'd310;
parameter [8:0] LEGUP_F_main_BB_if_end237_311 = 9'd311;
parameter [8:0] LEGUP_F_main_BB_if_end237_312 = 9'd312;
parameter [8:0] LEGUP_F_main_BB_if_end237_313 = 9'd313;
parameter [8:0] LEGUP_F_main_BB_if_end237_314 = 9'd314;
parameter [8:0] LEGUP_F_main_BB_if_end237_315 = 9'd315;
parameter [8:0] LEGUP_F_main_BB_if_end237_316 = 9'd316;
parameter [8:0] LEGUP_F_main_BB_if_end237_317 = 9'd317;
parameter [8:0] LEGUP_F_main_BB_if_end237_318 = 9'd318;
parameter [8:0] LEGUP_F_main_BB_if_end237_319 = 9'd319;
parameter [8:0] LEGUP_F_main_BB_if_end237_320 = 9'd320;
parameter [8:0] LEGUP_F_main_BB_if_end237_321 = 9'd321;
parameter [8:0] LEGUP_F_main_BB_if_end237_322 = 9'd322;
parameter [8:0] LEGUP_F_main_BB_if_end237_323 = 9'd323;
parameter [8:0] LEGUP_F_main_BB_if_end237_324 = 9'd324;
parameter [8:0] LEGUP_F_main_BB_if_end237_325 = 9'd325;
parameter [8:0] LEGUP_F_main_BB_if_end237_326 = 9'd326;
parameter [8:0] LEGUP_F_main_BB_if_end237_327 = 9'd327;
parameter [8:0] LEGUP_F_main_BB_if_end237_328 = 9'd328;
parameter [8:0] LEGUP_F_main_BB_if_end237_329 = 9'd329;
parameter [8:0] LEGUP_F_main_BB_if_end237_330 = 9'd330;
parameter [8:0] LEGUP_F_main_BB_if_end237_331 = 9'd331;
parameter [8:0] LEGUP_F_main_BB_if_end237_332 = 9'd332;
parameter [8:0] LEGUP_F_main_BB_if_end237_333 = 9'd333;
parameter [8:0] LEGUP_F_main_BB_if_end237_334 = 9'd334;
parameter [8:0] LEGUP_F_main_BB_NodeBlock23_335 = 9'd335;
parameter [8:0] LEGUP_F_main_BB_LeafBlock21_336 = 9'd336;
parameter [8:0] LEGUP_F_main_BB_LeafBlock19_337 = 9'd337;
parameter [8:0] LEGUP_F_main_BB_if_then242_338 = 9'd338;
parameter [8:0] LEGUP_F_main_BB_if_then249_339 = 9'd339;
parameter [8:0] LEGUP_F_main_BB_if_then256_340 = 9'd340;
parameter [8:0] LEGUP_F_main_BB_if_else261_341 = 9'd341;
parameter [8:0] LEGUP_F_main_BB_if_end268_342 = 9'd342;
parameter [8:0] LEGUP_F_main_BB_if_end268_343 = 9'd343;
parameter [8:0] LEGUP_F_main_BB_if_end268_344 = 9'd344;
parameter [8:0] LEGUP_F_main_BB_if_end268_345 = 9'd345;
parameter [8:0] LEGUP_F_main_BB_if_end268_346 = 9'd346;
parameter [8:0] LEGUP_F_main_BB_if_end268_347 = 9'd347;
parameter [8:0] LEGUP_F_main_BB_if_then281_348 = 9'd348;
parameter [8:0] LEGUP_F_main_BB_if_then281_349 = 9'd349;
parameter [8:0] LEGUP_F_main_BB_if_else287_350 = 9'd350;
parameter [8:0] LEGUP_F_main_BB_if_then289_351 = 9'd351;
parameter [8:0] LEGUP_F_main_BB_sw_bb298_352 = 9'd352;
parameter [8:0] LEGUP_F_main_BB_if_end301_353 = 9'd353;
parameter [8:0] LEGUP_F_main_BB_if_end301_354 = 9'd354;
parameter [8:0] LEGUP_F_main_BB_if_end301_355 = 9'd355;
parameter [8:0] LEGUP_F_main_BB_if_end301_356 = 9'd356;
parameter [8:0] LEGUP_F_main_BB_if_end301_357 = 9'd357;
parameter [8:0] LEGUP_F_main_BB_if_end301_358 = 9'd358;
parameter [8:0] LEGUP_F_main_BB_if_end301_359 = 9'd359;
parameter [8:0] LEGUP_F_main_BB_if_end301_360 = 9'd360;
parameter [8:0] LEGUP_F_main_BB_if_end301_361 = 9'd361;
parameter [8:0] LEGUP_F_main_BB_if_end301_362 = 9'd362;
parameter [8:0] LEGUP_F_main_BB_if_end301_363 = 9'd363;
parameter [8:0] LEGUP_F_main_BB_if_end301_364 = 9'd364;
parameter [8:0] LEGUP_F_main_BB_if_end301_365 = 9'd365;
parameter [8:0] LEGUP_F_main_BB_if_end301_366 = 9'd366;
parameter [8:0] LEGUP_F_main_BB_if_end301_367 = 9'd367;
parameter [8:0] LEGUP_F_main_BB_if_end301_368 = 9'd368;
parameter [8:0] LEGUP_F_main_BB_if_end301_369 = 9'd369;
parameter [8:0] LEGUP_F_main_BB_if_end301_370 = 9'd370;
parameter [8:0] LEGUP_F_main_BB_if_end301_371 = 9'd371;
parameter [8:0] LEGUP_F_main_BB_if_end301_372 = 9'd372;
parameter [8:0] LEGUP_F_main_BB_if_end301_373 = 9'd373;
parameter [8:0] LEGUP_F_main_BB_if_end301_374 = 9'd374;
parameter [8:0] LEGUP_F_main_BB_if_end301_375 = 9'd375;
parameter [8:0] LEGUP_F_main_BB_if_end301_376 = 9'd376;
parameter [8:0] LEGUP_F_main_BB_if_end301_377 = 9'd377;
parameter [8:0] LEGUP_F_main_BB_if_end301_378 = 9'd378;
parameter [8:0] LEGUP_F_main_BB_if_end301_379 = 9'd379;
parameter [8:0] LEGUP_F_main_BB_if_end301_380 = 9'd380;
parameter [8:0] LEGUP_F_main_BB_if_end301_381 = 9'd381;
parameter [8:0] LEGUP_F_main_BB_if_end301_382 = 9'd382;
parameter [8:0] LEGUP_F_main_BB_if_end301_383 = 9'd383;
parameter [8:0] LEGUP_F_main_BB_if_end301_384 = 9'd384;
parameter [8:0] LEGUP_F_main_BB_if_end301_385 = 9'd385;
parameter [8:0] LEGUP_F_main_BB_if_end301_386 = 9'd386;
parameter [8:0] LEGUP_F_main_BB_if_end301_387 = 9'd387;
parameter [8:0] LEGUP_F_main_BB_if_end301_388 = 9'd388;
parameter [8:0] LEGUP_F_main_BB_if_end301_389 = 9'd389;
parameter [8:0] LEGUP_F_main_BB_for_cond331_preheader_390 = 9'd390;
parameter [8:0] LEGUP_F_main_BB_for_cond331_preheader_391 = 9'd391;
parameter [8:0] LEGUP_F_main_BB_for_cond331_preheader_392 = 9'd392;
parameter [8:0] LEGUP_F_main_BB_for_cond331_preheader_393 = 9'd393;
parameter [8:0] LEGUP_F_main_BB_for_cond331_preheader_394 = 9'd394;
parameter [8:0] LEGUP_F_main_BB_for_end343_395 = 9'd395;
parameter [8:0] LEGUP_F_main_BB_cleanup_396 = 9'd396;

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
output  memory_controller_1_write_enable_a;
output [63:0] memory_controller_1_in_a;
output reg  memory_controller_1_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_a;
output reg [1:0] memory_controller_1_size_a;
input [63:0] memory_controller_1_out_a;
output  memory_controller_1_write_enable_b;
output [63:0] memory_controller_1_in_b;
output  memory_controller_1_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_b;
output [1:0] memory_controller_1_size_b;
input [63:0] memory_controller_1_out_b;
output  memory_controller_0_write_enable_a;
output [63:0] memory_controller_0_in_a;
output reg  memory_controller_0_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_a;
output reg [1:0] memory_controller_0_size_a;
input [63:0] memory_controller_0_out_a;
output  memory_controller_0_write_enable_b;
output [63:0] memory_controller_0_in_b;
output  memory_controller_0_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_b;
output [1:0] memory_controller_0_size_b;
input [63:0] memory_controller_0_out_b;
reg [8:0] cur_state/* synthesis syn_encoding="onehot" */;
reg [8:0] next_state;
wire  fsm_stall;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1526_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1526_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla525_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla525_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx68_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx69;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx69_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx70;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx70_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx71;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx71_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx72;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx72_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx74;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx74_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx75;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx75_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx76;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx76_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx77;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx77_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1551;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1551_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2552;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2552_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3553;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3553_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4554;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4554_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5555;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5555_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_1_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_2_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_3_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_4_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_5_5_reg;
reg [31:0] main_NodeBlock9_state_0;
reg [31:0] main_NodeBlock9_state_0_reg;
reg [31:0] main_NodeBlock9_i_0;
reg [31:0] main_NodeBlock9_i_0_reg;
reg [31:0] main_NodeBlock9_j_0;
reg [31:0] main_NodeBlock9_j_0_reg;
reg [31:0] main_NodeBlock9_a_0;
reg [31:0] main_NodeBlock9_a_0_reg;
reg [31:0] main_NodeBlock9_b_0;
reg [31:0] main_NodeBlock9_b_0_reg;
reg [31:0] main_NodeBlock9_pos_a_X_0;
reg [31:0] main_NodeBlock9_pos_a_X_0_reg;
reg [31:0] main_NodeBlock9_pos_a_Y_0;
reg [31:0] main_NodeBlock9_pos_a_Y_0_reg;
reg [31:0] main_NodeBlock9_pos_b_X_0;
reg [31:0] main_NodeBlock9_pos_b_X_0_reg;
reg [31:0] main_NodeBlock9_pos_b_Y_0;
reg [31:0] main_NodeBlock9_pos_b_Y_0_reg;
reg [31:0] main_NodeBlock9_sum_mesh_0;
reg [31:0] main_NodeBlock9_sum_mesh_0_reg;
reg [31:0] main_NodeBlock9_sum_1hop_0;
reg [31:0] main_NodeBlock9_sum_1hop_0_reg;
reg [31:0] main_NodeBlock9_seed_0;
reg [31:0] main_NodeBlock9_seed_0_reg;
reg  main_NodeBlock9_Pivot10;
reg  main_NodeBlock7_Pivot8;
reg  main_NodeBlock5_Pivot6;
reg  main_LeafBlock3_SwitchLeaf4;
reg [31:0] main_NodeBlock9_backedge_state_0_be;
reg [31:0] main_NodeBlock9_backedge_state_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_i_0_be;
reg [31:0] main_NodeBlock9_backedge_i_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_j_0_be;
reg [31:0] main_NodeBlock9_backedge_j_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_a_0_be;
reg [31:0] main_NodeBlock9_backedge_a_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_b_0_be;
reg [31:0] main_NodeBlock9_backedge_b_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_seed_0_be;
reg [31:0] main_NodeBlock9_backedge_seed_0_be_reg;
reg  main_NodeBlock1_Pivot2;
reg  main_NodeBlock_Pivot;
reg  main_LeafBlock_SwitchLeaf;
reg [31:0] main_for_body89_i_2544;
reg [31:0] main_for_body89_i_2544_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body89_arrayidx90;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body89_arrayidx91;
reg [31:0] main_for_body89_0;
reg [31:0] main_for_body89_0_reg;
reg  main_for_body89_exitcond;
reg  main_for_body89_exitcond_reg;
reg [31:0] main_for_end94_1;
reg [31:0] main_for_end94_1_reg;
reg [31:0] main_for_end94_sub_i;
reg [31:0] main_for_end94_xor2_i;
reg [3:0] main_for_end94_rem;
reg [30:0] main_for_end94_bit_select17;
reg [29:0] main_for_end94_bit_select15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end94_arrayidx96;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end94_arrayidx96_reg;
reg [31:0] main_for_end94_xor2_i16;
reg [31:0] main_for_end94_xor2_i16_reg;
reg [3:0] main_for_end94_rem98;
reg [3:0] main_for_end94_rem98_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end94_arrayidx99;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end94_arrayidx99_reg;
reg [31:0] main_for_end94_add100;
reg [31:0] main_for_end94_add100_reg;
reg [31:0] main_for_end94_bit_concat18;
reg [31:0] main_for_end94_bit_concat16;
reg [31:0] main_for_end94_sr_add7;
reg [31:0] main_for_end94_sr_add7_reg;
reg [31:0] main_for_end94_arrayidx103_sum;
reg [31:0] main_for_end94_arrayidx103_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end94_arrayidx104;
reg  main_sw_bb105_cmp106;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx107;
reg [31:0] main_if_end_2;
reg [31:0] main_if_end_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx108;
reg [31:0] main_if_end_3;
reg [31:0] main_if_end_3_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx109;
reg [31:0] main_if_end_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx110;
reg [31:0] main_if_end_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx111;
reg [31:0] main_if_end_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx112;
reg [31:0] main_if_end_7;
reg  main_if_end_cmp113;
reg [1:0] main_if_end_1;
reg [1:0] main_if_end_1_reg;
reg  main_sw_bb116_cmp117;
reg [31:0] main_if_end119_sub_i14;
reg [31:0] main_if_end119_xor2_i15;
reg [3:0] main_if_end119_rem121;
reg [3:0] main_if_end119_rem121_reg;
reg [31:0] main_if_end119_add122;
reg [31:0] main_if_end119_add122_reg;
reg  main_if_end119_cmp123;
reg  main_if_end119_cmp123_reg;
reg  main_if_end119_cmp125;
reg  main_if_end119_cmp125_reg;
reg [31:0] main_if_then126_xor2_i13;
reg [3:0] main_if_then126_rem128;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then126_arrayidx129;
reg [31:0] main_if_then126_8;
reg [31:0] main_if_then126_8_reg;
reg [31:0] main_if_then126_add130;
reg [31:0] main_if_then126_add130_reg;
reg [31:0] main_if_then126_xor2_i12;
reg [31:0] main_if_then126_xor2_i12_reg;
reg [3:0] main_if_then126_rem133;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then126_arrayidx134;
reg [31:0] main_if_then126_9;
reg [31:0] main_if_then126_9_reg;
reg [31:0] main_if_then126_add135;
reg [31:0] main_if_then126_add136;
reg [31:0] main_if_then126_add136_reg;
reg  main_if_else137_cmp138;
reg [31:0] main_if_then139_xor2_i10;
reg [3:0] main_if_then139_rem141;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then139_arrayidx142;
reg [31:0] main_if_then139_10;
reg [31:0] main_if_then139_10_reg;
reg [31:0] main_if_then139_add143;
reg [31:0] main_if_then139_add143_reg;
reg [31:0] main_if_then139_xor2_i9;
reg [31:0] main_if_then139_xor2_i9_reg;
reg [3:0] main_if_then139_rem146;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then139_arrayidx147;
reg [31:0] main_if_then139_11;
reg [31:0] main_if_then139_11_reg;
reg [31:0] main_if_then139_add148;
reg [31:0] main_if_then139_add149;
reg [31:0] main_if_then139_add149_reg;
reg  main_if_else150_cmp151;
reg  main_if_else150_cmp151_reg;
reg [31:0] main_if_else150_xor2_i7;
reg [3:0] main_if_else150_rem154;
reg [3:0] main_if_else150_rem154_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then152_arrayidx155;
reg [31:0] main_if_then152_12;
reg [31:0] main_if_then152_add156;
reg [31:0] main_if_then152_add156_reg;
reg [31:0] main_if_then152_xor2_i6;
reg [3:0] main_if_then152_rem159;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then152_arrayidx160;
reg [31:0] main_if_then152_13;
reg [31:0] main_if_then152_13_reg;
reg [31:0] main_if_then152_add161;
reg [31:0] main_if_then152_add162;
reg [31:0] main_if_then152_add162_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else163_arrayidx166;
reg [31:0] main_if_else163_14;
reg [31:0] main_if_else163_add167;
reg [31:0] main_if_else163_add167_reg;
reg [31:0] main_if_else163_xor2_i4;
reg [3:0] main_if_else163_rem170;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else163_arrayidx171;
reg [31:0] main_if_else163_15;
reg [31:0] main_if_else163_15_reg;
reg [31:0] main_if_else163_add172;
reg [31:0] main_if_else163_add173;
reg [31:0] main_if_else163_add173_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then179_arrayidx180;
reg [31:0] main_if_then179_16;
reg [31:0] main_if_then179_add181;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then179_arrayidx182;
reg [31:0] main_if_then179_17;
reg [31:0] main_if_then179_add183;
reg  main_NodeBlock16_Pivot17;
reg  main_LeafBlock14_SwitchLeaf15;
reg  main_LeafBlock12_SwitchLeaf13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then186_arrayidx187;
reg [31:0] main_if_then186_18;
reg [31:0] main_if_then186_add188;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then186_arrayidx189;
reg [31:0] main_if_then186_19;
reg [31:0] main_if_then186_add190;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then193_arrayidx194;
reg [31:0] main_if_then193_20;
reg [31:0] main_if_then193_add195;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then193_arrayidx196;
reg [31:0] main_if_then193_21;
reg [31:0] main_if_then193_add197;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else198_arrayidx199;
reg [31:0] main_if_else198_22;
reg [31:0] main_if_else198_add200;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else198_arrayidx201;
reg [31:0] main_if_else198_23;
reg [31:0] main_if_else198_add202;
reg [31:0] main_if_end206_xi_0;
reg [31:0] main_if_end206_xi_0_reg;
reg [31:0] main_if_end206_xj_0;
reg [31:0] main_if_end206_xj_0_reg;
reg [31:0] main_if_end206_seed_1;
reg [31:0] main_if_end206_seed_1_reg;
reg [30:0] main_if_end206_bit_select13;
reg [29:0] main_if_end206_bit_select11;
reg [31:0] main_if_end206_inc207;
reg [31:0] main_if_end206_inc207_reg;
reg [31:0] main_if_end206_bit_concat14;
reg [31:0] main_if_end206_bit_concat12;
reg [31:0] main_if_end206_sr_add;
reg [31:0] main_if_end206_arrayidx208_sum;
reg [31:0] main_if_end206_arrayidx208_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end206_arrayidx209;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end206_arrayidx209_reg;
reg [31:0] main_if_end206_24;
reg  main_if_end206_cmp210;
reg  main_if_end206_25;
reg  main_if_end206_25_reg;
reg  main_if_end206_or_cond;
reg  main_if_end206_26;
reg  main_if_end206_26_reg;
reg  main_if_end206_or_cond531;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then218_arrayidx221;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then218_arrayidx222;
reg  main_if_else223_cmp224;
reg [31:0] main_if_end228_pos_a_X_1;
reg [31:0] main_if_end228_pos_a_X_1_reg;
reg [31:0] main_if_end228_pos_a_Y_1;
reg [31:0] main_if_end228_pos_a_Y_1_reg;
reg  main_if_end228_cmp229;
reg [1:0] main_if_end228_532;
reg [31:0] main_if_end228_inc207_1;
reg  main_sw_bb233_cmp234;
reg [31:0] main_if_then235_inc236;
reg [31:0] main_if_end237_sub_i1;
reg [31:0] main_if_end237_xor2_i2;
reg [3:0] main_if_end237_rem239;
reg [3:0] main_if_end237_rem239_reg;
reg [31:0] main_if_end237_add240;
reg [31:0] main_if_end237_add240_reg;
reg  main_if_end237_Pivot26;
reg  main_NodeBlock23_Pivot24;
reg  main_LeafBlock21_SwitchLeaf22;
reg  main_LeafBlock19_SwitchLeaf20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then242_arrayidx243;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then242_arrayidx245;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then249_arrayidx250;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then249_arrayidx252;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then256_arrayidx257;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then256_arrayidx259;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else261_arrayidx262;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else261_arrayidx264;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end268_pn_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end268_pn_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end268_pn530_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end268_pn530_in_reg;
reg [31:0] main_if_end268_pn530;
reg [31:0] main_if_end268_pn;
reg [31:0] main_if_end268_xj_1;
reg [31:0] main_if_end268_xj_1_reg;
reg [31:0] main_if_end268_xi_1;
reg [31:0] main_if_end268_xi_1_reg;
reg [30:0] main_if_end268_bit_select9;
reg [29:0] main_if_end268_bit_select7;
reg [31:0] main_if_end268_bit_concat10;
reg [31:0] main_if_end268_bit_concat8;
reg [31:0] main_if_end268_sr_add12;
reg [31:0] main_if_end268_sr_add12_reg;
reg [31:0] main_if_end268_arrayidx270_sum;
reg [31:0] main_if_end268_arrayidx270_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end268_arrayidx271;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end268_arrayidx271_reg;
reg [31:0] main_if_end268_27;
reg  main_if_end268_cmp272;
reg  main_if_end268_28;
reg  main_if_end268_28_reg;
reg  main_if_end268_or_cond533;
reg  main_if_end268_29;
reg  main_if_end268_29_reg;
reg  main_if_end268_or_cond534;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then281_arrayidx284;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then281_arrayidx285;
reg [31:0] main_if_then281_inc286;
reg [31:0] main_if_then281_inc286_reg;
reg [31:0] main_if_else287_inc269;
reg  main_if_else287_cmp288;
reg  main_sw_bb298_cmp299;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end301_arrayidx302;
reg [31:0] main_if_end301_30;
reg [31:0] main_if_end301_30_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end301_arrayidx303;
reg [31:0] main_if_end301_31;
reg [31:0] main_if_end301_31_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end301_arrayidx304;
reg [31:0] main_if_end301_32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end301_arrayidx305;
reg [31:0] main_if_end301_33;
reg [31:0] main_if_end301_sub;
reg [31:0] main_if_end301_sub_reg;
reg  main_if_end301_bit_select6;
reg  main_if_end301_bit_select6_reg;
reg [31:0] main_if_end301_mul;
reg [31:0] main_if_end301_mul_reg;
reg [31:0] main_if_end301_mul_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end301_arrayidx309;
reg [31:0] main_if_end301_34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end301_arrayidx310;
reg [31:0] main_if_end301_35;
reg [31:0] main_if_end301_sub311;
reg [31:0] main_if_end301_sub311_reg;
reg  main_if_end301_bit_select5;
reg  main_if_end301_bit_select5_reg;
reg [31:0] main_if_end301_mul314;
reg [31:0] main_if_end301_mul314_reg;
reg [31:0] main_if_end301_diff_pos_y_0;
reg [31:0] main_if_end301_diff_pos_y_0_reg;
reg [31:0] main_if_end301_add316;
reg [31:0] main_if_end301_add316_reg;
reg [31:0] main_if_end301_newEarly_add318;
reg [31:0] main_if_end301_newEarly_add318_reg;
reg [31:0] main_if_end301_newCurOp_add318;
reg [31:0] main_if_end301_newCurOp_add318_reg;
reg [30:0] main_if_end301_div;
reg [3:0] main_if_end301_rem319;
reg [3:0] main_if_end301_rem319_reg;
reg [30:0] main_if_end301_div321;
reg [3:0] main_if_end301_rem322;
reg [31:0] main_if_end301_add323;
reg [31:0] main_if_end301_add323_reg;
reg [31:0] main_if_end301_newEarly_add324;
reg [31:0] main_if_end301_newEarly_add324_reg;
reg [31:0] main_if_end301_newEarly_sub325;
reg [31:0] main_if_end301_newEarly_add326;
reg [31:0] main_if_end301_newCurOp_add326;
reg [31:0] main_if_end301_inc327;
reg [31:0] main_if_end301_inc327_reg;
reg [2:0] main_for_cond331_preheader_i_3541;
reg [2:0] main_for_cond331_preheader_i_3541_reg;
reg [30:0] main_for_cond331_preheader_bit_select3;
reg [29:0] main_for_cond331_preheader_bit_select1;
reg [31:0] main_for_cond331_preheader_bit_concat4;
reg [31:0] main_for_cond331_preheader_bit_concat2;
reg [31:0] main_for_cond331_preheader_sr_add15;
reg [31:0] main_for_cond331_preheader_sr_add15_reg;
reg [30:0] main_for_cond331_preheader_bit_select;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335;
reg [31:0] main_for_cond331_preheader_bit_concat;
reg [31:0] main_for_cond331_preheader_bit_concat_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_1;
reg [31:0] main_for_cond331_preheader_36;
reg [31:0] main_for_cond331_preheader_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_2_reg;
reg [31:0] main_for_cond331_preheader_37;
reg [31:0] main_for_cond331_preheader_37_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_3_reg;
reg [31:0] main_for_cond331_preheader_38;
reg [31:0] main_for_cond331_preheader_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_4_reg;
reg [31:0] main_for_cond331_preheader_39;
reg [31:0] main_for_cond331_preheader_39_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond331_preheader_arrayidx335_5_reg;
reg [31:0] main_for_cond331_preheader_40;
reg [31:0] main_for_cond331_preheader_41;
reg [31:0] main_for_cond331_preheader_42;
reg [31:0] main_for_cond331_preheader_43;
reg [31:0] main_for_cond331_preheader_44;
reg [31:0] main_for_cond331_preheader_45;
reg [3:0] main_for_cond331_preheader_46;
reg [3:0] main_for_cond331_preheader_46_reg;
reg  main_for_cond331_preheader_exitcond5;
reg  main_for_cond331_preheader_exitcond5_reg;
reg  main_cleanup_retval_0;
reg  main_cleanup_retval_0_reg;
reg [5:0] main_entry_vla525_address_a;
reg  main_entry_vla525_write_enable_a;
reg [31:0] main_entry_vla525_in_a;
wire [31:0] main_entry_vla525_out_a;
reg [5:0] main_entry_vla525_address_b;
reg  main_entry_vla525_write_enable_b;
reg [31:0] main_entry_vla525_in_b;
wire [31:0] main_entry_vla525_out_b;
reg [5:0] main_entry_vla1526_address_a;
reg  main_entry_vla1526_write_enable_a;
reg [31:0] main_entry_vla1526_in_a;
wire [31:0] main_entry_vla1526_out_a;
reg [5:0] main_entry_vla1526_address_b;
reg  main_entry_vla1526_write_enable_b;
reg [31:0] main_entry_vla1526_in_b;
wire [31:0] main_entry_vla1526_out_b;
reg [4:0] main_entry_vla2527_address_a;
reg  main_entry_vla2527_write_enable_a;
reg [31:0] main_entry_vla2527_in_a;
wire [31:0] main_entry_vla2527_out_a;
reg [4:0] main_entry_vla2527_address_b;
reg  main_entry_vla2527_write_enable_b;
reg [31:0] main_entry_vla2527_in_b;
wire [31:0] main_entry_vla2527_out_b;
reg [4:0] main_entry_vla3528_address_a;
reg  main_entry_vla3528_write_enable_a;
reg [31:0] main_entry_vla3528_in_a;
wire [31:0] main_entry_vla3528_out_a;
reg [4:0] main_entry_vla3528_address_b;
reg  main_entry_vla3528_write_enable_b;
reg [31:0] main_entry_vla3528_in_b;
wire [31:0] main_entry_vla3528_out_b;
reg [5:0] main_entry_vla4529_address_a;
reg  main_entry_vla4529_write_enable_a;
reg [31:0] main_entry_vla4529_in_a;
wire [31:0] main_entry_vla4529_out_a;
reg [5:0] main_entry_vla4529_address_b;
reg  main_entry_vla4529_write_enable_b;
reg [31:0] main_entry_vla4529_in_b;
wire [31:0] main_entry_vla4529_out_b;
reg [31:0] main_signed_divide_32_0_op0;
reg [3:0] main_signed_divide_32_0_op1;
reg  main_signed_divide_32_0_inst_clock;
reg  main_signed_divide_32_0_inst_aclr;
reg  main_signed_divide_32_0_inst_clken;
reg [31:0] main_signed_divide_32_0_inst_numer;
reg [3:0] main_signed_divide_32_0_inst_denom;
wire [31:0] main_signed_divide_32_0_inst_quotient;
wire [3:0] main_signed_divide_32_0_inst_remain;
reg [31:0] divide_main_if_end301_div_temp_out;
reg  divide_main_if_end301_div_en;
reg [30:0] divide_main_if_end301_div_out;
reg [30:0] main_signed_divide_32_0;
reg [31:0] main_signed_modulus_32_0_op0;
reg [4:0] main_signed_modulus_32_0_op1;
reg  main_signed_modulus_32_0_inst_clock;
reg  main_signed_modulus_32_0_inst_aclr;
reg  main_signed_modulus_32_0_inst_clken;
reg [31:0] main_signed_modulus_32_0_inst_numer;
reg [4:0] main_signed_modulus_32_0_inst_denom;
wire [31:0] main_signed_modulus_32_0_inst_quotient;
wire [4:0] main_signed_modulus_32_0_inst_remain;
reg [4:0] divide_main_if_end301_rem319_temp_out;
reg  divide_main_if_end301_rem319_en;
reg [3:0] divide_main_if_end301_rem319_out;
reg [3:0] main_signed_modulus_32_0;
wire [3:0] main_NodeBlock9_Pivot10_op1_temp;
wire [4:0] main_NodeBlock7_Pivot8_op1_temp;
wire [4:0] main_NodeBlock5_Pivot6_op1_temp;
wire [2:0] main_NodeBlock1_Pivot2_op1_temp;
wire [3:0] main_NodeBlock_Pivot_op1_temp;
reg [30:0] main_for_end94_rem_width_extended;
wire  main_for_end94_bit_concat18_bit_select_operand_2;
wire [1:0] main_for_end94_bit_concat16_bit_select_operand_2;
wire [3:0] main_NodeBlock16_Pivot17_op1_temp;
wire  main_if_end206_bit_concat14_bit_select_operand_2;
wire [1:0] main_if_end206_bit_concat12_bit_select_operand_2;
wire [7:0] main_if_else223_cmp224_op1_temp;
wire [2:0] main_if_end237_Pivot26_op1_temp;
wire [3:0] main_NodeBlock23_Pivot24_op1_temp;
wire  main_if_end268_bit_concat10_bit_select_operand_2;
wire [1:0] main_if_end268_bit_concat8_bit_select_operand_2;
wire [7:0] main_if_else287_cmp288_op1_temp;
reg [30:0] main_for_cond331_preheader_i_3541_reg_width_extended;
wire  main_for_cond331_preheader_bit_concat4_bit_select_operand_2;
wire [1:0] main_for_cond331_preheader_bit_concat2_bit_select_operand_2;
wire  main_for_cond331_preheader_bit_concat_bit_select_operand_2;

/*   %div = sdiv i32 %mul.sub, 2, !dbg !347, !MSB !165, !LSB !67, !extendFrom !185*/
lpm_divide main_signed_divide_32_0_inst (
	.clock (main_signed_divide_32_0_inst_clock),
	.aclr (main_signed_divide_32_0_inst_aclr),
	.clken (main_signed_divide_32_0_inst_clken),
	.numer (main_signed_divide_32_0_inst_numer),
	.denom (main_signed_divide_32_0_inst_denom),
	.quotient (main_signed_divide_32_0_inst_quotient),
	.remain (main_signed_divide_32_0_inst_remain)
);

defparam
	main_signed_divide_32_0_inst.lpm_widthn = 32,
	main_signed_divide_32_0_inst.lpm_widthd = 4,
	main_signed_divide_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_divide_32_0_inst.lpm_pipeline = 32;

/*   %rem319 = srem i32 %mul.sub, 2, !dbg !347, !MSB !348, !LSB !67, !extendFrom !348*/
lpm_divide main_signed_modulus_32_0_inst (
	.clock (main_signed_modulus_32_0_inst_clock),
	.aclr (main_signed_modulus_32_0_inst_aclr),
	.clken (main_signed_modulus_32_0_inst_clken),
	.numer (main_signed_modulus_32_0_inst_numer),
	.denom (main_signed_modulus_32_0_inst_denom),
	.quotient (main_signed_modulus_32_0_inst_quotient),
	.remain (main_signed_modulus_32_0_inst_remain)
);

defparam
	main_signed_modulus_32_0_inst.lpm_widthn = 32,
	main_signed_modulus_32_0_inst.lpm_widthd = 5,
	main_signed_modulus_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_modulus_32_0_inst.lpm_pipeline = 32;



//   %vla525 = alloca [37 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla525 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla525_address_a ),
	.wren_a( main_entry_vla525_write_enable_a ),
	.data_a( main_entry_vla525_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla525_out_a ),
	.address_b( main_entry_vla525_address_b ),
	.wren_b( main_entry_vla525_write_enable_b ),
	.data_b( main_entry_vla525_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla525_out_b )
);
defparam main_entry_vla525.width_a = 32;
defparam main_entry_vla525.widthad_a = 6;
defparam main_entry_vla525.width_be_a = 4;
defparam main_entry_vla525.numwords_a = 37;
defparam main_entry_vla525.width_b = 32;
defparam main_entry_vla525.widthad_b = 6;
defparam main_entry_vla525.width_be_b = 4;
defparam main_entry_vla525.numwords_b = 37;
defparam main_entry_vla525.latency = 1;


//   %vla1526 = alloca [37 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla1526 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla1526_address_a ),
	.wren_a( main_entry_vla1526_write_enable_a ),
	.data_a( main_entry_vla1526_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla1526_out_a ),
	.address_b( main_entry_vla1526_address_b ),
	.wren_b( main_entry_vla1526_write_enable_b ),
	.data_b( main_entry_vla1526_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla1526_out_b )
);
defparam main_entry_vla1526.width_a = 32;
defparam main_entry_vla1526.widthad_a = 6;
defparam main_entry_vla1526.width_be_a = 4;
defparam main_entry_vla1526.numwords_a = 37;
defparam main_entry_vla1526.width_b = 32;
defparam main_entry_vla1526.widthad_b = 6;
defparam main_entry_vla1526.width_be_b = 4;
defparam main_entry_vla1526.numwords_b = 37;
defparam main_entry_vla1526.latency = 1;


//   %vla2527 = alloca [32 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla2527 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla2527_address_a ),
	.wren_a( main_entry_vla2527_write_enable_a ),
	.data_a( main_entry_vla2527_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla2527_out_a ),
	.address_b( main_entry_vla2527_address_b ),
	.wren_b( main_entry_vla2527_write_enable_b ),
	.data_b( main_entry_vla2527_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla2527_out_b )
);
defparam main_entry_vla2527.width_a = 32;
defparam main_entry_vla2527.widthad_a = 5;
defparam main_entry_vla2527.width_be_a = 4;
defparam main_entry_vla2527.numwords_a = 32;
defparam main_entry_vla2527.width_b = 32;
defparam main_entry_vla2527.widthad_b = 5;
defparam main_entry_vla2527.width_be_b = 4;
defparam main_entry_vla2527.numwords_b = 32;
defparam main_entry_vla2527.latency = 1;


//   %vla3528 = alloca [32 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla3528 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla3528_address_a ),
	.wren_a( main_entry_vla3528_write_enable_a ),
	.data_a( main_entry_vla3528_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla3528_out_a ),
	.address_b( main_entry_vla3528_address_b ),
	.wren_b( main_entry_vla3528_write_enable_b ),
	.data_b( main_entry_vla3528_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla3528_out_b )
);
defparam main_entry_vla3528.width_a = 32;
defparam main_entry_vla3528.widthad_a = 5;
defparam main_entry_vla3528.width_be_a = 4;
defparam main_entry_vla3528.numwords_a = 32;
defparam main_entry_vla3528.width_b = 32;
defparam main_entry_vla3528.widthad_b = 5;
defparam main_entry_vla3528.width_be_b = 4;
defparam main_entry_vla3528.numwords_b = 32;
defparam main_entry_vla3528.latency = 1;


//   %vla4529 = alloca [36 x i32], align 4, !dbg !69, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla4529 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla4529_address_a ),
	.wren_a( main_entry_vla4529_write_enable_a ),
	.data_a( main_entry_vla4529_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla4529_out_a ),
	.address_b( main_entry_vla4529_address_b ),
	.wren_b( main_entry_vla4529_write_enable_b ),
	.data_b( main_entry_vla4529_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla4529_out_b )
);
defparam main_entry_vla4529.width_a = 32;
defparam main_entry_vla4529.widthad_a = 6;
defparam main_entry_vla4529.width_be_a = 4;
defparam main_entry_vla4529.numwords_a = 36;
defparam main_entry_vla4529.width_b = 32;
defparam main_entry_vla4529.widthad_b = 6;
defparam main_entry_vla4529.width_be_b = 4;
defparam main_entry_vla4529.numwords_b = 36;
defparam main_entry_vla4529.latency = 1;

/* Unsynthesizable Statements */
/* synthesis translate_off */
always @(posedge clk)
	if (!fsm_stall) begin
	if ((cur_state == LEGUP_F_main_BB_if_then225_298)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_if_then289_351)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_392)) begin
		$write("%3d ", $signed(main_for_cond331_preheader_40));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond331_preheader_40) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_392)) begin
		$write("%3d ", $signed(main_for_cond331_preheader_41));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond331_preheader_41) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_393)) begin
		$write("%3d ", $signed(main_for_cond331_preheader_42));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond331_preheader_42) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_393)) begin
		$write("%3d ", $signed(main_for_cond331_preheader_43));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond331_preheader_43) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_394)) begin
		$write("%3d ", $signed(main_for_cond331_preheader_44));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond331_preheader_44) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_394)) begin
		$write("%3d ", $signed(main_for_cond331_preheader_45));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond331_preheader_45) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_394)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_end343_395)) begin
		$write("\nEvaluation = %d\nEvaluation 1-hop = %d\n", $signed(main_NodeBlock9_sum_mesh_0_reg), $signed(main_NodeBlock9_sum_1hop_0_reg));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_mesh_0_reg) === 1'bX) finish <= 0;
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_1hop_0_reg) === 1'bX) finish <= 0;
	end
end
/* synthesis translate_on */
always @(posedge clk) begin
if (reset == 1'b1)
	cur_state <= LEGUP_0;
else if (!fsm_stall)
	cur_state <= next_state;
end

always @(*)
begin
next_state = cur_state;
case(cur_state)  /* synthesis parallel_case */
LEGUP_0:
	if ((fsm_stall == 1'd0) && (start == 1'd1))
		next_state = LEGUP_F_main_BB_entry_1;
LEGUP_F_main_BB_LeafBlock12_282:
	if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then186_283;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else198_289;
LEGUP_F_main_BB_LeafBlock14_281:
	if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then193_286;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else198_289;
LEGUP_F_main_BB_LeafBlock19_337:
	if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then242_338;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else261_341;
LEGUP_F_main_BB_LeafBlock21_336:
	if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then256_340;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else261_341;
LEGUP_F_main_BB_LeafBlock3_5:
	if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond331_preheader_preheader_7;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_LeafBlock_10:
	if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb_11;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_NodeBlock16_280:
	if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock12_282;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock14_281;
LEGUP_F_main_BB_NodeBlock1_8:
	if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock_10;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock_9;
LEGUP_F_main_BB_NodeBlock23_335:
	if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then249_339;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock21_336;
LEGUP_F_main_BB_NodeBlock5_4:
	if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb298_352;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock3_5;
LEGUP_F_main_BB_NodeBlock7_3:
	if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb233_300;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock5_4;
LEGUP_F_main_BB_NodeBlock9_2:
	if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock1_8;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock7_3;
LEGUP_F_main_BB_NodeBlock9_backedge_6:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_NodeBlock_9:
	if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb105_69;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd0))
		next_state = LEGUP_F_main_BB_sw_bb116_73;
LEGUP_F_main_BB_cleanup_396:
		next_state = LEGUP_0;
LEGUP_F_main_BB_entry_1:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_for_body89_31:
		next_state = LEGUP_F_main_BB_for_body89_32;
LEGUP_F_main_BB_for_body89_32:
	if ((fsm_stall == 1'd0) && (main_for_body89_exitcond_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end94_33;
	else if ((fsm_stall == 1'd0) && (main_for_body89_exitcond_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body89_31;
LEGUP_F_main_BB_for_cond331_preheader_390:
		next_state = LEGUP_F_main_BB_for_cond331_preheader_391;
LEGUP_F_main_BB_for_cond331_preheader_391:
		next_state = LEGUP_F_main_BB_for_cond331_preheader_392;
LEGUP_F_main_BB_for_cond331_preheader_392:
		next_state = LEGUP_F_main_BB_for_cond331_preheader_393;
LEGUP_F_main_BB_for_cond331_preheader_393:
		next_state = LEGUP_F_main_BB_for_cond331_preheader_394;
LEGUP_F_main_BB_for_cond331_preheader_394:
	if ((fsm_stall == 1'd0) && (main_for_cond331_preheader_exitcond5_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end343_395;
	else if ((fsm_stall == 1'd0) && (main_for_cond331_preheader_exitcond5_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond331_preheader_390;
LEGUP_F_main_BB_for_cond331_preheader_preheader_7:
		next_state = LEGUP_F_main_BB_for_cond331_preheader_390;
LEGUP_F_main_BB_for_end343_395:
		next_state = LEGUP_F_main_BB_cleanup_396;
LEGUP_F_main_BB_for_end94_33:
		next_state = LEGUP_F_main_BB_for_end94_34;
LEGUP_F_main_BB_for_end94_34:
		next_state = LEGUP_F_main_BB_for_end94_35;
LEGUP_F_main_BB_for_end94_35:
		next_state = LEGUP_F_main_BB_for_end94_36;
LEGUP_F_main_BB_for_end94_36:
		next_state = LEGUP_F_main_BB_for_end94_37;
LEGUP_F_main_BB_for_end94_37:
		next_state = LEGUP_F_main_BB_for_end94_38;
LEGUP_F_main_BB_for_end94_38:
		next_state = LEGUP_F_main_BB_for_end94_39;
LEGUP_F_main_BB_for_end94_39:
		next_state = LEGUP_F_main_BB_for_end94_40;
LEGUP_F_main_BB_for_end94_40:
		next_state = LEGUP_F_main_BB_for_end94_41;
LEGUP_F_main_BB_for_end94_41:
		next_state = LEGUP_F_main_BB_for_end94_42;
LEGUP_F_main_BB_for_end94_42:
		next_state = LEGUP_F_main_BB_for_end94_43;
LEGUP_F_main_BB_for_end94_43:
		next_state = LEGUP_F_main_BB_for_end94_44;
LEGUP_F_main_BB_for_end94_44:
		next_state = LEGUP_F_main_BB_for_end94_45;
LEGUP_F_main_BB_for_end94_45:
		next_state = LEGUP_F_main_BB_for_end94_46;
LEGUP_F_main_BB_for_end94_46:
		next_state = LEGUP_F_main_BB_for_end94_47;
LEGUP_F_main_BB_for_end94_47:
		next_state = LEGUP_F_main_BB_for_end94_48;
LEGUP_F_main_BB_for_end94_48:
		next_state = LEGUP_F_main_BB_for_end94_49;
LEGUP_F_main_BB_for_end94_49:
		next_state = LEGUP_F_main_BB_for_end94_50;
LEGUP_F_main_BB_for_end94_50:
		next_state = LEGUP_F_main_BB_for_end94_51;
LEGUP_F_main_BB_for_end94_51:
		next_state = LEGUP_F_main_BB_for_end94_52;
LEGUP_F_main_BB_for_end94_52:
		next_state = LEGUP_F_main_BB_for_end94_53;
LEGUP_F_main_BB_for_end94_53:
		next_state = LEGUP_F_main_BB_for_end94_54;
LEGUP_F_main_BB_for_end94_54:
		next_state = LEGUP_F_main_BB_for_end94_55;
LEGUP_F_main_BB_for_end94_55:
		next_state = LEGUP_F_main_BB_for_end94_56;
LEGUP_F_main_BB_for_end94_56:
		next_state = LEGUP_F_main_BB_for_end94_57;
LEGUP_F_main_BB_for_end94_57:
		next_state = LEGUP_F_main_BB_for_end94_58;
LEGUP_F_main_BB_for_end94_58:
		next_state = LEGUP_F_main_BB_for_end94_59;
LEGUP_F_main_BB_for_end94_59:
		next_state = LEGUP_F_main_BB_for_end94_60;
LEGUP_F_main_BB_for_end94_60:
		next_state = LEGUP_F_main_BB_for_end94_61;
LEGUP_F_main_BB_for_end94_61:
		next_state = LEGUP_F_main_BB_for_end94_62;
LEGUP_F_main_BB_for_end94_62:
		next_state = LEGUP_F_main_BB_for_end94_63;
LEGUP_F_main_BB_for_end94_63:
		next_state = LEGUP_F_main_BB_for_end94_64;
LEGUP_F_main_BB_for_end94_64:
		next_state = LEGUP_F_main_BB_for_end94_65;
LEGUP_F_main_BB_for_end94_65:
		next_state = LEGUP_F_main_BB_for_end94_66;
LEGUP_F_main_BB_for_end94_66:
		next_state = LEGUP_F_main_BB_for_end94_67;
LEGUP_F_main_BB_for_end94_67:
		next_state = LEGUP_F_main_BB_for_end94_68;
LEGUP_F_main_BB_for_end94_68:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_else137_142:
	if ((fsm_stall == 1'd0) && (main_if_else137_cmp138 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then139_143;
	else if ((fsm_stall == 1'd0) && (main_if_else137_cmp138 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else150_177;
LEGUP_F_main_BB_if_else150_177:
		next_state = LEGUP_F_main_BB_if_else150_178;
LEGUP_F_main_BB_if_else150_178:
		next_state = LEGUP_F_main_BB_if_else150_179;
LEGUP_F_main_BB_if_else150_179:
		next_state = LEGUP_F_main_BB_if_else150_180;
LEGUP_F_main_BB_if_else150_180:
		next_state = LEGUP_F_main_BB_if_else150_181;
LEGUP_F_main_BB_if_else150_181:
		next_state = LEGUP_F_main_BB_if_else150_182;
LEGUP_F_main_BB_if_else150_182:
		next_state = LEGUP_F_main_BB_if_else150_183;
LEGUP_F_main_BB_if_else150_183:
		next_state = LEGUP_F_main_BB_if_else150_184;
LEGUP_F_main_BB_if_else150_184:
		next_state = LEGUP_F_main_BB_if_else150_185;
LEGUP_F_main_BB_if_else150_185:
		next_state = LEGUP_F_main_BB_if_else150_186;
LEGUP_F_main_BB_if_else150_186:
		next_state = LEGUP_F_main_BB_if_else150_187;
LEGUP_F_main_BB_if_else150_187:
		next_state = LEGUP_F_main_BB_if_else150_188;
LEGUP_F_main_BB_if_else150_188:
		next_state = LEGUP_F_main_BB_if_else150_189;
LEGUP_F_main_BB_if_else150_189:
		next_state = LEGUP_F_main_BB_if_else150_190;
LEGUP_F_main_BB_if_else150_190:
		next_state = LEGUP_F_main_BB_if_else150_191;
LEGUP_F_main_BB_if_else150_191:
		next_state = LEGUP_F_main_BB_if_else150_192;
LEGUP_F_main_BB_if_else150_192:
		next_state = LEGUP_F_main_BB_if_else150_193;
LEGUP_F_main_BB_if_else150_193:
		next_state = LEGUP_F_main_BB_if_else150_194;
LEGUP_F_main_BB_if_else150_194:
		next_state = LEGUP_F_main_BB_if_else150_195;
LEGUP_F_main_BB_if_else150_195:
		next_state = LEGUP_F_main_BB_if_else150_196;
LEGUP_F_main_BB_if_else150_196:
		next_state = LEGUP_F_main_BB_if_else150_197;
LEGUP_F_main_BB_if_else150_197:
		next_state = LEGUP_F_main_BB_if_else150_198;
LEGUP_F_main_BB_if_else150_198:
		next_state = LEGUP_F_main_BB_if_else150_199;
LEGUP_F_main_BB_if_else150_199:
		next_state = LEGUP_F_main_BB_if_else150_200;
LEGUP_F_main_BB_if_else150_200:
		next_state = LEGUP_F_main_BB_if_else150_201;
LEGUP_F_main_BB_if_else150_201:
		next_state = LEGUP_F_main_BB_if_else150_202;
LEGUP_F_main_BB_if_else150_202:
		next_state = LEGUP_F_main_BB_if_else150_203;
LEGUP_F_main_BB_if_else150_203:
		next_state = LEGUP_F_main_BB_if_else150_204;
LEGUP_F_main_BB_if_else150_204:
		next_state = LEGUP_F_main_BB_if_else150_205;
LEGUP_F_main_BB_if_else150_205:
		next_state = LEGUP_F_main_BB_if_else150_206;
LEGUP_F_main_BB_if_else150_206:
		next_state = LEGUP_F_main_BB_if_else150_207;
LEGUP_F_main_BB_if_else150_207:
		next_state = LEGUP_F_main_BB_if_else150_208;
LEGUP_F_main_BB_if_else150_208:
		next_state = LEGUP_F_main_BB_if_else150_209;
LEGUP_F_main_BB_if_else150_209:
	if ((fsm_stall == 1'd0) && (main_if_else150_cmp151_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then152_210;
	else if ((fsm_stall == 1'd0) && (main_if_else150_cmp151_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else163_243;
LEGUP_F_main_BB_if_else163_243:
		next_state = LEGUP_F_main_BB_if_else163_244;
LEGUP_F_main_BB_if_else163_244:
		next_state = LEGUP_F_main_BB_if_else163_245;
LEGUP_F_main_BB_if_else163_245:
		next_state = LEGUP_F_main_BB_if_else163_246;
LEGUP_F_main_BB_if_else163_246:
		next_state = LEGUP_F_main_BB_if_else163_247;
LEGUP_F_main_BB_if_else163_247:
		next_state = LEGUP_F_main_BB_if_else163_248;
LEGUP_F_main_BB_if_else163_248:
		next_state = LEGUP_F_main_BB_if_else163_249;
LEGUP_F_main_BB_if_else163_249:
		next_state = LEGUP_F_main_BB_if_else163_250;
LEGUP_F_main_BB_if_else163_250:
		next_state = LEGUP_F_main_BB_if_else163_251;
LEGUP_F_main_BB_if_else163_251:
		next_state = LEGUP_F_main_BB_if_else163_252;
LEGUP_F_main_BB_if_else163_252:
		next_state = LEGUP_F_main_BB_if_else163_253;
LEGUP_F_main_BB_if_else163_253:
		next_state = LEGUP_F_main_BB_if_else163_254;
LEGUP_F_main_BB_if_else163_254:
		next_state = LEGUP_F_main_BB_if_else163_255;
LEGUP_F_main_BB_if_else163_255:
		next_state = LEGUP_F_main_BB_if_else163_256;
LEGUP_F_main_BB_if_else163_256:
		next_state = LEGUP_F_main_BB_if_else163_257;
LEGUP_F_main_BB_if_else163_257:
		next_state = LEGUP_F_main_BB_if_else163_258;
LEGUP_F_main_BB_if_else163_258:
		next_state = LEGUP_F_main_BB_if_else163_259;
LEGUP_F_main_BB_if_else163_259:
		next_state = LEGUP_F_main_BB_if_else163_260;
LEGUP_F_main_BB_if_else163_260:
		next_state = LEGUP_F_main_BB_if_else163_261;
LEGUP_F_main_BB_if_else163_261:
		next_state = LEGUP_F_main_BB_if_else163_262;
LEGUP_F_main_BB_if_else163_262:
		next_state = LEGUP_F_main_BB_if_else163_263;
LEGUP_F_main_BB_if_else163_263:
		next_state = LEGUP_F_main_BB_if_else163_264;
LEGUP_F_main_BB_if_else163_264:
		next_state = LEGUP_F_main_BB_if_else163_265;
LEGUP_F_main_BB_if_else163_265:
		next_state = LEGUP_F_main_BB_if_else163_266;
LEGUP_F_main_BB_if_else163_266:
		next_state = LEGUP_F_main_BB_if_else163_267;
LEGUP_F_main_BB_if_else163_267:
		next_state = LEGUP_F_main_BB_if_else163_268;
LEGUP_F_main_BB_if_else163_268:
		next_state = LEGUP_F_main_BB_if_else163_269;
LEGUP_F_main_BB_if_else163_269:
		next_state = LEGUP_F_main_BB_if_else163_270;
LEGUP_F_main_BB_if_else163_270:
		next_state = LEGUP_F_main_BB_if_else163_271;
LEGUP_F_main_BB_if_else163_271:
		next_state = LEGUP_F_main_BB_if_else163_272;
LEGUP_F_main_BB_if_else163_272:
		next_state = LEGUP_F_main_BB_if_else163_273;
LEGUP_F_main_BB_if_else163_273:
		next_state = LEGUP_F_main_BB_if_else163_274;
LEGUP_F_main_BB_if_else163_274:
		next_state = LEGUP_F_main_BB_if_else163_275;
LEGUP_F_main_BB_if_else163_275:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_else177_276:
	if ((fsm_stall == 1'd0) && (main_if_end119_cmp125_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then179_277;
	else if ((fsm_stall == 1'd0) && (main_if_end119_cmp125_reg == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock16_280;
LEGUP_F_main_BB_if_else198_289:
		next_state = LEGUP_F_main_BB_if_else198_290;
LEGUP_F_main_BB_if_else198_290:
		next_state = LEGUP_F_main_BB_if_else198_291;
LEGUP_F_main_BB_if_else198_291:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_else223_297:
	if ((fsm_stall == 1'd0) && (main_if_else223_cmp224 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then225_298;
	else if ((fsm_stall == 1'd0) && (main_if_else223_cmp224 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end228_299;
LEGUP_F_main_BB_if_else261_341:
		next_state = LEGUP_F_main_BB_if_end268_342;
LEGUP_F_main_BB_if_else287_350:
	if ((fsm_stall == 1'd0) && (main_if_else287_cmp288 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then289_351;
	else if ((fsm_stall == 1'd0) && (main_if_else287_cmp288 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end119_100:
		next_state = LEGUP_F_main_BB_if_end119_101;
LEGUP_F_main_BB_if_end119_101:
		next_state = LEGUP_F_main_BB_if_end119_102;
LEGUP_F_main_BB_if_end119_102:
		next_state = LEGUP_F_main_BB_if_end119_103;
LEGUP_F_main_BB_if_end119_103:
		next_state = LEGUP_F_main_BB_if_end119_104;
LEGUP_F_main_BB_if_end119_104:
		next_state = LEGUP_F_main_BB_if_end119_105;
LEGUP_F_main_BB_if_end119_105:
		next_state = LEGUP_F_main_BB_if_end119_106;
LEGUP_F_main_BB_if_end119_106:
	if ((fsm_stall == 1'd0) && (main_if_end119_cmp123_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then124_107;
	else if ((fsm_stall == 1'd0) && (main_if_end119_cmp123_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else177_276;
LEGUP_F_main_BB_if_end119_74:
		next_state = LEGUP_F_main_BB_if_end119_75;
LEGUP_F_main_BB_if_end119_75:
		next_state = LEGUP_F_main_BB_if_end119_76;
LEGUP_F_main_BB_if_end119_76:
		next_state = LEGUP_F_main_BB_if_end119_77;
LEGUP_F_main_BB_if_end119_77:
		next_state = LEGUP_F_main_BB_if_end119_78;
LEGUP_F_main_BB_if_end119_78:
		next_state = LEGUP_F_main_BB_if_end119_79;
LEGUP_F_main_BB_if_end119_79:
		next_state = LEGUP_F_main_BB_if_end119_80;
LEGUP_F_main_BB_if_end119_80:
		next_state = LEGUP_F_main_BB_if_end119_81;
LEGUP_F_main_BB_if_end119_81:
		next_state = LEGUP_F_main_BB_if_end119_82;
LEGUP_F_main_BB_if_end119_82:
		next_state = LEGUP_F_main_BB_if_end119_83;
LEGUP_F_main_BB_if_end119_83:
		next_state = LEGUP_F_main_BB_if_end119_84;
LEGUP_F_main_BB_if_end119_84:
		next_state = LEGUP_F_main_BB_if_end119_85;
LEGUP_F_main_BB_if_end119_85:
		next_state = LEGUP_F_main_BB_if_end119_86;
LEGUP_F_main_BB_if_end119_86:
		next_state = LEGUP_F_main_BB_if_end119_87;
LEGUP_F_main_BB_if_end119_87:
		next_state = LEGUP_F_main_BB_if_end119_88;
LEGUP_F_main_BB_if_end119_88:
		next_state = LEGUP_F_main_BB_if_end119_89;
LEGUP_F_main_BB_if_end119_89:
		next_state = LEGUP_F_main_BB_if_end119_90;
LEGUP_F_main_BB_if_end119_90:
		next_state = LEGUP_F_main_BB_if_end119_91;
LEGUP_F_main_BB_if_end119_91:
		next_state = LEGUP_F_main_BB_if_end119_92;
LEGUP_F_main_BB_if_end119_92:
		next_state = LEGUP_F_main_BB_if_end119_93;
LEGUP_F_main_BB_if_end119_93:
		next_state = LEGUP_F_main_BB_if_end119_94;
LEGUP_F_main_BB_if_end119_94:
		next_state = LEGUP_F_main_BB_if_end119_95;
LEGUP_F_main_BB_if_end119_95:
		next_state = LEGUP_F_main_BB_if_end119_96;
LEGUP_F_main_BB_if_end119_96:
		next_state = LEGUP_F_main_BB_if_end119_97;
LEGUP_F_main_BB_if_end119_97:
		next_state = LEGUP_F_main_BB_if_end119_98;
LEGUP_F_main_BB_if_end119_98:
		next_state = LEGUP_F_main_BB_if_end119_99;
LEGUP_F_main_BB_if_end119_99:
		next_state = LEGUP_F_main_BB_if_end119_100;
LEGUP_F_main_BB_if_end206_292:
		next_state = LEGUP_F_main_BB_if_end206_293;
LEGUP_F_main_BB_if_end206_293:
		next_state = LEGUP_F_main_BB_if_end206_294;
LEGUP_F_main_BB_if_end206_294:
	if ((fsm_stall == 1'd0) && (main_if_end206_or_cond531 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then218_295;
	else if ((fsm_stall == 1'd0) && (main_if_end206_or_cond531 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else223_297;
LEGUP_F_main_BB_if_end228_299:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end237_302:
		next_state = LEGUP_F_main_BB_if_end237_303;
LEGUP_F_main_BB_if_end237_303:
		next_state = LEGUP_F_main_BB_if_end237_304;
LEGUP_F_main_BB_if_end237_304:
		next_state = LEGUP_F_main_BB_if_end237_305;
LEGUP_F_main_BB_if_end237_305:
		next_state = LEGUP_F_main_BB_if_end237_306;
LEGUP_F_main_BB_if_end237_306:
		next_state = LEGUP_F_main_BB_if_end237_307;
LEGUP_F_main_BB_if_end237_307:
		next_state = LEGUP_F_main_BB_if_end237_308;
LEGUP_F_main_BB_if_end237_308:
		next_state = LEGUP_F_main_BB_if_end237_309;
LEGUP_F_main_BB_if_end237_309:
		next_state = LEGUP_F_main_BB_if_end237_310;
LEGUP_F_main_BB_if_end237_310:
		next_state = LEGUP_F_main_BB_if_end237_311;
LEGUP_F_main_BB_if_end237_311:
		next_state = LEGUP_F_main_BB_if_end237_312;
LEGUP_F_main_BB_if_end237_312:
		next_state = LEGUP_F_main_BB_if_end237_313;
LEGUP_F_main_BB_if_end237_313:
		next_state = LEGUP_F_main_BB_if_end237_314;
LEGUP_F_main_BB_if_end237_314:
		next_state = LEGUP_F_main_BB_if_end237_315;
LEGUP_F_main_BB_if_end237_315:
		next_state = LEGUP_F_main_BB_if_end237_316;
LEGUP_F_main_BB_if_end237_316:
		next_state = LEGUP_F_main_BB_if_end237_317;
LEGUP_F_main_BB_if_end237_317:
		next_state = LEGUP_F_main_BB_if_end237_318;
LEGUP_F_main_BB_if_end237_318:
		next_state = LEGUP_F_main_BB_if_end237_319;
LEGUP_F_main_BB_if_end237_319:
		next_state = LEGUP_F_main_BB_if_end237_320;
LEGUP_F_main_BB_if_end237_320:
		next_state = LEGUP_F_main_BB_if_end237_321;
LEGUP_F_main_BB_if_end237_321:
		next_state = LEGUP_F_main_BB_if_end237_322;
LEGUP_F_main_BB_if_end237_322:
		next_state = LEGUP_F_main_BB_if_end237_323;
LEGUP_F_main_BB_if_end237_323:
		next_state = LEGUP_F_main_BB_if_end237_324;
LEGUP_F_main_BB_if_end237_324:
		next_state = LEGUP_F_main_BB_if_end237_325;
LEGUP_F_main_BB_if_end237_325:
		next_state = LEGUP_F_main_BB_if_end237_326;
LEGUP_F_main_BB_if_end237_326:
		next_state = LEGUP_F_main_BB_if_end237_327;
LEGUP_F_main_BB_if_end237_327:
		next_state = LEGUP_F_main_BB_if_end237_328;
LEGUP_F_main_BB_if_end237_328:
		next_state = LEGUP_F_main_BB_if_end237_329;
LEGUP_F_main_BB_if_end237_329:
		next_state = LEGUP_F_main_BB_if_end237_330;
LEGUP_F_main_BB_if_end237_330:
		next_state = LEGUP_F_main_BB_if_end237_331;
LEGUP_F_main_BB_if_end237_331:
		next_state = LEGUP_F_main_BB_if_end237_332;
LEGUP_F_main_BB_if_end237_332:
		next_state = LEGUP_F_main_BB_if_end237_333;
LEGUP_F_main_BB_if_end237_333:
		next_state = LEGUP_F_main_BB_if_end237_334;
LEGUP_F_main_BB_if_end237_334:
	if ((fsm_stall == 1'd0) && (main_if_end237_Pivot26 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock19_337;
	else if ((fsm_stall == 1'd0) && (main_if_end237_Pivot26 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock23_335;
LEGUP_F_main_BB_if_end268_342:
		next_state = LEGUP_F_main_BB_if_end268_343;
LEGUP_F_main_BB_if_end268_343:
		next_state = LEGUP_F_main_BB_if_end268_344;
LEGUP_F_main_BB_if_end268_344:
		next_state = LEGUP_F_main_BB_if_end268_345;
LEGUP_F_main_BB_if_end268_345:
		next_state = LEGUP_F_main_BB_if_end268_346;
LEGUP_F_main_BB_if_end268_346:
		next_state = LEGUP_F_main_BB_if_end268_347;
LEGUP_F_main_BB_if_end268_347:
	if ((fsm_stall == 1'd0) && (main_if_end268_or_cond534 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then281_348;
	else if ((fsm_stall == 1'd0) && (main_if_end268_or_cond534 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else287_350;
LEGUP_F_main_BB_if_end301_353:
		next_state = LEGUP_F_main_BB_if_end301_354;
LEGUP_F_main_BB_if_end301_354:
		next_state = LEGUP_F_main_BB_if_end301_355;
LEGUP_F_main_BB_if_end301_355:
		next_state = LEGUP_F_main_BB_if_end301_356;
LEGUP_F_main_BB_if_end301_356:
		next_state = LEGUP_F_main_BB_if_end301_357;
LEGUP_F_main_BB_if_end301_357:
		next_state = LEGUP_F_main_BB_if_end301_358;
LEGUP_F_main_BB_if_end301_358:
		next_state = LEGUP_F_main_BB_if_end301_359;
LEGUP_F_main_BB_if_end301_359:
		next_state = LEGUP_F_main_BB_if_end301_360;
LEGUP_F_main_BB_if_end301_360:
		next_state = LEGUP_F_main_BB_if_end301_361;
LEGUP_F_main_BB_if_end301_361:
		next_state = LEGUP_F_main_BB_if_end301_362;
LEGUP_F_main_BB_if_end301_362:
		next_state = LEGUP_F_main_BB_if_end301_363;
LEGUP_F_main_BB_if_end301_363:
		next_state = LEGUP_F_main_BB_if_end301_364;
LEGUP_F_main_BB_if_end301_364:
		next_state = LEGUP_F_main_BB_if_end301_365;
LEGUP_F_main_BB_if_end301_365:
		next_state = LEGUP_F_main_BB_if_end301_366;
LEGUP_F_main_BB_if_end301_366:
		next_state = LEGUP_F_main_BB_if_end301_367;
LEGUP_F_main_BB_if_end301_367:
		next_state = LEGUP_F_main_BB_if_end301_368;
LEGUP_F_main_BB_if_end301_368:
		next_state = LEGUP_F_main_BB_if_end301_369;
LEGUP_F_main_BB_if_end301_369:
		next_state = LEGUP_F_main_BB_if_end301_370;
LEGUP_F_main_BB_if_end301_370:
		next_state = LEGUP_F_main_BB_if_end301_371;
LEGUP_F_main_BB_if_end301_371:
		next_state = LEGUP_F_main_BB_if_end301_372;
LEGUP_F_main_BB_if_end301_372:
		next_state = LEGUP_F_main_BB_if_end301_373;
LEGUP_F_main_BB_if_end301_373:
		next_state = LEGUP_F_main_BB_if_end301_374;
LEGUP_F_main_BB_if_end301_374:
		next_state = LEGUP_F_main_BB_if_end301_375;
LEGUP_F_main_BB_if_end301_375:
		next_state = LEGUP_F_main_BB_if_end301_376;
LEGUP_F_main_BB_if_end301_376:
		next_state = LEGUP_F_main_BB_if_end301_377;
LEGUP_F_main_BB_if_end301_377:
		next_state = LEGUP_F_main_BB_if_end301_378;
LEGUP_F_main_BB_if_end301_378:
		next_state = LEGUP_F_main_BB_if_end301_379;
LEGUP_F_main_BB_if_end301_379:
		next_state = LEGUP_F_main_BB_if_end301_380;
LEGUP_F_main_BB_if_end301_380:
		next_state = LEGUP_F_main_BB_if_end301_381;
LEGUP_F_main_BB_if_end301_381:
		next_state = LEGUP_F_main_BB_if_end301_382;
LEGUP_F_main_BB_if_end301_382:
		next_state = LEGUP_F_main_BB_if_end301_383;
LEGUP_F_main_BB_if_end301_383:
		next_state = LEGUP_F_main_BB_if_end301_384;
LEGUP_F_main_BB_if_end301_384:
		next_state = LEGUP_F_main_BB_if_end301_385;
LEGUP_F_main_BB_if_end301_385:
		next_state = LEGUP_F_main_BB_if_end301_386;
LEGUP_F_main_BB_if_end301_386:
		next_state = LEGUP_F_main_BB_if_end301_387;
LEGUP_F_main_BB_if_end301_387:
		next_state = LEGUP_F_main_BB_if_end301_388;
LEGUP_F_main_BB_if_end301_388:
		next_state = LEGUP_F_main_BB_if_end301_389;
LEGUP_F_main_BB_if_end301_389:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end_70:
		next_state = LEGUP_F_main_BB_if_end_71;
LEGUP_F_main_BB_if_end_71:
		next_state = LEGUP_F_main_BB_if_end_72;
LEGUP_F_main_BB_if_end_72:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then124_107:
	if ((fsm_stall == 1'd0) && (main_if_end119_cmp125_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then126_108;
	else if ((fsm_stall == 1'd0) && (main_if_end119_cmp125_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else137_142;
LEGUP_F_main_BB_if_then126_108:
		next_state = LEGUP_F_main_BB_if_then126_109;
LEGUP_F_main_BB_if_then126_109:
		next_state = LEGUP_F_main_BB_if_then126_110;
LEGUP_F_main_BB_if_then126_110:
		next_state = LEGUP_F_main_BB_if_then126_111;
LEGUP_F_main_BB_if_then126_111:
		next_state = LEGUP_F_main_BB_if_then126_112;
LEGUP_F_main_BB_if_then126_112:
		next_state = LEGUP_F_main_BB_if_then126_113;
LEGUP_F_main_BB_if_then126_113:
		next_state = LEGUP_F_main_BB_if_then126_114;
LEGUP_F_main_BB_if_then126_114:
		next_state = LEGUP_F_main_BB_if_then126_115;
LEGUP_F_main_BB_if_then126_115:
		next_state = LEGUP_F_main_BB_if_then126_116;
LEGUP_F_main_BB_if_then126_116:
		next_state = LEGUP_F_main_BB_if_then126_117;
LEGUP_F_main_BB_if_then126_117:
		next_state = LEGUP_F_main_BB_if_then126_118;
LEGUP_F_main_BB_if_then126_118:
		next_state = LEGUP_F_main_BB_if_then126_119;
LEGUP_F_main_BB_if_then126_119:
		next_state = LEGUP_F_main_BB_if_then126_120;
LEGUP_F_main_BB_if_then126_120:
		next_state = LEGUP_F_main_BB_if_then126_121;
LEGUP_F_main_BB_if_then126_121:
		next_state = LEGUP_F_main_BB_if_then126_122;
LEGUP_F_main_BB_if_then126_122:
		next_state = LEGUP_F_main_BB_if_then126_123;
LEGUP_F_main_BB_if_then126_123:
		next_state = LEGUP_F_main_BB_if_then126_124;
LEGUP_F_main_BB_if_then126_124:
		next_state = LEGUP_F_main_BB_if_then126_125;
LEGUP_F_main_BB_if_then126_125:
		next_state = LEGUP_F_main_BB_if_then126_126;
LEGUP_F_main_BB_if_then126_126:
		next_state = LEGUP_F_main_BB_if_then126_127;
LEGUP_F_main_BB_if_then126_127:
		next_state = LEGUP_F_main_BB_if_then126_128;
LEGUP_F_main_BB_if_then126_128:
		next_state = LEGUP_F_main_BB_if_then126_129;
LEGUP_F_main_BB_if_then126_129:
		next_state = LEGUP_F_main_BB_if_then126_130;
LEGUP_F_main_BB_if_then126_130:
		next_state = LEGUP_F_main_BB_if_then126_131;
LEGUP_F_main_BB_if_then126_131:
		next_state = LEGUP_F_main_BB_if_then126_132;
LEGUP_F_main_BB_if_then126_132:
		next_state = LEGUP_F_main_BB_if_then126_133;
LEGUP_F_main_BB_if_then126_133:
		next_state = LEGUP_F_main_BB_if_then126_134;
LEGUP_F_main_BB_if_then126_134:
		next_state = LEGUP_F_main_BB_if_then126_135;
LEGUP_F_main_BB_if_then126_135:
		next_state = LEGUP_F_main_BB_if_then126_136;
LEGUP_F_main_BB_if_then126_136:
		next_state = LEGUP_F_main_BB_if_then126_137;
LEGUP_F_main_BB_if_then126_137:
		next_state = LEGUP_F_main_BB_if_then126_138;
LEGUP_F_main_BB_if_then126_138:
		next_state = LEGUP_F_main_BB_if_then126_139;
LEGUP_F_main_BB_if_then126_139:
		next_state = LEGUP_F_main_BB_if_then126_140;
LEGUP_F_main_BB_if_then126_140:
		next_state = LEGUP_F_main_BB_if_then126_141;
LEGUP_F_main_BB_if_then126_141:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_then139_143:
		next_state = LEGUP_F_main_BB_if_then139_144;
LEGUP_F_main_BB_if_then139_144:
		next_state = LEGUP_F_main_BB_if_then139_145;
LEGUP_F_main_BB_if_then139_145:
		next_state = LEGUP_F_main_BB_if_then139_146;
LEGUP_F_main_BB_if_then139_146:
		next_state = LEGUP_F_main_BB_if_then139_147;
LEGUP_F_main_BB_if_then139_147:
		next_state = LEGUP_F_main_BB_if_then139_148;
LEGUP_F_main_BB_if_then139_148:
		next_state = LEGUP_F_main_BB_if_then139_149;
LEGUP_F_main_BB_if_then139_149:
		next_state = LEGUP_F_main_BB_if_then139_150;
LEGUP_F_main_BB_if_then139_150:
		next_state = LEGUP_F_main_BB_if_then139_151;
LEGUP_F_main_BB_if_then139_151:
		next_state = LEGUP_F_main_BB_if_then139_152;
LEGUP_F_main_BB_if_then139_152:
		next_state = LEGUP_F_main_BB_if_then139_153;
LEGUP_F_main_BB_if_then139_153:
		next_state = LEGUP_F_main_BB_if_then139_154;
LEGUP_F_main_BB_if_then139_154:
		next_state = LEGUP_F_main_BB_if_then139_155;
LEGUP_F_main_BB_if_then139_155:
		next_state = LEGUP_F_main_BB_if_then139_156;
LEGUP_F_main_BB_if_then139_156:
		next_state = LEGUP_F_main_BB_if_then139_157;
LEGUP_F_main_BB_if_then139_157:
		next_state = LEGUP_F_main_BB_if_then139_158;
LEGUP_F_main_BB_if_then139_158:
		next_state = LEGUP_F_main_BB_if_then139_159;
LEGUP_F_main_BB_if_then139_159:
		next_state = LEGUP_F_main_BB_if_then139_160;
LEGUP_F_main_BB_if_then139_160:
		next_state = LEGUP_F_main_BB_if_then139_161;
LEGUP_F_main_BB_if_then139_161:
		next_state = LEGUP_F_main_BB_if_then139_162;
LEGUP_F_main_BB_if_then139_162:
		next_state = LEGUP_F_main_BB_if_then139_163;
LEGUP_F_main_BB_if_then139_163:
		next_state = LEGUP_F_main_BB_if_then139_164;
LEGUP_F_main_BB_if_then139_164:
		next_state = LEGUP_F_main_BB_if_then139_165;
LEGUP_F_main_BB_if_then139_165:
		next_state = LEGUP_F_main_BB_if_then139_166;
LEGUP_F_main_BB_if_then139_166:
		next_state = LEGUP_F_main_BB_if_then139_167;
LEGUP_F_main_BB_if_then139_167:
		next_state = LEGUP_F_main_BB_if_then139_168;
LEGUP_F_main_BB_if_then139_168:
		next_state = LEGUP_F_main_BB_if_then139_169;
LEGUP_F_main_BB_if_then139_169:
		next_state = LEGUP_F_main_BB_if_then139_170;
LEGUP_F_main_BB_if_then139_170:
		next_state = LEGUP_F_main_BB_if_then139_171;
LEGUP_F_main_BB_if_then139_171:
		next_state = LEGUP_F_main_BB_if_then139_172;
LEGUP_F_main_BB_if_then139_172:
		next_state = LEGUP_F_main_BB_if_then139_173;
LEGUP_F_main_BB_if_then139_173:
		next_state = LEGUP_F_main_BB_if_then139_174;
LEGUP_F_main_BB_if_then139_174:
		next_state = LEGUP_F_main_BB_if_then139_175;
LEGUP_F_main_BB_if_then139_175:
		next_state = LEGUP_F_main_BB_if_then139_176;
LEGUP_F_main_BB_if_then139_176:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_then152_210:
		next_state = LEGUP_F_main_BB_if_then152_211;
LEGUP_F_main_BB_if_then152_211:
		next_state = LEGUP_F_main_BB_if_then152_212;
LEGUP_F_main_BB_if_then152_212:
		next_state = LEGUP_F_main_BB_if_then152_213;
LEGUP_F_main_BB_if_then152_213:
		next_state = LEGUP_F_main_BB_if_then152_214;
LEGUP_F_main_BB_if_then152_214:
		next_state = LEGUP_F_main_BB_if_then152_215;
LEGUP_F_main_BB_if_then152_215:
		next_state = LEGUP_F_main_BB_if_then152_216;
LEGUP_F_main_BB_if_then152_216:
		next_state = LEGUP_F_main_BB_if_then152_217;
LEGUP_F_main_BB_if_then152_217:
		next_state = LEGUP_F_main_BB_if_then152_218;
LEGUP_F_main_BB_if_then152_218:
		next_state = LEGUP_F_main_BB_if_then152_219;
LEGUP_F_main_BB_if_then152_219:
		next_state = LEGUP_F_main_BB_if_then152_220;
LEGUP_F_main_BB_if_then152_220:
		next_state = LEGUP_F_main_BB_if_then152_221;
LEGUP_F_main_BB_if_then152_221:
		next_state = LEGUP_F_main_BB_if_then152_222;
LEGUP_F_main_BB_if_then152_222:
		next_state = LEGUP_F_main_BB_if_then152_223;
LEGUP_F_main_BB_if_then152_223:
		next_state = LEGUP_F_main_BB_if_then152_224;
LEGUP_F_main_BB_if_then152_224:
		next_state = LEGUP_F_main_BB_if_then152_225;
LEGUP_F_main_BB_if_then152_225:
		next_state = LEGUP_F_main_BB_if_then152_226;
LEGUP_F_main_BB_if_then152_226:
		next_state = LEGUP_F_main_BB_if_then152_227;
LEGUP_F_main_BB_if_then152_227:
		next_state = LEGUP_F_main_BB_if_then152_228;
LEGUP_F_main_BB_if_then152_228:
		next_state = LEGUP_F_main_BB_if_then152_229;
LEGUP_F_main_BB_if_then152_229:
		next_state = LEGUP_F_main_BB_if_then152_230;
LEGUP_F_main_BB_if_then152_230:
		next_state = LEGUP_F_main_BB_if_then152_231;
LEGUP_F_main_BB_if_then152_231:
		next_state = LEGUP_F_main_BB_if_then152_232;
LEGUP_F_main_BB_if_then152_232:
		next_state = LEGUP_F_main_BB_if_then152_233;
LEGUP_F_main_BB_if_then152_233:
		next_state = LEGUP_F_main_BB_if_then152_234;
LEGUP_F_main_BB_if_then152_234:
		next_state = LEGUP_F_main_BB_if_then152_235;
LEGUP_F_main_BB_if_then152_235:
		next_state = LEGUP_F_main_BB_if_then152_236;
LEGUP_F_main_BB_if_then152_236:
		next_state = LEGUP_F_main_BB_if_then152_237;
LEGUP_F_main_BB_if_then152_237:
		next_state = LEGUP_F_main_BB_if_then152_238;
LEGUP_F_main_BB_if_then152_238:
		next_state = LEGUP_F_main_BB_if_then152_239;
LEGUP_F_main_BB_if_then152_239:
		next_state = LEGUP_F_main_BB_if_then152_240;
LEGUP_F_main_BB_if_then152_240:
		next_state = LEGUP_F_main_BB_if_then152_241;
LEGUP_F_main_BB_if_then152_241:
		next_state = LEGUP_F_main_BB_if_then152_242;
LEGUP_F_main_BB_if_then152_242:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_then179_277:
		next_state = LEGUP_F_main_BB_if_then179_278;
LEGUP_F_main_BB_if_then179_278:
		next_state = LEGUP_F_main_BB_if_then179_279;
LEGUP_F_main_BB_if_then179_279:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_then186_283:
		next_state = LEGUP_F_main_BB_if_then186_284;
LEGUP_F_main_BB_if_then186_284:
		next_state = LEGUP_F_main_BB_if_then186_285;
LEGUP_F_main_BB_if_then186_285:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_then193_286:
		next_state = LEGUP_F_main_BB_if_then193_287;
LEGUP_F_main_BB_if_then193_287:
		next_state = LEGUP_F_main_BB_if_then193_288;
LEGUP_F_main_BB_if_then193_288:
		next_state = LEGUP_F_main_BB_if_end206_292;
LEGUP_F_main_BB_if_then218_295:
		next_state = LEGUP_F_main_BB_if_then218_296;
LEGUP_F_main_BB_if_then218_296:
		next_state = LEGUP_F_main_BB_if_end228_299;
LEGUP_F_main_BB_if_then225_298:
		next_state = LEGUP_F_main_BB_cleanup_396;
LEGUP_F_main_BB_if_then235_301:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then242_338:
		next_state = LEGUP_F_main_BB_if_end268_342;
LEGUP_F_main_BB_if_then249_339:
		next_state = LEGUP_F_main_BB_if_end268_342;
LEGUP_F_main_BB_if_then256_340:
		next_state = LEGUP_F_main_BB_if_end268_342;
LEGUP_F_main_BB_if_then281_348:
		next_state = LEGUP_F_main_BB_if_then281_349;
LEGUP_F_main_BB_if_then281_349:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then289_351:
		next_state = LEGUP_F_main_BB_cleanup_396;
LEGUP_F_main_BB_sw_bb105_69:
	if ((fsm_stall == 1'd0) && (main_sw_bb105_cmp106 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb105_cmp106 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end_70;
LEGUP_F_main_BB_sw_bb116_73:
	if ((fsm_stall == 1'd0) && (main_sw_bb116_cmp117 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end119_74;
	else if ((fsm_stall == 1'd0) && (main_sw_bb116_cmp117 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_sw_bb233_300:
	if ((fsm_stall == 1'd0) && (main_sw_bb233_cmp234 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end237_302;
	else if ((fsm_stall == 1'd0) && (main_sw_bb233_cmp234 == 1'd0))
		next_state = LEGUP_F_main_BB_if_then235_301;
LEGUP_F_main_BB_sw_bb298_352:
	if ((fsm_stall == 1'd0) && (main_sw_bb298_cmp299 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb298_cmp299 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end301_353;
LEGUP_F_main_BB_sw_bb_11:
		next_state = LEGUP_F_main_BB_sw_bb_12;
LEGUP_F_main_BB_sw_bb_12:
		next_state = LEGUP_F_main_BB_sw_bb_13;
LEGUP_F_main_BB_sw_bb_13:
		next_state = LEGUP_F_main_BB_sw_bb_14;
LEGUP_F_main_BB_sw_bb_14:
		next_state = LEGUP_F_main_BB_sw_bb_15;
LEGUP_F_main_BB_sw_bb_15:
		next_state = LEGUP_F_main_BB_sw_bb_16;
LEGUP_F_main_BB_sw_bb_16:
		next_state = LEGUP_F_main_BB_sw_bb_17;
LEGUP_F_main_BB_sw_bb_17:
		next_state = LEGUP_F_main_BB_sw_bb_18;
LEGUP_F_main_BB_sw_bb_18:
		next_state = LEGUP_F_main_BB_sw_bb_19;
LEGUP_F_main_BB_sw_bb_19:
		next_state = LEGUP_F_main_BB_sw_bb_20;
LEGUP_F_main_BB_sw_bb_20:
		next_state = LEGUP_F_main_BB_sw_bb_21;
LEGUP_F_main_BB_sw_bb_21:
		next_state = LEGUP_F_main_BB_sw_bb_22;
LEGUP_F_main_BB_sw_bb_22:
		next_state = LEGUP_F_main_BB_sw_bb_23;
LEGUP_F_main_BB_sw_bb_23:
		next_state = LEGUP_F_main_BB_sw_bb_24;
LEGUP_F_main_BB_sw_bb_24:
		next_state = LEGUP_F_main_BB_sw_bb_25;
LEGUP_F_main_BB_sw_bb_25:
		next_state = LEGUP_F_main_BB_sw_bb_26;
LEGUP_F_main_BB_sw_bb_26:
		next_state = LEGUP_F_main_BB_sw_bb_27;
LEGUP_F_main_BB_sw_bb_27:
		next_state = LEGUP_F_main_BB_sw_bb_28;
LEGUP_F_main_BB_sw_bb_28:
		next_state = LEGUP_F_main_BB_sw_bb_29;
LEGUP_F_main_BB_sw_bb_29:
		next_state = LEGUP_F_main_BB_sw_bb_30;
LEGUP_F_main_BB_sw_bb_30:
		next_state = LEGUP_F_main_BB_for_body89_31;
default:
	next_state = cur_state;
endcase

end
assign fsm_stall = 1'd0;
assign main_entry_vla1526_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla1526_sub_reg <= main_entry_vla1526_sub;
	end
end
assign main_entry_vla525_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla525_sub_reg <= main_entry_vla525_sub;
	end
end
assign main_entry_arrayidx6 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx6_reg <= main_entry_arrayidx6;
	end
end
assign main_entry_arrayidx7 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx7_reg <= main_entry_arrayidx7;
	end
end
assign main_entry_arrayidx8 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx8_reg <= main_entry_arrayidx8;
	end
end
assign main_entry_arrayidx9 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx9_reg <= main_entry_arrayidx9;
	end
end
assign main_entry_arrayidx10 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx10_reg <= main_entry_arrayidx10;
	end
end
assign main_entry_arrayidx11 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx11_reg <= main_entry_arrayidx11;
	end
end
assign main_entry_arrayidx12 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx12_reg <= main_entry_arrayidx12;
	end
end
assign main_entry_arrayidx13 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx13_reg <= main_entry_arrayidx13;
	end
end
assign main_entry_arrayidx14 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx14_reg <= main_entry_arrayidx14;
	end
end
assign main_entry_arrayidx15 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx15_reg <= main_entry_arrayidx15;
	end
end
assign main_entry_arrayidx16 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx16_reg <= main_entry_arrayidx16;
	end
end
assign main_entry_arrayidx17 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx17_reg <= main_entry_arrayidx17;
	end
end
assign main_entry_arrayidx18 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx18_reg <= main_entry_arrayidx18;
	end
end
assign main_entry_arrayidx19 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx19_reg <= main_entry_arrayidx19;
	end
end
assign main_entry_arrayidx20 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx20_reg <= main_entry_arrayidx20;
	end
end
assign main_entry_arrayidx21 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx21_reg <= main_entry_arrayidx21;
	end
end
assign main_entry_arrayidx22 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx22_reg <= main_entry_arrayidx22;
	end
end
assign main_entry_arrayidx23 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx23_reg <= main_entry_arrayidx23;
	end
end
assign main_entry_arrayidx24 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx24_reg <= main_entry_arrayidx24;
	end
end
assign main_entry_arrayidx25 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx25_reg <= main_entry_arrayidx25;
	end
end
assign main_entry_arrayidx26 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx26_reg <= main_entry_arrayidx26;
	end
end
assign main_entry_arrayidx27 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx27_reg <= main_entry_arrayidx27;
	end
end
assign main_entry_arrayidx28 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx28_reg <= main_entry_arrayidx28;
	end
end
assign main_entry_arrayidx29 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx29_reg <= main_entry_arrayidx29;
	end
end
assign main_entry_arrayidx30 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx30_reg <= main_entry_arrayidx30;
	end
end
assign main_entry_arrayidx31 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx31_reg <= main_entry_arrayidx31;
	end
end
assign main_entry_arrayidx32 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx32_reg <= main_entry_arrayidx32;
	end
end
assign main_entry_arrayidx33 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx33_reg <= main_entry_arrayidx33;
	end
end
assign main_entry_arrayidx34 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx34_reg <= main_entry_arrayidx34;
	end
end
assign main_entry_arrayidx35 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx35_reg <= main_entry_arrayidx35;
	end
end
assign main_entry_arrayidx36 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx36_reg <= main_entry_arrayidx36;
	end
end
assign main_entry_arrayidx37 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx37_reg <= main_entry_arrayidx37;
	end
end
assign main_entry_arrayidx38 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx38_reg <= main_entry_arrayidx38;
	end
end
assign main_entry_arrayidx39 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx39_reg <= main_entry_arrayidx39;
	end
end
assign main_entry_arrayidx40 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx40_reg <= main_entry_arrayidx40;
	end
end
assign main_entry_arrayidx41 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx41_reg <= main_entry_arrayidx41;
	end
end
assign main_entry_arrayidx42 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx42_reg <= main_entry_arrayidx42;
	end
end
assign main_entry_arrayidx43 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx43_reg <= main_entry_arrayidx43;
	end
end
assign main_entry_arrayidx44 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx44_reg <= main_entry_arrayidx44;
	end
end
assign main_entry_arrayidx45 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx45_reg <= main_entry_arrayidx45;
	end
end
assign main_entry_arrayidx46 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx46_reg <= main_entry_arrayidx46;
	end
end
assign main_entry_arrayidx47 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_reg <= main_entry_arrayidx47;
	end
end
assign main_entry_arrayidx48 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx48_reg <= main_entry_arrayidx48;
	end
end
assign main_entry_arrayidx49 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx49_reg <= main_entry_arrayidx49;
	end
end
assign main_entry_arrayidx50 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx50_reg <= main_entry_arrayidx50;
	end
end
assign main_entry_arrayidx51 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx51_reg <= main_entry_arrayidx51;
	end
end
assign main_entry_arrayidx52 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx52_reg <= main_entry_arrayidx52;
	end
end
assign main_entry_arrayidx53 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_reg <= main_entry_arrayidx53;
	end
end
assign main_entry_arrayidx54 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_reg <= main_entry_arrayidx54;
	end
end
assign main_entry_arrayidx55 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_reg <= main_entry_arrayidx55;
	end
end
assign main_entry_arrayidx56 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx56_reg <= main_entry_arrayidx56;
	end
end
assign main_entry_arrayidx57 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx57_reg <= main_entry_arrayidx57;
	end
end
assign main_entry_arrayidx58 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx58_reg <= main_entry_arrayidx58;
	end
end
assign main_entry_arrayidx59 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx59_reg <= main_entry_arrayidx59;
	end
end
assign main_entry_arrayidx60 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_reg <= main_entry_arrayidx60;
	end
end
assign main_entry_arrayidx61 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_reg <= main_entry_arrayidx61;
	end
end
assign main_entry_arrayidx62 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx62_reg <= main_entry_arrayidx62;
	end
end
assign main_entry_arrayidx63 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx63_reg <= main_entry_arrayidx63;
	end
end
assign main_entry_arrayidx64 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx64_reg <= main_entry_arrayidx64;
	end
end
assign main_entry_arrayidx65 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx65_reg <= main_entry_arrayidx65;
	end
end
assign main_entry_arrayidx66 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx66_reg <= main_entry_arrayidx66;
	end
end
assign main_entry_arrayidx67 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx67_reg <= main_entry_arrayidx67;
	end
end
assign main_entry_arrayidx68 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx68_reg <= main_entry_arrayidx68;
	end
end
assign main_entry_arrayidx69 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx69_reg <= main_entry_arrayidx69;
	end
end
assign main_entry_arrayidx70 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx70_reg <= main_entry_arrayidx70;
	end
end
assign main_entry_arrayidx71 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx71_reg <= main_entry_arrayidx71;
	end
end
assign main_entry_arrayidx72 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx72_reg <= main_entry_arrayidx72;
	end
end
assign main_entry_arrayidx73 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_reg <= main_entry_arrayidx73;
	end
end
assign main_entry_arrayidx74 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx74_reg <= main_entry_arrayidx74;
	end
end
assign main_entry_arrayidx75 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx75_reg <= main_entry_arrayidx75;
	end
end
assign main_entry_arrayidx76 = (1'd0 + (4 * 32'd36));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx76_reg <= main_entry_arrayidx76;
	end
end
assign main_entry_arrayidx77 = (1'd0 + (4 * 32'd36));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx77_reg <= main_entry_arrayidx77;
	end
end
assign main_entry_arrayidx83 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_reg <= main_entry_arrayidx83;
	end
end
assign main_entry_arrayidx83_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_1_reg <= main_entry_arrayidx83_1;
	end
end
assign main_entry_arrayidx83_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_2_reg <= main_entry_arrayidx83_2;
	end
end
assign main_entry_arrayidx83_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_3_reg <= main_entry_arrayidx83_3;
	end
end
assign main_entry_arrayidx83_4 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_4_reg <= main_entry_arrayidx83_4;
	end
end
assign main_entry_arrayidx83_5 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_5_reg <= main_entry_arrayidx83_5;
	end
end
assign main_entry_arrayidx83_1551 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_1551_reg <= main_entry_arrayidx83_1551;
	end
end
assign main_entry_arrayidx83_1_1 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_1_1_reg <= main_entry_arrayidx83_1_1;
	end
end
assign main_entry_arrayidx83_2_1 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_2_1_reg <= main_entry_arrayidx83_2_1;
	end
end
assign main_entry_arrayidx83_3_1 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_3_1_reg <= main_entry_arrayidx83_3_1;
	end
end
assign main_entry_arrayidx83_4_1 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_4_1_reg <= main_entry_arrayidx83_4_1;
	end
end
assign main_entry_arrayidx83_5_1 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_5_1_reg <= main_entry_arrayidx83_5_1;
	end
end
assign main_entry_arrayidx83_2552 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_2552_reg <= main_entry_arrayidx83_2552;
	end
end
assign main_entry_arrayidx83_1_2 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_1_2_reg <= main_entry_arrayidx83_1_2;
	end
end
assign main_entry_arrayidx83_2_2 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_2_2_reg <= main_entry_arrayidx83_2_2;
	end
end
assign main_entry_arrayidx83_3_2 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_3_2_reg <= main_entry_arrayidx83_3_2;
	end
end
assign main_entry_arrayidx83_4_2 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_4_2_reg <= main_entry_arrayidx83_4_2;
	end
end
assign main_entry_arrayidx83_5_2 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_5_2_reg <= main_entry_arrayidx83_5_2;
	end
end
assign main_entry_arrayidx83_3553 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_3553_reg <= main_entry_arrayidx83_3553;
	end
end
assign main_entry_arrayidx83_1_3 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_1_3_reg <= main_entry_arrayidx83_1_3;
	end
end
assign main_entry_arrayidx83_2_3 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_2_3_reg <= main_entry_arrayidx83_2_3;
	end
end
assign main_entry_arrayidx83_3_3 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_3_3_reg <= main_entry_arrayidx83_3_3;
	end
end
assign main_entry_arrayidx83_4_3 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_4_3_reg <= main_entry_arrayidx83_4_3;
	end
end
assign main_entry_arrayidx83_5_3 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_5_3_reg <= main_entry_arrayidx83_5_3;
	end
end
assign main_entry_arrayidx83_4554 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_4554_reg <= main_entry_arrayidx83_4554;
	end
end
assign main_entry_arrayidx83_1_4 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_1_4_reg <= main_entry_arrayidx83_1_4;
	end
end
assign main_entry_arrayidx83_2_4 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_2_4_reg <= main_entry_arrayidx83_2_4;
	end
end
assign main_entry_arrayidx83_3_4 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_3_4_reg <= main_entry_arrayidx83_3_4;
	end
end
assign main_entry_arrayidx83_4_4 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_4_4_reg <= main_entry_arrayidx83_4_4;
	end
end
assign main_entry_arrayidx83_5_4 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_5_4_reg <= main_entry_arrayidx83_5_4;
	end
end
assign main_entry_arrayidx83_5555 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_5555_reg <= main_entry_arrayidx83_5555;
	end
end
assign main_entry_arrayidx83_1_5 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_1_5_reg <= main_entry_arrayidx83_1_5;
	end
end
assign main_entry_arrayidx83_2_5 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_2_5_reg <= main_entry_arrayidx83_2_5;
	end
end
assign main_entry_arrayidx83_3_5 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_3_5_reg <= main_entry_arrayidx83_3_5;
	end
end
assign main_entry_arrayidx83_4_5 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_4_5_reg <= main_entry_arrayidx83_4_5;
	end
end
assign main_entry_arrayidx83_5_5 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_5_5_reg <= main_entry_arrayidx83_5_5;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_state_0 = main_NodeBlock9_backedge_state_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_i_0 = main_NodeBlock9_backedge_i_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_j_0 = main_NodeBlock9_backedge_j_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_a_0 = main_NodeBlock9_backedge_a_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_b_0 = main_NodeBlock9_backedge_b_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_X_0 = main_NodeBlock9_backedge_pos_a_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_Y_0 = main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_X_0 = main_NodeBlock9_backedge_pos_b_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_Y_0 = main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_mesh_0 = main_NodeBlock9_backedge_sum_mesh_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_1hop_0 = main_NodeBlock9_backedge_sum_1hop_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0 = 32'd147621160;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_seed_0 = main_NodeBlock9_backedge_seed_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
end
always @(*) begin
		main_NodeBlock9_Pivot10 = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock9_Pivot10_op1_temp}));
end
always @(*) begin
		main_NodeBlock7_Pivot8 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock7_Pivot8_op1_temp}));
end
always @(*) begin
		main_NodeBlock5_Pivot6 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock5_Pivot6_op1_temp}));
end
always @(*) begin
		main_LeafBlock3_SwitchLeaf4 = (main_NodeBlock9_state_0_reg == 32'd5);
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end_1_reg};
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end228_532};
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd5;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then235_inc236;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then281_inc286_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd37;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_i_0_be = main_if_end301_inc327_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_end228_inc207_1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_else287_inc269;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_for_end94_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_if_end_2_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_a_0_be = main_if_end301_30_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_if_end_3_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_b_0_be = main_if_end301_31_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end_4;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end228_pos_a_X_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end_5;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end228_pos_a_Y_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end_6;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end268_xi_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = -32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end_7;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end268_xj_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_if_end301_newCurOp_add318_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_if_end301_newCurOp_add326;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_for_end94_add100_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end206_seed_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end237_add240_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end237_add240_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end94_68) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb105_69) & (fsm_stall == 1'd0)) & (main_sw_bb105_cmp106 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_72) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb116_73) & (fsm_stall == 1'd0)) & (main_sw_bb116_cmp117 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end228_299) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then235_301) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_349) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else287_350) & (fsm_stall == 1'd0)) & (main_if_else287_cmp288 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb298_352) & (fsm_stall == 1'd0)) & (main_sw_bb298_cmp299 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end301_389) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
end
always @(*) begin
		main_NodeBlock1_Pivot2 = ($signed(main_NodeBlock9_state_0_reg) < $signed({29'd0,main_NodeBlock1_Pivot2_op1_temp}));
end
always @(*) begin
		main_NodeBlock_Pivot = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock_Pivot_op1_temp}));
end
always @(*) begin
		main_LeafBlock_SwitchLeaf = (main_NodeBlock9_state_0_reg == 32'd0);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_30) & (fsm_stall == 1'd0))) begin
		main_for_body89_i_2544 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body89_32) & (fsm_stall == 1'd0)) & (main_for_body89_exitcond_reg == 1'd0))) */ begin
		main_for_body89_i_2544 = main_for_body89_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_30) & (fsm_stall == 1'd0))) begin
		main_for_body89_i_2544_reg <= main_for_body89_i_2544;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body89_32) & (fsm_stall == 1'd0)) & (main_for_body89_exitcond_reg == 1'd0))) begin
		main_for_body89_i_2544_reg <= main_for_body89_i_2544;
	end
end
always @(*) begin
		main_for_body89_arrayidx90 = (1'd0 + (4 * main_for_body89_i_2544_reg));
end
always @(*) begin
		main_for_body89_arrayidx91 = (1'd0 + (4 * main_for_body89_i_2544_reg));
end
always @(*) begin
		main_for_body89_0 = (main_for_body89_i_2544_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_for_body89_0_reg <= main_for_body89_0;
	end
end
always @(*) begin
		main_for_body89_exitcond = (main_for_body89_0 == 32'd32);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_for_body89_exitcond_reg <= main_for_body89_exitcond;
	end
end
always @(*) begin
		main_for_end94_1 = main_entry_vla525_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_34)) begin
		main_for_end94_1_reg <= main_for_end94_1;
	end
end
always @(*) begin
		main_for_end94_sub_i = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_for_end94_xor2_i = (main_for_end94_sub_i ^ 32'd1);
end
always @(*) begin
	main_for_end94_rem = main_signed_modulus_32_0;
end
always @(*) begin
		main_for_end94_bit_select17 = main_for_end94_rem_width_extended[30:0];
end
always @(*) begin
		main_for_end94_bit_select15 = main_for_end94_rem_width_extended[29:0];
end
always @(*) begin
		main_for_end94_arrayidx96 = (1'd0 + (4 * main_for_end94_1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_34)) begin
		main_for_end94_arrayidx96_reg <= main_for_end94_arrayidx96;
	end
end
always @(*) begin
		main_for_end94_xor2_i16 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_33)) begin
		main_for_end94_xor2_i16_reg <= main_for_end94_xor2_i16;
	end
end
always @(*) begin
	main_for_end94_rem98 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_66)) begin
		main_for_end94_rem98_reg <= main_for_end94_rem98;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else150_209)) begin
		main_for_end94_rem98_reg <= main_if_else150_rem154;
	end
end
always @(*) begin
		main_for_end94_arrayidx99 = (1'd0 + (4 * main_for_end94_1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_34)) begin
		main_for_end94_arrayidx99_reg <= main_for_end94_arrayidx99;
	end
end
always @(*) begin
		main_for_end94_add100 = (main_NodeBlock9_seed_0_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_33)) begin
		main_for_end94_add100_reg <= main_for_end94_add100;
	end
end
always @(*) begin
		main_for_end94_bit_concat18 = {main_for_end94_bit_select17[30:0], main_for_end94_bit_concat18_bit_select_operand_2};
end
always @(*) begin
		main_for_end94_bit_concat16 = {main_for_end94_bit_select15[29:0], main_for_end94_bit_concat16_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_end94_sr_add7 = (main_for_end94_bit_concat18 + main_for_end94_bit_concat16);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_65)) begin
		main_for_end94_sr_add7_reg <= main_for_end94_sr_add7;
	end
end
always @(*) begin
		main_for_end94_arrayidx103_sum = (main_for_end94_sr_add7_reg + $signed({{28{main_for_end94_rem98[3]}},main_for_end94_rem98}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_66)) begin
		main_for_end94_arrayidx103_sum_reg <= main_for_end94_arrayidx103_sum;
	end
end
always @(*) begin
		main_for_end94_arrayidx104 = (1'd0 + (4 * main_for_end94_arrayidx103_sum_reg));
end
always @(*) begin
		main_sw_bb105_cmp106 = (main_NodeBlock9_i_0_reg == 32'd37);
end
always @(*) begin
		main_if_end_arrayidx107 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_2 = main_entry_vla525_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_71)) begin
		main_if_end_2_reg <= main_if_end_2;
	end
end
always @(*) begin
		main_if_end_arrayidx108 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_3 = main_entry_vla1526_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_71)) begin
		main_if_end_3_reg <= main_if_end_3;
	end
end
always @(*) begin
		main_if_end_arrayidx109 = (1'd0 + (4 * main_if_end_2));
end
always @(*) begin
		main_if_end_4 = main_entry_vla2527_out_a;
end
always @(*) begin
		main_if_end_arrayidx110 = (1'd0 + (4 * main_if_end_2));
end
always @(*) begin
		main_if_end_5 = main_entry_vla3528_out_a;
end
always @(*) begin
		main_if_end_arrayidx111 = (1'd0 + (4 * main_if_end_3));
end
always @(*) begin
		main_if_end_6 = main_entry_vla2527_out_b;
end
always @(*) begin
		main_if_end_arrayidx112 = (1'd0 + (4 * main_if_end_3));
end
always @(*) begin
		main_if_end_7 = main_entry_vla3528_out_b;
end
always @(*) begin
		main_if_end_cmp113 = (main_NodeBlock9_i_0_reg == 32'd0);
end
always @(*) begin
		main_if_end_1 = (main_if_end_cmp113 ? 32'd3 : 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_if_end_1_reg <= main_if_end_1;
	end
end
always @(*) begin
		main_sw_bb116_cmp117 = (main_NodeBlock9_pos_a_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end119_sub_i14 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end119_xor2_i15 = (main_if_end119_sub_i14 ^ 32'd1);
end
always @(*) begin
	main_if_end119_rem121 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end119_rem121_reg = main_if_end301_rem319_reg;
end
always @(*) begin
		main_if_end119_add122 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end119_74)) begin
		main_if_end119_add122_reg <= main_if_end119_add122;
	end
end
always @(*) begin
		main_if_end119_cmp123 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end119_74)) begin
		main_if_end119_cmp123_reg <= main_if_end119_cmp123;
	end
end
always @(*) begin
		main_if_end119_cmp125 = ($signed(main_if_end119_rem121) == 32'd0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end119_106)) begin
		main_if_end119_cmp125_reg <= main_if_end119_cmp125;
	end
end
always @(*) begin
		main_if_then126_xor2_i13 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then126_rem128 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then126_arrayidx129 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then126_8 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then126_110)) begin
		main_if_then126_8_reg <= main_if_then126_8;
	end
end
always @(*) begin
		main_if_then126_add130 = (main_if_then126_8_reg + $signed({{28{main_if_then126_rem128[3]}},main_if_then126_rem128}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then126_140)) begin
		main_if_then126_add130_reg <= main_if_then126_add130;
	end
end
always @(*) begin
		main_if_then126_xor2_i12 = (main_if_end119_add122_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		main_if_then126_xor2_i12_reg <= main_if_then126_xor2_i12;
	end
end
always @(*) begin
	main_if_then126_rem133 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then126_arrayidx134 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then126_9 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then126_110)) begin
		main_if_then126_9_reg <= main_if_then126_9;
	end
end
always @(*) begin
		main_if_then126_add135 = (main_if_then126_9_reg + $signed({{28{main_if_then126_rem133[3]}},main_if_then126_rem133}));
end
always @(*) begin
		main_if_then126_add136 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		main_if_then126_add136_reg <= main_if_then126_add136;
	end
end
always @(*) begin
		main_if_else137_cmp138 = ($signed(main_if_end119_rem121_reg) == 32'd1);
end
always @(*) begin
		main_if_then139_xor2_i10 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then139_rem141 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then139_arrayidx142 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then139_10 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then139_145)) begin
		main_if_then139_10_reg <= main_if_then139_10;
	end
end
always @(*) begin
		main_if_then139_add143 = (main_if_then139_10_reg + $signed({{28{main_if_then139_rem141[3]}},main_if_then139_rem141}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then139_175)) begin
		main_if_then139_add143_reg <= main_if_then139_add143;
	end
end
always @(*) begin
		main_if_then139_xor2_i9 = (main_if_end119_add122_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		main_if_then139_xor2_i9_reg <= main_if_then139_xor2_i9;
	end
end
always @(*) begin
	main_if_then139_rem146 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then139_arrayidx147 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then139_11 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then139_145)) begin
		main_if_then139_11_reg <= main_if_then139_11;
	end
end
always @(*) begin
		main_if_then139_add148 = (main_if_then139_11_reg + $signed({{28{main_if_then139_rem146[3]}},main_if_then139_rem146}));
end
always @(*) begin
		main_if_then139_add149 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		main_if_then139_add149_reg <= main_if_then139_add149;
	end
end
always @(*) begin
		main_if_else150_cmp151 = ($signed(main_if_end119_rem121_reg) == 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else150_177)) begin
		main_if_else150_cmp151_reg <= main_if_else150_cmp151;
	end
end
always @(*) begin
		main_if_else150_xor2_i7 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_else150_rem154 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_else150_rem154_reg = main_for_end94_rem98_reg;
end
always @(*) begin
		main_if_then152_arrayidx155 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then152_12 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then152_add156 = (main_if_then152_12 + $signed({{28{main_if_else150_rem154_reg[3]}},main_if_else150_rem154_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then152_212)) begin
		main_if_then152_add156_reg <= main_if_then152_add156;
	end
end
always @(*) begin
		main_if_then152_xor2_i6 = (main_if_end119_add122_reg ^ 32'd1);
end
always @(*) begin
	main_if_then152_rem159 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then152_arrayidx160 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then152_13 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then152_212)) begin
		main_if_then152_13_reg <= main_if_then152_13;
	end
end
always @(*) begin
		main_if_then152_add161 = (main_if_then152_13_reg + $signed({{28{main_if_then152_rem159[3]}},main_if_then152_rem159}));
end
always @(*) begin
		main_if_then152_add162 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		main_if_then152_add162_reg <= main_if_then152_add162;
	end
end
always @(*) begin
		main_if_else163_arrayidx166 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else163_14 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else163_add167 = (main_if_else163_14 + $signed({{28{main_if_else150_rem154_reg[3]}},main_if_else150_rem154_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else163_245)) begin
		main_if_else163_add167_reg <= main_if_else163_add167;
	end
end
always @(*) begin
		main_if_else163_xor2_i4 = (main_if_end119_add122_reg ^ 32'd1);
end
always @(*) begin
	main_if_else163_rem170 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_else163_arrayidx171 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else163_15 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else163_245)) begin
		main_if_else163_15_reg <= main_if_else163_15;
	end
end
always @(*) begin
		main_if_else163_add172 = (main_if_else163_15_reg + $signed({{28{main_if_else163_rem170[3]}},main_if_else163_rem170}));
end
always @(*) begin
		main_if_else163_add173 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		main_if_else163_add173_reg <= main_if_else163_add173;
	end
end
always @(*) begin
		main_if_then179_arrayidx180 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then179_16 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then179_add181 = (main_if_then179_16 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then179_arrayidx182 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then179_17 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then179_add183 = (main_if_then179_17 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_NodeBlock16_Pivot17 = ($signed($signed({{28{main_if_end119_rem121_reg[3]}},main_if_end119_rem121_reg})) < $signed({28'd0,main_NodeBlock16_Pivot17_op1_temp}));
end
always @(*) begin
		main_LeafBlock14_SwitchLeaf15 = ($signed(main_if_end119_rem121_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock12_SwitchLeaf13 = ($signed(main_if_end119_rem121_reg) == 32'd1);
end
always @(*) begin
		main_if_then186_arrayidx187 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then186_18 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then186_add188 = (main_if_then186_18 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then186_arrayidx189 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then186_19 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then186_add190 = (main_if_then186_19 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_then193_arrayidx194 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then193_20 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then193_add195 = (main_if_then193_20 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then193_arrayidx196 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then193_21 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then193_add197 = (main_if_then193_21 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_else198_arrayidx199 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else198_22 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else198_add200 = (main_if_else198_22 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_else198_arrayidx201 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else198_23 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_else198_add202 = (main_if_else198_23 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then126_141) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0 = main_if_then126_add130_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then139_176) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0 = main_if_then139_add143_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then152_242) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0 = main_if_then152_add156_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else163_275) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0 = main_if_else163_add167_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then179_279) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0 = main_if_then179_add181;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then186_285) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0 = main_if_then186_add188;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then193_288) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0 = main_if_then193_add195;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else198_291) & (fsm_stall == 1'd0))) */ begin
		main_if_end206_xi_0 = main_if_else198_add200;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then126_141) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then139_176) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then152_242) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else163_275) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then179_279) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then186_285) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then193_288) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else198_291) & (fsm_stall == 1'd0))) begin
		main_if_end206_xi_0_reg <= main_if_end206_xi_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then126_141) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0 = main_if_then126_add135;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then139_176) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0 = main_if_then139_add148;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then152_242) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0 = main_if_then152_add161;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else163_275) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0 = main_if_else163_add172;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then179_279) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0 = main_if_then179_add183;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then186_285) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0 = main_if_then186_add190;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then193_288) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0 = main_if_then193_add197;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else198_291) & (fsm_stall == 1'd0))) */ begin
		main_if_end206_xj_0 = main_if_else198_add202;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then126_141) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then139_176) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then152_242) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else163_275) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then179_279) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then186_285) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then193_288) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else198_291) & (fsm_stall == 1'd0))) begin
		main_if_end206_xj_0_reg <= main_if_end206_xj_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then126_141) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1 = main_if_then126_add136_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then139_176) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1 = main_if_then139_add149_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then152_242) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1 = main_if_then152_add162_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else163_275) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1 = main_if_else163_add173_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then179_279) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1 = main_if_end119_add122_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then186_285) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1 = main_if_end119_add122_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then193_288) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1 = main_if_end119_add122_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else198_291) & (fsm_stall == 1'd0))) */ begin
		main_if_end206_seed_1 = main_if_end119_add122_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then126_141) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then139_176) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then152_242) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else163_275) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then179_279) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then186_285) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then193_288) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else198_291) & (fsm_stall == 1'd0))) begin
		main_if_end206_seed_1_reg <= main_if_end206_seed_1;
	end
end
always @(*) begin
		main_if_end206_bit_select13 = main_if_end206_xi_0_reg[30:0];
end
always @(*) begin
		main_if_end206_bit_select11 = main_if_end206_xi_0_reg[29:0];
end
always @(*) begin
		main_if_end206_inc207 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end206_292)) begin
		main_if_end206_inc207_reg <= main_if_end206_inc207;
	end
end
always @(*) begin
		main_if_end206_bit_concat14 = {main_if_end206_bit_select13[30:0], main_if_end206_bit_concat14_bit_select_operand_2};
end
always @(*) begin
		main_if_end206_bit_concat12 = {main_if_end206_bit_select11[29:0], main_if_end206_bit_concat12_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end206_sr_add = (main_if_end206_bit_concat14 + main_if_end206_bit_concat12);
end
always @(*) begin
		main_if_end206_arrayidx208_sum = (main_if_end206_sr_add + main_if_end206_xj_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end206_292)) begin
		main_if_end206_arrayidx208_sum_reg <= main_if_end206_arrayidx208_sum;
	end
end
always @(*) begin
		main_if_end206_arrayidx209 = (1'd0 + (4 * main_if_end206_arrayidx208_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end206_293)) begin
		main_if_end206_arrayidx209_reg <= main_if_end206_arrayidx209;
	end
end
always @(*) begin
		main_if_end206_24 = main_entry_vla4529_out_b;
end
always @(*) begin
		main_if_end206_cmp210 = (main_if_end206_24 == $signed(-32'd1));
end
always @(*) begin
		main_if_end206_25 = (main_if_end206_xi_0_reg < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end206_292)) begin
		main_if_end206_25_reg <= main_if_end206_25;
	end
end
always @(*) begin
		main_if_end206_or_cond = (main_if_end206_cmp210 & main_if_end206_25_reg);
end
always @(*) begin
		main_if_end206_26 = (main_if_end206_xj_0_reg < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end206_292)) begin
		main_if_end206_26_reg <= main_if_end206_26;
	end
end
always @(*) begin
		main_if_end206_or_cond531 = (main_if_end206_or_cond & main_if_end206_26_reg);
end
always @(*) begin
		main_if_then218_arrayidx221 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_then218_arrayidx222 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_else223_cmp224 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else223_cmp224_op1_temp}));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then218_296) & (fsm_stall == 1'd0))) begin
		main_if_end228_pos_a_X_1 = main_if_end206_xi_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else223_297) & (fsm_stall == 1'd0)) & (main_if_else223_cmp224 == 1'd0))) */ begin
		main_if_end228_pos_a_X_1 = -32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then218_296) & (fsm_stall == 1'd0))) begin
		main_if_end228_pos_a_X_1_reg <= main_if_end228_pos_a_X_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else223_297) & (fsm_stall == 1'd0)) & (main_if_else223_cmp224 == 1'd0))) begin
		main_if_end228_pos_a_X_1_reg <= main_if_end228_pos_a_X_1;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then218_296) & (fsm_stall == 1'd0))) begin
		main_if_end228_pos_a_Y_1 = main_if_end206_xj_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else223_297) & (fsm_stall == 1'd0)) & (main_if_else223_cmp224 == 1'd0))) */ begin
		main_if_end228_pos_a_Y_1 = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then218_296) & (fsm_stall == 1'd0))) begin
		main_if_end228_pos_a_Y_1_reg <= main_if_end228_pos_a_Y_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else223_297) & (fsm_stall == 1'd0)) & (main_if_else223_cmp224 == 1'd0))) begin
		main_if_end228_pos_a_Y_1_reg <= main_if_end228_pos_a_Y_1;
	end
end
always @(*) begin
		main_if_end228_cmp229 = (main_if_end228_pos_a_X_1_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end228_532 = (main_if_end228_cmp229 ? 32'd2 : 32'd3);
end
always @(*) begin
		main_if_end228_inc207_1 = (main_if_end228_cmp229 ? main_if_end206_inc207_reg : 32'd0);
end
always @(*) begin
		main_sw_bb233_cmp234 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_then235_inc236 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(*) begin
		main_if_end237_sub_i1 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end237_xor2_i2 = (main_if_end237_sub_i1 ^ 32'd1);
end
always @(*) begin
	main_if_end237_rem239 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end237_rem239_reg = main_if_end301_rem319_reg;
end
always @(*) begin
		main_if_end237_add240 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end237_302)) begin
		main_if_end237_add240_reg <= main_if_end237_add240;
	end
end
always @(*) begin
		main_if_end237_Pivot26 = ($signed($signed({{28{main_if_end237_rem239[3]}},main_if_end237_rem239})) < $signed({29'd0,main_if_end237_Pivot26_op1_temp}));
end
always @(*) begin
		main_NodeBlock23_Pivot24 = ($signed($signed({{28{main_if_end237_rem239_reg[3]}},main_if_end237_rem239_reg})) < $signed({28'd0,main_NodeBlock23_Pivot24_op1_temp}));
end
always @(*) begin
		main_LeafBlock21_SwitchLeaf22 = ($signed(main_if_end237_rem239_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock19_SwitchLeaf20 = ($signed(main_if_end237_rem239_reg) == 32'd0);
end
always @(*) begin
		main_if_then242_arrayidx243 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then242_arrayidx245 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then249_arrayidx250 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then249_arrayidx252 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then256_arrayidx257 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then256_arrayidx259 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else261_arrayidx262 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else261_arrayidx264 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then242_338) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn_in = main_if_then242_arrayidx243;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then249_339) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn_in = main_if_then249_arrayidx250;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then256_340) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn_in = main_if_then256_arrayidx257;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else261_341) & (fsm_stall == 1'd0))) */ begin
		main_if_end268_pn_in = main_if_else261_arrayidx262;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then242_338) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn_in_reg <= main_if_end268_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then249_339) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn_in_reg <= main_if_end268_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then256_340) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn_in_reg <= main_if_end268_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else261_341) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn_in_reg <= main_if_end268_pn_in;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then242_338) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn530_in = main_if_then242_arrayidx245;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then249_339) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn530_in = main_if_then249_arrayidx252;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then256_340) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn530_in = main_if_then256_arrayidx259;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else261_341) & (fsm_stall == 1'd0))) */ begin
		main_if_end268_pn530_in = main_if_else261_arrayidx264;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then242_338) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn530_in_reg <= main_if_end268_pn530_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then249_339) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn530_in_reg <= main_if_end268_pn530_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then256_340) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn530_in_reg <= main_if_end268_pn530_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else261_341) & (fsm_stall == 1'd0))) begin
		main_if_end268_pn530_in_reg <= main_if_end268_pn530_in;
	end
end
always @(*) begin
		main_if_end268_pn530 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_end268_pn = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_end268_xj_1 = (main_if_end268_pn530 + main_NodeBlock9_pos_a_Y_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end268_344)) begin
		main_if_end268_xj_1_reg <= main_if_end268_xj_1;
	end
end
always @(*) begin
		main_if_end268_xi_1 = (main_if_end268_pn + main_NodeBlock9_pos_a_X_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end268_344)) begin
		main_if_end268_xi_1_reg <= main_if_end268_xi_1;
	end
end
always @(*) begin
		main_if_end268_bit_select9 = main_if_end268_xi_1[30:0];
end
always @(*) begin
		main_if_end268_bit_select7 = main_if_end268_xi_1[29:0];
end
always @(*) begin
		main_if_end268_bit_concat10 = {main_if_end268_bit_select9[30:0], main_if_end268_bit_concat10_bit_select_operand_2};
end
always @(*) begin
		main_if_end268_bit_concat8 = {main_if_end268_bit_select7[29:0], main_if_end268_bit_concat8_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end268_sr_add12 = (main_if_end268_bit_concat10 + main_if_end268_bit_concat8);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end268_344)) begin
		main_if_end268_sr_add12_reg <= main_if_end268_sr_add12;
	end
end
always @(*) begin
		main_if_end268_arrayidx270_sum = (main_if_end268_sr_add12_reg + main_if_end268_xj_1_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end268_345)) begin
		main_if_end268_arrayidx270_sum_reg <= main_if_end268_arrayidx270_sum;
	end
end
always @(*) begin
		main_if_end268_arrayidx271 = (1'd0 + (4 * main_if_end268_arrayidx270_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end268_346)) begin
		main_if_end268_arrayidx271_reg <= main_if_end268_arrayidx271;
	end
end
always @(*) begin
		main_if_end268_27 = main_entry_vla4529_out_a;
end
always @(*) begin
		main_if_end268_cmp272 = (main_if_end268_27 == $signed(-32'd1));
end
always @(*) begin
		main_if_end268_28 = (main_if_end268_xi_1 < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end268_344)) begin
		main_if_end268_28_reg <= main_if_end268_28;
	end
end
always @(*) begin
		main_if_end268_or_cond533 = (main_if_end268_cmp272 & main_if_end268_28_reg);
end
always @(*) begin
		main_if_end268_29 = (main_if_end268_xj_1 < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end268_344)) begin
		main_if_end268_29_reg <= main_if_end268_29;
	end
end
always @(*) begin
		main_if_end268_or_cond534 = (main_if_end268_or_cond533 & main_if_end268_29_reg);
end
always @(*) begin
		main_if_then281_arrayidx284 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then281_arrayidx285 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then281_inc286 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_if_then281_inc286_reg <= main_if_then281_inc286;
	end
end
always @(*) begin
		main_if_else287_inc269 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(*) begin
		main_if_else287_cmp288 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else287_cmp288_op1_temp}));
end
always @(*) begin
		main_sw_bb298_cmp299 = (main_NodeBlock9_i_0_reg == 32'd37);
end
always @(*) begin
		main_if_end301_arrayidx302 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end301_30 = main_entry_vla525_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_354)) begin
		main_if_end301_30_reg <= main_if_end301_30;
	end
end
always @(*) begin
		main_if_end301_arrayidx303 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end301_31 = main_entry_vla1526_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_354)) begin
		main_if_end301_31_reg <= main_if_end301_31;
	end
end
always @(*) begin
		main_if_end301_arrayidx304 = (1'd0 + (4 * main_if_end301_30));
end
always @(*) begin
		main_if_end301_32 = main_entry_vla2527_out_a;
end
always @(*) begin
		main_if_end301_arrayidx305 = (1'd0 + (4 * main_if_end301_31));
end
always @(*) begin
		main_if_end301_33 = main_entry_vla2527_out_b;
end
always @(*) begin
		main_if_end301_sub = (main_if_end301_32 - main_if_end301_33);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_355)) begin
		main_if_end301_sub_reg <= main_if_end301_sub;
	end
end
always @(*) begin
		main_if_end301_bit_select6 = main_if_end301_sub[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_355)) begin
		main_if_end301_bit_select6_reg <= main_if_end301_bit_select6;
	end
end
always @(*) begin
		main_if_end301_mul = (32'd0 - main_if_end301_sub);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_355)) begin
		main_if_end301_mul_reg <= main_if_end301_mul;
	end
end
always @(*) begin
		main_if_end301_mul_sub = (main_if_end301_bit_select6_reg ? main_if_end301_mul_reg : main_if_end301_sub_reg);
end
always @(*) begin
		main_if_end301_arrayidx309 = (1'd0 + (4 * main_if_end301_30));
end
always @(*) begin
		main_if_end301_34 = main_entry_vla3528_out_a;
end
always @(*) begin
		main_if_end301_arrayidx310 = (1'd0 + (4 * main_if_end301_31));
end
always @(*) begin
		main_if_end301_35 = main_entry_vla3528_out_b;
end
always @(*) begin
		main_if_end301_sub311 = (main_if_end301_34 - main_if_end301_35);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_355)) begin
		main_if_end301_sub311_reg <= main_if_end301_sub311;
	end
end
always @(*) begin
		main_if_end301_bit_select5 = main_if_end301_sub311[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_355)) begin
		main_if_end301_bit_select5_reg <= main_if_end301_bit_select5;
	end
end
always @(*) begin
		main_if_end301_mul314 = (32'd0 - main_if_end301_sub311);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_355)) begin
		main_if_end301_mul314_reg <= main_if_end301_mul314;
	end
end
always @(*) begin
		main_if_end301_diff_pos_y_0 = (main_if_end301_bit_select5_reg ? main_if_end301_mul314_reg : main_if_end301_sub311_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_356)) begin
		main_if_end301_diff_pos_y_0_reg <= main_if_end301_diff_pos_y_0;
	end
end
always @(*) begin
		main_if_end301_add316 = (main_NodeBlock9_sum_mesh_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_353)) begin
		main_if_end301_add316_reg <= main_if_end301_add316;
	end
end
always @(*) begin
		main_if_end301_newEarly_add318 = (main_if_end301_mul_sub + main_if_end301_diff_pos_y_0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_356)) begin
		main_if_end301_newEarly_add318_reg <= main_if_end301_newEarly_add318;
	end
end
always @(*) begin
		main_if_end301_newCurOp_add318 = (main_if_end301_add316_reg + main_if_end301_newEarly_add318_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_357)) begin
		main_if_end301_newCurOp_add318_reg <= main_if_end301_newCurOp_add318;
	end
end
always @(*) begin
	main_if_end301_div = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end301_rem319 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_388)) begin
		main_if_end301_rem319_reg <= main_if_end301_rem319;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end301_389)) begin
		main_if_end301_rem319_reg <= main_if_end301_rem322;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_65)) begin
		main_if_end301_rem319_reg <= main_for_end94_rem;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end119_106)) begin
		main_if_end301_rem319_reg <= main_if_end119_rem121;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then126_140)) begin
		main_if_end301_rem319_reg <= main_if_then126_rem128;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then126_141)) begin
		main_if_end301_rem319_reg <= main_if_then126_rem133;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_175)) begin
		main_if_end301_rem319_reg <= main_if_then139_rem141;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_176)) begin
		main_if_end301_rem319_reg <= main_if_then139_rem146;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then152_242)) begin
		main_if_end301_rem319_reg <= main_if_then152_rem159;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else163_275)) begin
		main_if_end301_rem319_reg <= main_if_else163_rem170;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end237_334)) begin
		main_if_end301_rem319_reg <= main_if_end237_rem239;
	end
end
always @(*) begin
	main_if_end301_div321 = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end301_rem322 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_end301_add323 = (main_NodeBlock9_sum_1hop_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_353)) begin
		main_if_end301_add323_reg <= main_if_end301_add323;
	end
end
always @(*) begin
		main_if_end301_newEarly_add324 = ($signed({{1{main_if_end301_div[30]}},main_if_end301_div}) + $signed({{28{main_if_end301_rem319[3]}},main_if_end301_rem319}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_388)) begin
		main_if_end301_newEarly_add324_reg <= main_if_end301_newEarly_add324;
	end
end
always @(*) begin
		main_if_end301_newEarly_sub325 = (main_if_end301_add323_reg + $signed({{1{main_if_end301_div321[30]}},main_if_end301_div321}));
end
always @(*) begin
		main_if_end301_newEarly_add326 = (main_if_end301_newEarly_add324_reg + $signed({{28{main_if_end301_rem322[3]}},main_if_end301_rem322}));
end
always @(*) begin
		main_if_end301_newCurOp_add326 = (main_if_end301_newEarly_sub325 + main_if_end301_newEarly_add326);
end
always @(*) begin
		main_if_end301_inc327 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_353)) begin
		main_if_end301_inc327_reg <= main_if_end301_inc327;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond331_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond331_preheader_i_3541 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_cond331_preheader_394) & (fsm_stall == 1'd0)) & (main_for_cond331_preheader_exitcond5_reg == 1'd0))) */ begin
		main_for_cond331_preheader_i_3541 = main_for_cond331_preheader_46_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond331_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond331_preheader_i_3541_reg <= main_for_cond331_preheader_i_3541;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_cond331_preheader_394) & (fsm_stall == 1'd0)) & (main_for_cond331_preheader_exitcond5_reg == 1'd0))) begin
		main_for_cond331_preheader_i_3541_reg <= main_for_cond331_preheader_i_3541;
	end
end
always @(*) begin
		main_for_cond331_preheader_bit_select3 = main_for_cond331_preheader_i_3541_reg_width_extended[30:0];
end
always @(*) begin
		main_for_cond331_preheader_bit_select1 = main_for_cond331_preheader_i_3541_reg_width_extended[29:0];
end
always @(*) begin
		main_for_cond331_preheader_bit_concat4 = {main_for_cond331_preheader_bit_select3[30:0], main_for_cond331_preheader_bit_concat4_bit_select_operand_2};
end
always @(*) begin
		main_for_cond331_preheader_bit_concat2 = {main_for_cond331_preheader_bit_select1[29:0], main_for_cond331_preheader_bit_concat2_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_cond331_preheader_sr_add15 = (main_for_cond331_preheader_bit_concat4 + main_for_cond331_preheader_bit_concat2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_sr_add15_reg <= main_for_cond331_preheader_sr_add15;
	end
end
always @(*) begin
		main_for_cond331_preheader_bit_select = main_for_cond331_preheader_sr_add15[31:1];
end
always @(*) begin
		main_for_cond331_preheader_arrayidx335 = (1'd0 + (4 * main_for_cond331_preheader_sr_add15_reg));
end
always @(*) begin
		main_for_cond331_preheader_bit_concat = {main_for_cond331_preheader_bit_select[30:0], main_for_cond331_preheader_bit_concat_bit_select_operand_2};
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_bit_concat_reg <= main_for_cond331_preheader_bit_concat;
	end
end
always @(*) begin
		main_for_cond331_preheader_arrayidx335_1 = (1'd0 + (4 * main_for_cond331_preheader_bit_concat_reg));
end
always @(*) begin
		main_for_cond331_preheader_36 = (main_for_cond331_preheader_sr_add15 + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_36_reg <= main_for_cond331_preheader_36;
	end
end
always @(*) begin
		main_for_cond331_preheader_arrayidx335_2 = (1'd0 + (4 * main_for_cond331_preheader_36_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_391)) begin
		main_for_cond331_preheader_arrayidx335_2_reg <= main_for_cond331_preheader_arrayidx335_2;
	end
end
always @(*) begin
		main_for_cond331_preheader_37 = (main_for_cond331_preheader_sr_add15 + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_37_reg <= main_for_cond331_preheader_37;
	end
end
always @(*) begin
		main_for_cond331_preheader_arrayidx335_3 = (1'd0 + (4 * main_for_cond331_preheader_37_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_391)) begin
		main_for_cond331_preheader_arrayidx335_3_reg <= main_for_cond331_preheader_arrayidx335_3;
	end
end
always @(*) begin
		main_for_cond331_preheader_38 = (main_for_cond331_preheader_sr_add15 + 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_38_reg <= main_for_cond331_preheader_38;
	end
end
always @(*) begin
		main_for_cond331_preheader_arrayidx335_4 = (1'd0 + (4 * main_for_cond331_preheader_38_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_391)) begin
		main_for_cond331_preheader_arrayidx335_4_reg <= main_for_cond331_preheader_arrayidx335_4;
	end
end
always @(*) begin
		main_for_cond331_preheader_39 = (main_for_cond331_preheader_sr_add15 + 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_39_reg <= main_for_cond331_preheader_39;
	end
end
always @(*) begin
		main_for_cond331_preheader_arrayidx335_5 = (1'd0 + (4 * main_for_cond331_preheader_39_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_391)) begin
		main_for_cond331_preheader_arrayidx335_5_reg <= main_for_cond331_preheader_arrayidx335_5;
	end
end
always @(*) begin
		main_for_cond331_preheader_40 = main_entry_vla4529_out_a;
end
always @(*) begin
		main_for_cond331_preheader_41 = main_entry_vla4529_out_b;
end
always @(*) begin
		main_for_cond331_preheader_42 = main_entry_vla4529_out_a;
end
always @(*) begin
		main_for_cond331_preheader_43 = main_entry_vla4529_out_b;
end
always @(*) begin
		main_for_cond331_preheader_44 = main_entry_vla4529_out_a;
end
always @(*) begin
		main_for_cond331_preheader_45 = main_entry_vla4529_out_b;
end
always @(*) begin
		main_for_cond331_preheader_46 = ({1'd0,main_for_cond331_preheader_i_3541_reg} + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_46_reg <= main_for_cond331_preheader_46;
	end
end
always @(*) begin
		main_for_cond331_preheader_exitcond5 = (main_for_cond331_preheader_46 == 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_390)) begin
		main_for_cond331_preheader_exitcond5_reg <= main_for_cond331_preheader_exitcond5;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then225_298) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then289_351) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_for_end343_395) & (fsm_stall == 1'd0))) */ begin
		main_cleanup_retval_0 = 32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then225_298) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then289_351) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end343_395) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
end
always @(*) begin
	main_entry_vla525_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla525_address_a = (main_entry_vla525_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx20_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx24_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx28_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx32_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx36_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx40_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx44_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx48_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx52_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx56_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx60_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx64_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx68_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx72_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla525_address_a = (main_entry_arrayidx76_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_33)) begin
		main_entry_vla525_address_a = (main_entry_vla525_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end301_353)) begin
		main_entry_vla525_address_a = (main_if_end301_arrayidx302 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla525_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla525_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla525_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla525_in_a = 32'd30;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla525_in_a = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla525_in_a = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla525_in_a = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla525_in_a = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla525_in_a = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla525_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla525_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla525_in_a = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla525_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla525_in_a = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla525_in_a = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla525_in_a = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla525_in_a = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla525_in_a = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla525_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla525_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla525_in_a = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla525_in_a = 32'd17;
	end
end
always @(*) begin
	main_entry_vla525_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx22_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx26_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx30_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx34_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx38_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx42_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx46_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx50_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx54_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx58_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx62_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx66_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx70_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla525_address_b = (main_entry_arrayidx74_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_entry_vla525_address_b = (main_if_end_arrayidx107 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla525_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla525_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla525_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla525_in_b = 32'd28;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla525_in_b = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla525_in_b = 32'd27;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla525_in_b = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla525_in_b = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla525_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla525_in_b = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla525_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla525_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla525_in_b = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla525_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla525_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla525_in_b = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla525_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla525_in_b = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla525_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla525_in_b = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla525_in_b = 32'd15;
	end
end
always @(*) begin
	main_entry_vla1526_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1526_address_a = (main_entry_vla1526_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx21_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx25_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx29_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx33_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx37_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx41_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx45_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx49_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx53_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx57_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx61_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx65_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx69_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx73_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1526_address_a = (main_entry_arrayidx77_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end301_353)) begin
		main_entry_vla1526_address_a = (main_if_end301_arrayidx303 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1526_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1526_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1526_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1526_in_a = 32'd31;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1526_in_a = 32'd30;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1526_in_a = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1526_in_a = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1526_in_a = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1526_in_a = 32'd27;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1526_in_a = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1526_in_a = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1526_in_a = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1526_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1526_in_a = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1526_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1526_in_a = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1526_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1526_in_a = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1526_in_a = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1526_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1526_in_a = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1526_in_a = 32'd21;
	end
end
always @(*) begin
	main_entry_vla1526_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx19_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx23_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx27_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx31_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx35_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx39_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx43_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx47_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx51_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx55_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx59_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx63_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx67_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx71_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1526_address_b = (main_entry_arrayidx75_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_entry_vla1526_address_b = (main_if_end_arrayidx108 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1526_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1526_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1526_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1526_in_b = 32'd30;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1526_in_b = 32'd28;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1526_in_b = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1526_in_b = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1526_in_b = 32'd27;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1526_in_b = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1526_in_b = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1526_in_b = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1526_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1526_in_b = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1526_in_b = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1526_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1526_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1526_in_b = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1526_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1526_in_b = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1526_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1526_in_b = 32'd22;
	end
end
always @(*) begin
	main_entry_vla2527_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_entry_vla2527_address_a = (main_for_body89_arrayidx90 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_65)) begin
		main_entry_vla2527_address_a = (main_for_end94_arrayidx96_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_71)) begin
		main_entry_vla2527_address_a = (main_if_end_arrayidx109 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end301_354)) begin
		main_entry_vla2527_address_a = (main_if_end301_arrayidx304 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2527_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_entry_vla2527_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_65)) begin
		main_entry_vla2527_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2527_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_entry_vla2527_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_65)) begin
		main_entry_vla2527_in_a = {{28{main_for_end94_rem[3]}},main_for_end94_rem};
	end
end
always @(*) begin
	main_entry_vla2527_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_71)) begin
		main_entry_vla2527_address_b = (main_if_end_arrayidx111 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla2527_address_b = (main_if_then218_arrayidx221 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla2527_address_b = (main_if_then281_arrayidx284 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end301_354)) begin
		main_entry_vla2527_address_b = (main_if_end301_arrayidx305 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2527_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla2527_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla2527_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2527_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla2527_in_b = main_if_end206_xi_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla2527_in_b = main_if_end268_xi_1_reg;
	end
end
always @(*) begin
	main_entry_vla3528_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_entry_vla3528_address_a = (main_for_body89_arrayidx91 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_66)) begin
		main_entry_vla3528_address_a = (main_for_end94_arrayidx99_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_71)) begin
		main_entry_vla3528_address_a = (main_if_end_arrayidx110 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end301_354)) begin
		main_entry_vla3528_address_a = (main_if_end301_arrayidx309 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3528_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_entry_vla3528_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_66)) begin
		main_entry_vla3528_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3528_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body89_31)) begin
		main_entry_vla3528_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_66)) begin
		main_entry_vla3528_in_a = {{28{main_for_end94_rem98[3]}},main_for_end94_rem98};
	end
end
always @(*) begin
	main_entry_vla3528_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_71)) begin
		main_entry_vla3528_address_b = (main_if_end_arrayidx112 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla3528_address_b = (main_if_then218_arrayidx222 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla3528_address_b = (main_if_then281_arrayidx285 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end301_354)) begin
		main_entry_vla3528_address_b = (main_if_end301_arrayidx310 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3528_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla3528_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla3528_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3528_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla3528_in_b = main_if_end206_xj_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla3528_in_b = main_if_end268_xj_1_reg;
	end
end
always @(*) begin
	main_entry_vla4529_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_1551_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_2_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_4_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_2552_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_2_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_4_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_3553_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_2_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_4_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_4554_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_2_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_4_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_5555_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_2_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4529_address_a = (main_entry_arrayidx83_4_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_67)) begin
		main_entry_vla4529_address_a = (main_for_end94_arrayidx104 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end268_346)) begin
		main_entry_vla4529_address_a = (main_if_end268_arrayidx271 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla4529_address_a = (main_if_end268_arrayidx271_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_391)) begin
		main_entry_vla4529_address_a = (main_for_cond331_preheader_arrayidx335 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_392)) begin
		main_entry_vla4529_address_a = (main_for_cond331_preheader_arrayidx335_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_393)) begin
		main_entry_vla4529_address_a = (main_for_cond331_preheader_arrayidx335_4_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4529_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_67)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla4529_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4529_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4529_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end94_67)) begin
		main_entry_vla4529_in_a = main_for_end94_1_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then281_348)) begin
		main_entry_vla4529_in_a = main_NodeBlock9_b_0_reg;
	end
end
always @(*) begin
	main_entry_vla4529_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_1_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_3_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_5_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_1_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_3_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_5_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_1_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_3_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_5_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_1_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_3_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_5_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_1_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_3_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4529_address_b = (main_entry_arrayidx83_5_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end206_293)) begin
		main_entry_vla4529_address_b = (main_if_end206_arrayidx209 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla4529_address_b = (main_if_end206_arrayidx209_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_391)) begin
		main_entry_vla4529_address_b = (main_for_cond331_preheader_arrayidx335_1 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_392)) begin
		main_entry_vla4529_address_b = (main_for_cond331_preheader_arrayidx335_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond331_preheader_393)) begin
		main_entry_vla4529_address_b = (main_for_cond331_preheader_arrayidx335_5_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4529_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla4529_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4529_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4529_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then218_295)) begin
		main_entry_vla4529_in_b = main_NodeBlock9_a_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_356)) begin
		main_signed_divide_32_0_op0 = main_if_end301_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end301_357)) */ begin
		main_signed_divide_32_0_op0 = main_if_end301_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end301_356)) begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end301_357)) */ begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_divide_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_divide_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_divide_32_0_inst_clken = divide_main_if_end301_div_en;
end
always @(*) begin
	main_signed_divide_32_0_inst_numer = main_signed_divide_32_0_op0;
end
always @(*) begin
	main_signed_divide_32_0_inst_denom = main_signed_divide_32_0_op1;
end
always @(*) begin
	divide_main_if_end301_div_temp_out = main_signed_divide_32_0_inst_quotient;
end
always @(*) begin
	divide_main_if_end301_div_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end301_div_out = divide_main_if_end301_div_temp_out;
end
always @(*) begin
	main_signed_divide_32_0 = divide_main_if_end301_div_out;
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_33)) begin
		main_signed_modulus_32_0_op0 = main_for_end94_xor2_i;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end94_34)) begin
		main_signed_modulus_32_0_op0 = main_for_end94_xor2_i16_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end119_74)) begin
		main_signed_modulus_32_0_op0 = main_if_end119_xor2_i15;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		main_signed_modulus_32_0_op0 = main_if_then126_xor2_i13;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then126_109)) begin
		main_signed_modulus_32_0_op0 = main_if_then126_xor2_i12_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		main_signed_modulus_32_0_op0 = main_if_then139_xor2_i10;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then139_144)) begin
		main_signed_modulus_32_0_op0 = main_if_then139_xor2_i9_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else150_177)) begin
		main_signed_modulus_32_0_op0 = main_if_else150_xor2_i7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		main_signed_modulus_32_0_op0 = main_if_then152_xor2_i6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		main_signed_modulus_32_0_op0 = main_if_else163_xor2_i4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end237_302)) begin
		main_signed_modulus_32_0_op0 = main_if_end237_xor2_i2;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end301_356)) begin
		main_signed_modulus_32_0_op0 = main_if_end301_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end301_357)) */ begin
		main_signed_modulus_32_0_op0 = main_if_end301_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end94_33)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end94_34)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end119_74)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then126_109)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then139_144)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else150_177)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end237_302)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end301_356)) begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end301_357)) */ begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_modulus_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_modulus_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_modulus_32_0_inst_clken = divide_main_if_end301_rem319_en;
end
always @(*) begin
	main_signed_modulus_32_0_inst_numer = main_signed_modulus_32_0_op0;
end
always @(*) begin
	main_signed_modulus_32_0_inst_denom = main_signed_modulus_32_0_op1;
end
always @(*) begin
	divide_main_if_end301_rem319_temp_out = main_signed_modulus_32_0_inst_remain;
end
always @(*) begin
	divide_main_if_end301_rem319_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end301_rem319_out = divide_main_if_end301_rem319_temp_out;
end
always @(*) begin
	main_signed_modulus_32_0 = divide_main_if_end301_rem319_out;
end
assign main_NodeBlock9_Pivot10_op1_temp = 32'd3;
assign main_NodeBlock7_Pivot8_op1_temp = 32'd4;
assign main_NodeBlock5_Pivot6_op1_temp = 32'd5;
assign main_NodeBlock1_Pivot2_op1_temp = 32'd1;
assign main_NodeBlock_Pivot_op1_temp = 32'd2;
always @(*) begin
	main_for_end94_rem_width_extended = {{27{main_for_end94_rem[3]}},main_for_end94_rem};
end
assign main_for_end94_bit_concat18_bit_select_operand_2 = 1'd0;
assign main_for_end94_bit_concat16_bit_select_operand_2 = 2'd0;
assign main_NodeBlock16_Pivot17_op1_temp = 32'd2;
assign main_if_end206_bit_concat14_bit_select_operand_2 = 1'd0;
assign main_if_end206_bit_concat12_bit_select_operand_2 = 2'd0;
assign main_if_else223_cmp224_op1_temp = 32'd60;
assign main_if_end237_Pivot26_op1_temp = 32'd1;
assign main_NodeBlock23_Pivot24_op1_temp = 32'd2;
assign main_if_end268_bit_concat10_bit_select_operand_2 = 1'd0;
assign main_if_end268_bit_concat8_bit_select_operand_2 = 2'd0;
assign main_if_else287_cmp288_op1_temp = 32'd60;
always @(*) begin
	main_for_cond331_preheader_i_3541_reg_width_extended = {28'd0,main_for_cond331_preheader_i_3541_reg};
end
assign main_for_cond331_preheader_bit_concat4_bit_select_operand_2 = 1'd0;
assign main_for_cond331_preheader_bit_concat2_bit_select_operand_2 = 2'd0;
assign main_for_cond331_preheader_bit_concat_bit_select_operand_2 = 1'd1;
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		finish <= 1'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_396)) begin
		finish <= (fsm_stall == 1'd0);
	end
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		return_val <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_396)) begin
		return_val <= main_cleanup_retval_0_reg;
	end
end
assign memory_controller_1_write_enable_a = 1'd0;
assign memory_controller_1_in_a = 64'd0;
always @(*) begin
	memory_controller_1_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then179_277)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then186_283)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then193_286)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else198_289)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end268_342)) begin
		memory_controller_1_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_1_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		memory_controller_1_address_a = main_if_then126_arrayidx129;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		memory_controller_1_address_a = main_if_then139_arrayidx142;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		memory_controller_1_address_a = main_if_then152_arrayidx155;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		memory_controller_1_address_a = main_if_else163_arrayidx166;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then179_277)) begin
		memory_controller_1_address_a = main_if_then179_arrayidx180;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then186_283)) begin
		memory_controller_1_address_a = main_if_then186_arrayidx187;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then193_286)) begin
		memory_controller_1_address_a = main_if_then193_arrayidx194;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else198_289)) begin
		memory_controller_1_address_a = main_if_else198_arrayidx199;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end268_342)) begin
		memory_controller_1_address_a = main_if_end268_pn_in_reg;
	end
end
always @(*) begin
	memory_controller_1_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then179_277)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then186_283)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then193_286)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else198_289)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end268_342)) begin
		memory_controller_1_size_a = 2'd2;
	end
end
assign memory_controller_1_write_enable_b = 1'd0;
assign memory_controller_1_in_b = 64'd0;
assign memory_controller_1_enable_b = 1'd0;
assign memory_controller_1_address_b = 0;
assign memory_controller_1_size_b = 2'd0;
assign memory_controller_0_write_enable_a = 1'd0;
assign memory_controller_0_in_a = 64'd0;
always @(*) begin
	memory_controller_0_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then179_277)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then186_283)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then193_286)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else198_289)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end268_342)) begin
		memory_controller_0_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_0_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		memory_controller_0_address_a = main_if_then126_arrayidx134;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		memory_controller_0_address_a = main_if_then139_arrayidx147;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		memory_controller_0_address_a = main_if_then152_arrayidx160;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		memory_controller_0_address_a = main_if_else163_arrayidx171;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then179_277)) begin
		memory_controller_0_address_a = main_if_then179_arrayidx182;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then186_283)) begin
		memory_controller_0_address_a = main_if_then186_arrayidx189;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then193_286)) begin
		memory_controller_0_address_a = main_if_then193_arrayidx196;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else198_289)) begin
		memory_controller_0_address_a = main_if_else198_arrayidx201;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end268_342)) begin
		memory_controller_0_address_a = main_if_end268_pn530_in_reg;
	end
end
always @(*) begin
	memory_controller_0_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then126_108)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then139_143)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then152_210)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else163_243)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then179_277)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then186_283)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then193_286)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else198_289)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end268_342)) begin
		memory_controller_0_size_a = 2'd2;
	end
end
assign memory_controller_0_write_enable_b = 1'd0;
assign memory_controller_0_in_b = 64'd0;
assign memory_controller_0_enable_b = 1'd0;
assign memory_controller_0_address_b = 0;
assign memory_controller_0_size_b = 2'd0;

endmodule
module ram_dual_port
(
	clk,
	clken,
	address_a,
	address_b,
	wren_a,
	data_a,
	byteena_a,
	wren_b,
	data_b,
	byteena_b,
	q_b,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
wire [(width_b-1):0] q_b_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
input  wren_b;
input [(width_b-1):0] data_b;
input [width_be_b-1:0] byteena_b;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
	.address_b (address_b),
    .addressstall_b (1'd0),
    .rden_b (clken),
    .q_b (q_b),
    .wren_a (wren_a),
    .data_a (data_a),
    .wren_b (wren_b),
    .data_b (data_b),
    .byteena_b (byteena_b),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.width_byteena_b = width_be_b,
    altsyncram_component.operation_mode = "BIDIR_DUAL_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_b = "BYPASS",
    altsyncram_component.clock_enable_output_b = "BYPASS",
    altsyncram_component.outdata_aclr_b = "NONE",
    altsyncram_component.outdata_reg_b = output_registered,
    altsyncram_component.numwords_b = numwords_b,
    altsyncram_component.widthad_b = widthad_b,
    altsyncram_component.width_b = width_b,
    altsyncram_component.address_reg_b = "CLOCK0",
    altsyncram_component.byteena_reg_b = "CLOCK0",
    altsyncram_component.indata_reg_b = "CLOCK0",
    altsyncram_component.wrcontrol_wraddress_reg_b = "CLOCK0",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module rom_dual_port
(
	clk,
	clken,
	address_a,
	q_a,
	address_b,
	q_b
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = {`MEM_INIT_DIR, "UNUSED.mif"};
parameter  latency = 1;

input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
reg [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
reg [(width_b-1):0] q_b_wire;

(* ram_init_file = init_file *) reg [width_a-1:0] ram [numwords_a-1:0];

integer i;
/* synthesis translate_off */
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == {`MEM_INIT_DIR, "UNUSED.mif"})
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

localparam input_latency = ((latency - 1) >> 1);
localparam output_latency = (latency - 1) - input_latency;
integer j;

reg [(widthad_a-1):0] address_a_reg[input_latency:0];
reg [(widthad_b-1):0] address_b_reg[input_latency:0];

always @(*)
begin
  address_a_reg[0] = address_a;
  address_b_reg[0] = address_b;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < input_latency; j=j+1)
   begin
       address_a_reg[j+1] <= address_a_reg[j];
       address_b_reg[j+1] <= address_b_reg[j];
   end
end

always @ (posedge clk)
if (clken)
begin
    q_a_wire <= ram[address_a_reg[input_latency]];
end

always @ (posedge clk)
if (clken)
begin
    q_b_wire <= ram[address_b_reg[input_latency]];
end


reg [(width_a-1):0] q_a_reg[output_latency:0];

always @(*)
begin
   q_a_reg[0] <= q_a_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
   end
end

assign q_a = q_a_reg[output_latency];
reg [(width_b-1):0] q_b_reg[output_latency:0];

always @(*)
begin
   q_b_reg[0] <= q_b_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_b = q_b_reg[output_latency];

endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);




initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;
@(negedge clk);
start <= 0;
end

always@(posedge clk) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end


endmodule
