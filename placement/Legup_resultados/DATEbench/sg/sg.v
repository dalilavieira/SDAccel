// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Tue May  5 08:32:14 2020
// ----------------------------------------------------------------------------
`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 12
`define MEMORY_CONTROLLER_TAG_SIZE 9
// This directory contains the memory initialization files generated by LegUp.
// This relative path is used by ModelSim and FPGA synthesis tool.
`define MEM_INIT_DIR "../mem_init/"
// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX1 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcX1_a {`TAG_g_main_opcX1, 23'd0}
// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX2 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcX2_a {`TAG_g_main_opcX2, 23'd0}
// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
`define TAG_g_main_opcX3 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcX3_a {`TAG_g_main_opcX3, 23'd0}
// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY0 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcY0_a {`TAG_g_main_opcY0, 23'd0}
// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcY1_a {`TAG_g_main_opcY1, 23'd0}
// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY2 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcY2_a {`TAG_g_main_opcY2, 23'd0}
// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY3 `MEMORY_CONTROLLER_TAG_SIZE'd5
`define TAG_g_main_opcY3_a {`TAG_g_main_opcY3, 23'd0}

`timescale 1 ns / 1 ns
module top
(
	clk,
	reset,
	start,
	finish,
	return_val
);

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
reg  main_inst_clk;
reg  main_inst_reset;
reg  main_inst_start;
wire  main_inst_finish;
wire [31:0] main_inst_return_val;
wire  main_inst_memory_controller_1_write_enable_a;
wire [63:0] main_inst_memory_controller_1_in_a;
wire  main_inst_memory_controller_1_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_a;
wire [1:0] main_inst_memory_controller_1_size_a;
reg [63:0] main_inst_memory_controller_1_out_a;
wire  main_inst_memory_controller_1_write_enable_b;
wire [63:0] main_inst_memory_controller_1_in_b;
wire  main_inst_memory_controller_1_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_b;
wire [1:0] main_inst_memory_controller_1_size_b;
reg [63:0] main_inst_memory_controller_1_out_b;
wire  main_inst_memory_controller_0_write_enable_a;
wire [63:0] main_inst_memory_controller_0_in_a;
wire  main_inst_memory_controller_0_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_a;
wire [1:0] main_inst_memory_controller_0_size_a;
reg [63:0] main_inst_memory_controller_0_out_a;
wire  main_inst_memory_controller_0_write_enable_b;
wire [63:0] main_inst_memory_controller_0_in_b;
wire  main_inst_memory_controller_0_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_b;
wire [1:0] main_inst_memory_controller_0_size_b;
reg [63:0] main_inst_memory_controller_0_out_b;
reg  main_inst_finish_reg;
reg [31:0] main_inst_return_val_reg;
reg  memory_controller_1_inst_clk;
wire  memory_controller_1_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_a;
reg  memory_controller_1_inst_memory_controller_enable_a;
reg [1:0] memory_controller_1_inst_memory_controller_size_a;
reg  memory_controller_1_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_1_inst_memory_controller_in_a;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_b;
reg  memory_controller_1_inst_memory_controller_enable_b;
reg [1:0] memory_controller_1_inst_memory_controller_size_b;
reg  memory_controller_1_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_1_inst_memory_controller_in_b;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_b;
reg  memory_controller_0_inst_clk;
wire  memory_controller_0_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_a;
reg  memory_controller_0_inst_memory_controller_enable_a;
reg [1:0] memory_controller_0_inst_memory_controller_size_a;
reg  memory_controller_0_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_0_inst_memory_controller_in_a;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_b;
reg  memory_controller_0_inst_memory_controller_enable_b;
reg [1:0] memory_controller_0_inst_memory_controller_size_b;
reg  memory_controller_0_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_0_inst_memory_controller_in_b;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_b;


main main_inst (
	.clk (main_inst_clk),
	.reset (main_inst_reset),
	.start (main_inst_start),
	.finish (main_inst_finish),
	.return_val (main_inst_return_val),
	.memory_controller_1_write_enable_a (main_inst_memory_controller_1_write_enable_a),
	.memory_controller_1_in_a (main_inst_memory_controller_1_in_a),
	.memory_controller_1_enable_a (main_inst_memory_controller_1_enable_a),
	.memory_controller_1_address_a (main_inst_memory_controller_1_address_a),
	.memory_controller_1_size_a (main_inst_memory_controller_1_size_a),
	.memory_controller_1_out_a (main_inst_memory_controller_1_out_a),
	.memory_controller_1_write_enable_b (main_inst_memory_controller_1_write_enable_b),
	.memory_controller_1_in_b (main_inst_memory_controller_1_in_b),
	.memory_controller_1_enable_b (main_inst_memory_controller_1_enable_b),
	.memory_controller_1_address_b (main_inst_memory_controller_1_address_b),
	.memory_controller_1_size_b (main_inst_memory_controller_1_size_b),
	.memory_controller_1_out_b (main_inst_memory_controller_1_out_b),
	.memory_controller_0_write_enable_a (main_inst_memory_controller_0_write_enable_a),
	.memory_controller_0_in_a (main_inst_memory_controller_0_in_a),
	.memory_controller_0_enable_a (main_inst_memory_controller_0_enable_a),
	.memory_controller_0_address_a (main_inst_memory_controller_0_address_a),
	.memory_controller_0_size_a (main_inst_memory_controller_0_size_a),
	.memory_controller_0_out_a (main_inst_memory_controller_0_out_a),
	.memory_controller_0_write_enable_b (main_inst_memory_controller_0_write_enable_b),
	.memory_controller_0_in_b (main_inst_memory_controller_0_in_b),
	.memory_controller_0_enable_b (main_inst_memory_controller_0_enable_b),
	.memory_controller_0_address_b (main_inst_memory_controller_0_address_b),
	.memory_controller_0_size_b (main_inst_memory_controller_0_size_b),
	.memory_controller_0_out_b (main_inst_memory_controller_0_out_b)
);



memory_controller_1 memory_controller_1_inst (
	.clk (memory_controller_1_inst_clk),
	.memory_controller_waitrequest (memory_controller_1_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_1_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_1_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_1_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_1_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_1_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_1_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_1_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_1_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_1_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_1_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_1_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_1_inst_memory_controller_out_reg_b)
);



memory_controller_0 memory_controller_0_inst (
	.clk (memory_controller_0_inst_clk),
	.memory_controller_waitrequest (memory_controller_0_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_0_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_0_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_0_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_0_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_0_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_0_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_0_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_0_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_0_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_0_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_0_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_0_inst_memory_controller_out_reg_b)
);



always @(*) begin
	main_inst_clk = clk;
end
always @(*) begin
	main_inst_reset = reset;
end
always @(*) begin
	main_inst_start = start;
end
always @(*) begin
	main_inst_memory_controller_1_out_a = memory_controller_1_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_1_out_b = memory_controller_1_inst_memory_controller_out_reg_b;
end
always @(*) begin
	main_inst_memory_controller_0_out_a = memory_controller_0_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_0_out_b = memory_controller_0_inst_memory_controller_out_reg_b;
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_finish_reg <= 1'd0;
	end
	if (main_inst_finish) begin
		main_inst_finish_reg <= 1'd1;
	end
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_return_val_reg <= 0;
	end
	if (main_inst_finish) begin
		main_inst_return_val_reg <= main_inst_return_val;
	end
end
always @(*) begin
	memory_controller_1_inst_clk = clk;
end
assign memory_controller_1_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_1_inst_memory_controller_address_a = main_inst_memory_controller_1_address_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_a = main_inst_memory_controller_1_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_a = main_inst_memory_controller_1_size_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_a = main_inst_memory_controller_1_write_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_a = main_inst_memory_controller_1_in_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_address_b = main_inst_memory_controller_1_address_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_b = main_inst_memory_controller_1_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_b = main_inst_memory_controller_1_size_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_b = main_inst_memory_controller_1_write_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_b = main_inst_memory_controller_1_in_b;
end
always @(*) begin
	memory_controller_0_inst_clk = clk;
end
assign memory_controller_0_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_0_inst_memory_controller_address_a = main_inst_memory_controller_0_address_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_a = main_inst_memory_controller_0_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_a = main_inst_memory_controller_0_size_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_a = main_inst_memory_controller_0_write_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_a = main_inst_memory_controller_0_in_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_address_b = main_inst_memory_controller_0_address_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_b = main_inst_memory_controller_0_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_b = main_inst_memory_controller_0_size_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_b = main_inst_memory_controller_0_write_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_b = main_inst_memory_controller_0_in_b;
end
always @(*) begin
	finish = main_inst_finish;
end
always @(*) begin
	return_val = main_inst_return_val;
end

endmodule
`timescale 1 ns / 1 ns
module memory_controller_0
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcY0_address_a;
reg [5:0] main_opcY0_address_b;
reg main_opcY0_write_enable_a;
reg main_opcY0_write_enable_b;
reg [31:0] main_opcY0_in_a;
reg [31:0] main_opcY0_in_b;
wire [31:0] main_opcY0_out_a;
wire [31:0] main_opcY0_out_b;

// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY0 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY0_address_a ),
	.q_a( main_opcY0_out_a ),
	.address_b( main_opcY0_address_b ),
	.q_b( main_opcY0_out_b )
);
defparam main_opcY0.width_a = 32;
defparam main_opcY0.widthad_a = 6;
defparam main_opcY0.numwords_a = 62;
defparam main_opcY0.width_b = 32;
defparam main_opcY0.widthad_b = 6;
defparam main_opcY0.numwords_b = 62;
defparam main_opcY0.latency = ram_latency;
defparam main_opcY0.init_file = {`MEM_INIT_DIR, "main_opcY0.mif"};

reg [5:0] main_opcY1_address_a;
reg [5:0] main_opcY1_address_b;
reg main_opcY1_write_enable_a;
reg main_opcY1_write_enable_b;
reg [31:0] main_opcY1_in_a;
reg [31:0] main_opcY1_in_b;
wire [31:0] main_opcY1_out_a;
wire [31:0] main_opcY1_out_b;

// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY1_address_a ),
	.q_a( main_opcY1_out_a ),
	.address_b( main_opcY1_address_b ),
	.q_b( main_opcY1_out_b )
);
defparam main_opcY1.width_a = 32;
defparam main_opcY1.widthad_a = 6;
defparam main_opcY1.numwords_a = 62;
defparam main_opcY1.width_b = 32;
defparam main_opcY1.widthad_b = 6;
defparam main_opcY1.numwords_b = 62;
defparam main_opcY1.latency = ram_latency;
defparam main_opcY1.init_file = {`MEM_INIT_DIR, "main_opcY1.mif"};

reg [5:0] main_opcY2_address_a;
reg [5:0] main_opcY2_address_b;
reg main_opcY2_write_enable_a;
reg main_opcY2_write_enable_b;
reg [31:0] main_opcY2_in_a;
reg [31:0] main_opcY2_in_b;
wire [31:0] main_opcY2_out_a;
wire [31:0] main_opcY2_out_b;

// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY2_address_a ),
	.q_a( main_opcY2_out_a ),
	.address_b( main_opcY2_address_b ),
	.q_b( main_opcY2_out_b )
);
defparam main_opcY2.width_a = 32;
defparam main_opcY2.widthad_a = 6;
defparam main_opcY2.numwords_a = 62;
defparam main_opcY2.width_b = 32;
defparam main_opcY2.widthad_b = 6;
defparam main_opcY2.numwords_b = 62;
defparam main_opcY2.latency = ram_latency;
defparam main_opcY2.init_file = {`MEM_INIT_DIR, "main_opcY2.mif"};

reg [5:0] main_opcY3_address_a;
reg [5:0] main_opcY3_address_b;
reg main_opcY3_write_enable_a;
reg main_opcY3_write_enable_b;
reg [31:0] main_opcY3_in_a;
reg [31:0] main_opcY3_in_b;
wire [31:0] main_opcY3_out_a;
wire [31:0] main_opcY3_out_b;

// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY3_address_a ),
	.q_a( main_opcY3_out_a ),
	.address_b( main_opcY3_address_b ),
	.q_b( main_opcY3_out_b )
);
defparam main_opcY3.width_a = 32;
defparam main_opcY3.widthad_a = 6;
defparam main_opcY3.numwords_a = 62;
defparam main_opcY3.width_b = 32;
defparam main_opcY3.widthad_b = 6;
defparam main_opcY3.numwords_b = 62;
defparam main_opcY3.latency = ram_latency;
defparam main_opcY3.init_file = {`MEM_INIT_DIR, "main_opcY3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcY0_a;
assign select_main_opcY0_a = (tag_a == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_a;
wire [31:0] memory_controller_main_opcY0_out_a;
assign memory_controller_main_opcY0_out_a = {32{ select_main_opcY0_reg_a[ram_latency]}} & main_opcY0_out_a;

wire select_main_opcY1_a;
assign select_main_opcY1_a = (tag_a == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_a;
wire [31:0] memory_controller_main_opcY1_out_a;
assign memory_controller_main_opcY1_out_a = {32{ select_main_opcY1_reg_a[ram_latency]}} & main_opcY1_out_a;

wire select_main_opcY2_a;
assign select_main_opcY2_a = (tag_a == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_a;
wire [31:0] memory_controller_main_opcY2_out_a;
assign memory_controller_main_opcY2_out_a = {32{ select_main_opcY2_reg_a[ram_latency]}} & main_opcY2_out_a;

wire select_main_opcY3_a;
assign select_main_opcY3_a = (tag_a == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_a;
wire [31:0] memory_controller_main_opcY3_out_a;
assign memory_controller_main_opcY3_out_a = {32{ select_main_opcY3_reg_a[ram_latency]}} & main_opcY3_out_a;

always @(*)
begin
main_opcY0_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY0_a}};
main_opcY0_write_enable_a = memory_controller_write_enable_a & select_main_opcY0_a;
main_opcY0_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY1_a}};
main_opcY1_write_enable_a = memory_controller_write_enable_a & select_main_opcY1_a;
main_opcY1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY2_a}};
main_opcY2_write_enable_a = memory_controller_write_enable_a & select_main_opcY2_a;
main_opcY2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY3_a}};
main_opcY3_write_enable_a = memory_controller_write_enable_a & select_main_opcY3_a;
main_opcY3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcY0_reg_a[ram_latency]}} | {2{select_main_opcY1_reg_a[ram_latency]}} | {2{select_main_opcY2_reg_a[ram_latency]}} | {2{select_main_opcY3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcY0_out_a | memory_controller_main_opcY1_out_a | memory_controller_main_opcY2_out_a | memory_controller_main_opcY3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_a[j+1] <= select_main_opcY0_reg_a[j];
select_main_opcY1_reg_a[j+1] <= select_main_opcY1_reg_a[j];
select_main_opcY2_reg_a[j+1] <= select_main_opcY2_reg_a[j];
select_main_opcY3_reg_a[j+1] <= select_main_opcY3_reg_a[j];
end
always @(*)
begin
select_main_opcY0_reg_a[0] <= select_main_opcY0_a;
select_main_opcY1_reg_a[0] <= select_main_opcY1_a;
select_main_opcY2_reg_a[0] <= select_main_opcY2_a;
select_main_opcY3_reg_a[0] <= select_main_opcY3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcY0_b;
assign select_main_opcY0_b = (tag_b == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_b;
wire [31:0] memory_controller_main_opcY0_out_b;
assign memory_controller_main_opcY0_out_b = {32{ select_main_opcY0_reg_b[ram_latency]}} & main_opcY0_out_b;

wire select_main_opcY1_b;
assign select_main_opcY1_b = (tag_b == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_b;
wire [31:0] memory_controller_main_opcY1_out_b;
assign memory_controller_main_opcY1_out_b = {32{ select_main_opcY1_reg_b[ram_latency]}} & main_opcY1_out_b;

wire select_main_opcY2_b;
assign select_main_opcY2_b = (tag_b == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_b;
wire [31:0] memory_controller_main_opcY2_out_b;
assign memory_controller_main_opcY2_out_b = {32{ select_main_opcY2_reg_b[ram_latency]}} & main_opcY2_out_b;

wire select_main_opcY3_b;
assign select_main_opcY3_b = (tag_b == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_b;
wire [31:0] memory_controller_main_opcY3_out_b;
assign memory_controller_main_opcY3_out_b = {32{ select_main_opcY3_reg_b[ram_latency]}} & main_opcY3_out_b;

always @(*)
begin
main_opcY0_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY0_b}};
main_opcY0_write_enable_b = memory_controller_write_enable_b & select_main_opcY0_b;
main_opcY0_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY1_b}};
main_opcY1_write_enable_b = memory_controller_write_enable_b & select_main_opcY1_b;
main_opcY1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY2_b}};
main_opcY2_write_enable_b = memory_controller_write_enable_b & select_main_opcY2_b;
main_opcY2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY3_b}};
main_opcY3_write_enable_b = memory_controller_write_enable_b & select_main_opcY3_b;
main_opcY3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcY0_reg_b[ram_latency]}} | {2{select_main_opcY1_reg_b[ram_latency]}} | {2{select_main_opcY2_reg_b[ram_latency]}} | {2{select_main_opcY3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcY0_out_b | memory_controller_main_opcY1_out_b | memory_controller_main_opcY2_out_b | memory_controller_main_opcY3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_b[j+1] <= select_main_opcY0_reg_b[j];
select_main_opcY1_reg_b[j+1] <= select_main_opcY1_reg_b[j];
select_main_opcY2_reg_b[j+1] <= select_main_opcY2_reg_b[j];
select_main_opcY3_reg_b[j+1] <= select_main_opcY3_reg_b[j];
end
always @(*)
begin
select_main_opcY0_reg_b[0] <= select_main_opcY0_b;
select_main_opcY1_reg_b[0] <= select_main_opcY1_b;
select_main_opcY2_reg_b[0] <= select_main_opcY2_b;
select_main_opcY3_reg_b[0] <= select_main_opcY3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module memory_controller_1
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcX1_address_a;
reg [5:0] main_opcX1_address_b;
reg main_opcX1_write_enable_a;
reg main_opcX1_write_enable_b;
reg [31:0] main_opcX1_in_a;
reg [31:0] main_opcX1_in_b;
wire [31:0] main_opcX1_out_a;
wire [31:0] main_opcX1_out_b;

// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX1_address_a ),
	.q_a( main_opcX1_out_a ),
	.address_b( main_opcX1_address_b ),
	.q_b( main_opcX1_out_b )
);
defparam main_opcX1.width_a = 32;
defparam main_opcX1.widthad_a = 6;
defparam main_opcX1.numwords_a = 62;
defparam main_opcX1.width_b = 32;
defparam main_opcX1.widthad_b = 6;
defparam main_opcX1.numwords_b = 62;
defparam main_opcX1.latency = ram_latency;
defparam main_opcX1.init_file = {`MEM_INIT_DIR, "main_opcX1.mif"};

reg [5:0] main_opcX2_address_a;
reg [5:0] main_opcX2_address_b;
reg main_opcX2_write_enable_a;
reg main_opcX2_write_enable_b;
reg [31:0] main_opcX2_in_a;
reg [31:0] main_opcX2_in_b;
wire [31:0] main_opcX2_out_a;
wire [31:0] main_opcX2_out_b;

// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX2_address_a ),
	.q_a( main_opcX2_out_a ),
	.address_b( main_opcX2_address_b ),
	.q_b( main_opcX2_out_b )
);
defparam main_opcX2.width_a = 32;
defparam main_opcX2.widthad_a = 6;
defparam main_opcX2.numwords_a = 62;
defparam main_opcX2.width_b = 32;
defparam main_opcX2.widthad_b = 6;
defparam main_opcX2.numwords_b = 62;
defparam main_opcX2.latency = ram_latency;
defparam main_opcX2.init_file = {`MEM_INIT_DIR, "main_opcX2.mif"};

reg [5:0] main_opcX3_address_a;
reg [5:0] main_opcX3_address_b;
reg main_opcX3_write_enable_a;
reg main_opcX3_write_enable_b;
reg [31:0] main_opcX3_in_a;
reg [31:0] main_opcX3_in_b;
wire [31:0] main_opcX3_out_a;
wire [31:0] main_opcX3_out_b;

// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
rom_dual_port main_opcX3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX3_address_a ),
	.q_a( main_opcX3_out_a ),
	.address_b( main_opcX3_address_b ),
	.q_b( main_opcX3_out_b )
);
defparam main_opcX3.width_a = 32;
defparam main_opcX3.widthad_a = 6;
defparam main_opcX3.numwords_a = 62;
defparam main_opcX3.width_b = 32;
defparam main_opcX3.widthad_b = 6;
defparam main_opcX3.numwords_b = 62;
defparam main_opcX3.latency = ram_latency;
defparam main_opcX3.init_file = {`MEM_INIT_DIR, "main_opcX3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcX1_a;
assign select_main_opcX1_a = (tag_a == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_a;
wire [31:0] memory_controller_main_opcX1_out_a;
assign memory_controller_main_opcX1_out_a = {32{ select_main_opcX1_reg_a[ram_latency]}} & main_opcX1_out_a;

wire select_main_opcX2_a;
assign select_main_opcX2_a = (tag_a == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_a;
wire [31:0] memory_controller_main_opcX2_out_a;
assign memory_controller_main_opcX2_out_a = {32{ select_main_opcX2_reg_a[ram_latency]}} & main_opcX2_out_a;

wire select_main_opcX3_a;
assign select_main_opcX3_a = (tag_a == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_a;
wire [31:0] memory_controller_main_opcX3_out_a;
assign memory_controller_main_opcX3_out_a = {32{ select_main_opcX3_reg_a[ram_latency]}} & main_opcX3_out_a;

always @(*)
begin
main_opcX1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX1_a}};
main_opcX1_write_enable_a = memory_controller_write_enable_a & select_main_opcX1_a;
main_opcX1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX2_a}};
main_opcX2_write_enable_a = memory_controller_write_enable_a & select_main_opcX2_a;
main_opcX2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX3_a}};
main_opcX3_write_enable_a = memory_controller_write_enable_a & select_main_opcX3_a;
main_opcX3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcX1_reg_a[ram_latency]}} | {2{select_main_opcX2_reg_a[ram_latency]}} | {2{select_main_opcX3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcX1_out_a | memory_controller_main_opcX2_out_a | memory_controller_main_opcX3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_a[j+1] <= select_main_opcX1_reg_a[j];
select_main_opcX2_reg_a[j+1] <= select_main_opcX2_reg_a[j];
select_main_opcX3_reg_a[j+1] <= select_main_opcX3_reg_a[j];
end
always @(*)
begin
select_main_opcX1_reg_a[0] <= select_main_opcX1_a;
select_main_opcX2_reg_a[0] <= select_main_opcX2_a;
select_main_opcX3_reg_a[0] <= select_main_opcX3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcX1_b;
assign select_main_opcX1_b = (tag_b == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_b;
wire [31:0] memory_controller_main_opcX1_out_b;
assign memory_controller_main_opcX1_out_b = {32{ select_main_opcX1_reg_b[ram_latency]}} & main_opcX1_out_b;

wire select_main_opcX2_b;
assign select_main_opcX2_b = (tag_b == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_b;
wire [31:0] memory_controller_main_opcX2_out_b;
assign memory_controller_main_opcX2_out_b = {32{ select_main_opcX2_reg_b[ram_latency]}} & main_opcX2_out_b;

wire select_main_opcX3_b;
assign select_main_opcX3_b = (tag_b == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_b;
wire [31:0] memory_controller_main_opcX3_out_b;
assign memory_controller_main_opcX3_out_b = {32{ select_main_opcX3_reg_b[ram_latency]}} & main_opcX3_out_b;

always @(*)
begin
main_opcX1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX1_b}};
main_opcX1_write_enable_b = memory_controller_write_enable_b & select_main_opcX1_b;
main_opcX1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX2_b}};
main_opcX2_write_enable_b = memory_controller_write_enable_b & select_main_opcX2_b;
main_opcX2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX3_b}};
main_opcX3_write_enable_b = memory_controller_write_enable_b & select_main_opcX3_b;
main_opcX3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcX1_reg_b[ram_latency]}} | {2{select_main_opcX2_reg_b[ram_latency]}} | {2{select_main_opcX3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcX1_out_b | memory_controller_main_opcX2_out_b | memory_controller_main_opcX3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_b[j+1] <= select_main_opcX1_reg_b[j];
select_main_opcX2_reg_b[j+1] <= select_main_opcX2_reg_b[j];
select_main_opcX3_reg_b[j+1] <= select_main_opcX3_reg_b[j];
end
always @(*)
begin
select_main_opcX1_reg_b[0] <= select_main_opcX1_b;
select_main_opcX2_reg_b[0] <= select_main_opcX2_b;
select_main_opcX3_reg_b[0] <= select_main_opcX3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module main
(
	clk,
	reset,
	start,
	finish,
	return_val,
	memory_controller_1_write_enable_a,
	memory_controller_1_in_a,
	memory_controller_1_enable_a,
	memory_controller_1_address_a,
	memory_controller_1_size_a,
	memory_controller_1_out_a,
	memory_controller_1_write_enable_b,
	memory_controller_1_in_b,
	memory_controller_1_enable_b,
	memory_controller_1_address_b,
	memory_controller_1_size_b,
	memory_controller_1_out_b,
	memory_controller_0_write_enable_a,
	memory_controller_0_in_a,
	memory_controller_0_enable_a,
	memory_controller_0_address_a,
	memory_controller_0_size_a,
	memory_controller_0_out_a,
	memory_controller_0_write_enable_b,
	memory_controller_0_in_b,
	memory_controller_0_enable_b,
	memory_controller_0_address_b,
	memory_controller_0_size_b,
	memory_controller_0_out_b
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_main_BB_entry_1 = 9'd1;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_2 = 9'd2;
parameter [8:0] LEGUP_F_main_BB_NodeBlock7_3 = 9'd3;
parameter [8:0] LEGUP_F_main_BB_NodeBlock5_4 = 9'd4;
parameter [8:0] LEGUP_F_main_BB_LeafBlock3_5 = 9'd5;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_backedge_6 = 9'd6;
parameter [8:0] LEGUP_F_main_BB_for_cond361_preheader_preheader_7 = 9'd7;
parameter [8:0] LEGUP_F_main_BB_NodeBlock1_8 = 9'd8;
parameter [8:0] LEGUP_F_main_BB_NodeBlock_9 = 9'd9;
parameter [8:0] LEGUP_F_main_BB_LeafBlock_10 = 9'd10;
parameter [8:0] LEGUP_F_main_BB_sw_bb_11 = 9'd11;
parameter [8:0] LEGUP_F_main_BB_sw_bb_12 = 9'd12;
parameter [8:0] LEGUP_F_main_BB_sw_bb_13 = 9'd13;
parameter [8:0] LEGUP_F_main_BB_sw_bb_14 = 9'd14;
parameter [8:0] LEGUP_F_main_BB_sw_bb_15 = 9'd15;
parameter [8:0] LEGUP_F_main_BB_sw_bb_16 = 9'd16;
parameter [8:0] LEGUP_F_main_BB_sw_bb_17 = 9'd17;
parameter [8:0] LEGUP_F_main_BB_sw_bb_18 = 9'd18;
parameter [8:0] LEGUP_F_main_BB_sw_bb_19 = 9'd19;
parameter [8:0] LEGUP_F_main_BB_sw_bb_20 = 9'd20;
parameter [8:0] LEGUP_F_main_BB_sw_bb_21 = 9'd21;
parameter [8:0] LEGUP_F_main_BB_sw_bb_22 = 9'd22;
parameter [8:0] LEGUP_F_main_BB_sw_bb_23 = 9'd23;
parameter [8:0] LEGUP_F_main_BB_sw_bb_24 = 9'd24;
parameter [8:0] LEGUP_F_main_BB_sw_bb_25 = 9'd25;
parameter [8:0] LEGUP_F_main_BB_sw_bb_26 = 9'd26;
parameter [8:0] LEGUP_F_main_BB_sw_bb_27 = 9'd27;
parameter [8:0] LEGUP_F_main_BB_sw_bb_28 = 9'd28;
parameter [8:0] LEGUP_F_main_BB_sw_bb_29 = 9'd29;
parameter [8:0] LEGUP_F_main_BB_sw_bb_30 = 9'd30;
parameter [8:0] LEGUP_F_main_BB_sw_bb_31 = 9'd31;
parameter [8:0] LEGUP_F_main_BB_sw_bb_32 = 9'd32;
parameter [8:0] LEGUP_F_main_BB_sw_bb_33 = 9'd33;
parameter [8:0] LEGUP_F_main_BB_sw_bb_34 = 9'd34;
parameter [8:0] LEGUP_F_main_BB_sw_bb_35 = 9'd35;
parameter [8:0] LEGUP_F_main_BB_sw_bb_36 = 9'd36;
parameter [8:0] LEGUP_F_main_BB_sw_bb_37 = 9'd37;
parameter [8:0] LEGUP_F_main_BB_for_cond109_preheader_38 = 9'd38;
parameter [8:0] LEGUP_F_main_BB_for_cond109_preheader_39 = 9'd39;
parameter [8:0] LEGUP_F_main_BB_for_cond109_preheader_40 = 9'd40;
parameter [8:0] LEGUP_F_main_BB_for_cond109_preheader_41 = 9'd41;
parameter [8:0] LEGUP_F_main_BB_for_cond109_preheader_42 = 9'd42;
parameter [8:0] LEGUP_F_main_BB_for_cond109_preheader_43 = 9'd43;
parameter [8:0] LEGUP_F_main_BB_for_body119_preheader_44 = 9'd44;
parameter [8:0] LEGUP_F_main_BB_for_body119_45 = 9'd45;
parameter [8:0] LEGUP_F_main_BB_for_body119_46 = 9'd46;
parameter [8:0] LEGUP_F_main_BB_for_end124_47 = 9'd47;
parameter [8:0] LEGUP_F_main_BB_for_end124_48 = 9'd48;
parameter [8:0] LEGUP_F_main_BB_for_end124_49 = 9'd49;
parameter [8:0] LEGUP_F_main_BB_for_end124_50 = 9'd50;
parameter [8:0] LEGUP_F_main_BB_for_end124_51 = 9'd51;
parameter [8:0] LEGUP_F_main_BB_for_end124_52 = 9'd52;
parameter [8:0] LEGUP_F_main_BB_for_end124_53 = 9'd53;
parameter [8:0] LEGUP_F_main_BB_for_end124_54 = 9'd54;
parameter [8:0] LEGUP_F_main_BB_for_end124_55 = 9'd55;
parameter [8:0] LEGUP_F_main_BB_for_end124_56 = 9'd56;
parameter [8:0] LEGUP_F_main_BB_for_end124_57 = 9'd57;
parameter [8:0] LEGUP_F_main_BB_for_end124_58 = 9'd58;
parameter [8:0] LEGUP_F_main_BB_for_end124_59 = 9'd59;
parameter [8:0] LEGUP_F_main_BB_for_end124_60 = 9'd60;
parameter [8:0] LEGUP_F_main_BB_for_end124_61 = 9'd61;
parameter [8:0] LEGUP_F_main_BB_for_end124_62 = 9'd62;
parameter [8:0] LEGUP_F_main_BB_for_end124_63 = 9'd63;
parameter [8:0] LEGUP_F_main_BB_for_end124_64 = 9'd64;
parameter [8:0] LEGUP_F_main_BB_for_end124_65 = 9'd65;
parameter [8:0] LEGUP_F_main_BB_for_end124_66 = 9'd66;
parameter [8:0] LEGUP_F_main_BB_for_end124_67 = 9'd67;
parameter [8:0] LEGUP_F_main_BB_for_end124_68 = 9'd68;
parameter [8:0] LEGUP_F_main_BB_for_end124_69 = 9'd69;
parameter [8:0] LEGUP_F_main_BB_for_end124_70 = 9'd70;
parameter [8:0] LEGUP_F_main_BB_for_end124_71 = 9'd71;
parameter [8:0] LEGUP_F_main_BB_for_end124_72 = 9'd72;
parameter [8:0] LEGUP_F_main_BB_for_end124_73 = 9'd73;
parameter [8:0] LEGUP_F_main_BB_for_end124_74 = 9'd74;
parameter [8:0] LEGUP_F_main_BB_for_end124_75 = 9'd75;
parameter [8:0] LEGUP_F_main_BB_for_end124_76 = 9'd76;
parameter [8:0] LEGUP_F_main_BB_for_end124_77 = 9'd77;
parameter [8:0] LEGUP_F_main_BB_for_end124_78 = 9'd78;
parameter [8:0] LEGUP_F_main_BB_for_end124_79 = 9'd79;
parameter [8:0] LEGUP_F_main_BB_for_end124_80 = 9'd80;
parameter [8:0] LEGUP_F_main_BB_for_end124_81 = 9'd81;
parameter [8:0] LEGUP_F_main_BB_for_end124_82 = 9'd82;
parameter [8:0] LEGUP_F_main_BB_sw_bb135_83 = 9'd83;
parameter [8:0] LEGUP_F_main_BB_if_end_84 = 9'd84;
parameter [8:0] LEGUP_F_main_BB_if_end_85 = 9'd85;
parameter [8:0] LEGUP_F_main_BB_if_end_86 = 9'd86;
parameter [8:0] LEGUP_F_main_BB_sw_bb146_87 = 9'd87;
parameter [8:0] LEGUP_F_main_BB_if_end149_88 = 9'd88;
parameter [8:0] LEGUP_F_main_BB_if_end149_89 = 9'd89;
parameter [8:0] LEGUP_F_main_BB_if_end149_90 = 9'd90;
parameter [8:0] LEGUP_F_main_BB_if_end149_91 = 9'd91;
parameter [8:0] LEGUP_F_main_BB_if_end149_92 = 9'd92;
parameter [8:0] LEGUP_F_main_BB_if_end149_93 = 9'd93;
parameter [8:0] LEGUP_F_main_BB_if_end149_94 = 9'd94;
parameter [8:0] LEGUP_F_main_BB_if_end149_95 = 9'd95;
parameter [8:0] LEGUP_F_main_BB_if_end149_96 = 9'd96;
parameter [8:0] LEGUP_F_main_BB_if_end149_97 = 9'd97;
parameter [8:0] LEGUP_F_main_BB_if_end149_98 = 9'd98;
parameter [8:0] LEGUP_F_main_BB_if_end149_99 = 9'd99;
parameter [8:0] LEGUP_F_main_BB_if_end149_100 = 9'd100;
parameter [8:0] LEGUP_F_main_BB_if_end149_101 = 9'd101;
parameter [8:0] LEGUP_F_main_BB_if_end149_102 = 9'd102;
parameter [8:0] LEGUP_F_main_BB_if_end149_103 = 9'd103;
parameter [8:0] LEGUP_F_main_BB_if_end149_104 = 9'd104;
parameter [8:0] LEGUP_F_main_BB_if_end149_105 = 9'd105;
parameter [8:0] LEGUP_F_main_BB_if_end149_106 = 9'd106;
parameter [8:0] LEGUP_F_main_BB_if_end149_107 = 9'd107;
parameter [8:0] LEGUP_F_main_BB_if_end149_108 = 9'd108;
parameter [8:0] LEGUP_F_main_BB_if_end149_109 = 9'd109;
parameter [8:0] LEGUP_F_main_BB_if_end149_110 = 9'd110;
parameter [8:0] LEGUP_F_main_BB_if_end149_111 = 9'd111;
parameter [8:0] LEGUP_F_main_BB_if_end149_112 = 9'd112;
parameter [8:0] LEGUP_F_main_BB_if_end149_113 = 9'd113;
parameter [8:0] LEGUP_F_main_BB_if_end149_114 = 9'd114;
parameter [8:0] LEGUP_F_main_BB_if_end149_115 = 9'd115;
parameter [8:0] LEGUP_F_main_BB_if_end149_116 = 9'd116;
parameter [8:0] LEGUP_F_main_BB_if_end149_117 = 9'd117;
parameter [8:0] LEGUP_F_main_BB_if_end149_118 = 9'd118;
parameter [8:0] LEGUP_F_main_BB_if_end149_119 = 9'd119;
parameter [8:0] LEGUP_F_main_BB_if_end149_120 = 9'd120;
parameter [8:0] LEGUP_F_main_BB_if_then154_121 = 9'd121;
parameter [8:0] LEGUP_F_main_BB_if_then156_122 = 9'd122;
parameter [8:0] LEGUP_F_main_BB_if_then156_123 = 9'd123;
parameter [8:0] LEGUP_F_main_BB_if_then156_124 = 9'd124;
parameter [8:0] LEGUP_F_main_BB_if_then156_125 = 9'd125;
parameter [8:0] LEGUP_F_main_BB_if_then156_126 = 9'd126;
parameter [8:0] LEGUP_F_main_BB_if_then156_127 = 9'd127;
parameter [8:0] LEGUP_F_main_BB_if_then156_128 = 9'd128;
parameter [8:0] LEGUP_F_main_BB_if_then156_129 = 9'd129;
parameter [8:0] LEGUP_F_main_BB_if_then156_130 = 9'd130;
parameter [8:0] LEGUP_F_main_BB_if_then156_131 = 9'd131;
parameter [8:0] LEGUP_F_main_BB_if_then156_132 = 9'd132;
parameter [8:0] LEGUP_F_main_BB_if_then156_133 = 9'd133;
parameter [8:0] LEGUP_F_main_BB_if_then156_134 = 9'd134;
parameter [8:0] LEGUP_F_main_BB_if_then156_135 = 9'd135;
parameter [8:0] LEGUP_F_main_BB_if_then156_136 = 9'd136;
parameter [8:0] LEGUP_F_main_BB_if_then156_137 = 9'd137;
parameter [8:0] LEGUP_F_main_BB_if_then156_138 = 9'd138;
parameter [8:0] LEGUP_F_main_BB_if_then156_139 = 9'd139;
parameter [8:0] LEGUP_F_main_BB_if_then156_140 = 9'd140;
parameter [8:0] LEGUP_F_main_BB_if_then156_141 = 9'd141;
parameter [8:0] LEGUP_F_main_BB_if_then156_142 = 9'd142;
parameter [8:0] LEGUP_F_main_BB_if_then156_143 = 9'd143;
parameter [8:0] LEGUP_F_main_BB_if_then156_144 = 9'd144;
parameter [8:0] LEGUP_F_main_BB_if_then156_145 = 9'd145;
parameter [8:0] LEGUP_F_main_BB_if_then156_146 = 9'd146;
parameter [8:0] LEGUP_F_main_BB_if_then156_147 = 9'd147;
parameter [8:0] LEGUP_F_main_BB_if_then156_148 = 9'd148;
parameter [8:0] LEGUP_F_main_BB_if_then156_149 = 9'd149;
parameter [8:0] LEGUP_F_main_BB_if_then156_150 = 9'd150;
parameter [8:0] LEGUP_F_main_BB_if_then156_151 = 9'd151;
parameter [8:0] LEGUP_F_main_BB_if_then156_152 = 9'd152;
parameter [8:0] LEGUP_F_main_BB_if_then156_153 = 9'd153;
parameter [8:0] LEGUP_F_main_BB_if_then156_154 = 9'd154;
parameter [8:0] LEGUP_F_main_BB_if_then156_155 = 9'd155;
parameter [8:0] LEGUP_F_main_BB_if_else167_156 = 9'd156;
parameter [8:0] LEGUP_F_main_BB_if_then169_157 = 9'd157;
parameter [8:0] LEGUP_F_main_BB_if_then169_158 = 9'd158;
parameter [8:0] LEGUP_F_main_BB_if_then169_159 = 9'd159;
parameter [8:0] LEGUP_F_main_BB_if_then169_160 = 9'd160;
parameter [8:0] LEGUP_F_main_BB_if_then169_161 = 9'd161;
parameter [8:0] LEGUP_F_main_BB_if_then169_162 = 9'd162;
parameter [8:0] LEGUP_F_main_BB_if_then169_163 = 9'd163;
parameter [8:0] LEGUP_F_main_BB_if_then169_164 = 9'd164;
parameter [8:0] LEGUP_F_main_BB_if_then169_165 = 9'd165;
parameter [8:0] LEGUP_F_main_BB_if_then169_166 = 9'd166;
parameter [8:0] LEGUP_F_main_BB_if_then169_167 = 9'd167;
parameter [8:0] LEGUP_F_main_BB_if_then169_168 = 9'd168;
parameter [8:0] LEGUP_F_main_BB_if_then169_169 = 9'd169;
parameter [8:0] LEGUP_F_main_BB_if_then169_170 = 9'd170;
parameter [8:0] LEGUP_F_main_BB_if_then169_171 = 9'd171;
parameter [8:0] LEGUP_F_main_BB_if_then169_172 = 9'd172;
parameter [8:0] LEGUP_F_main_BB_if_then169_173 = 9'd173;
parameter [8:0] LEGUP_F_main_BB_if_then169_174 = 9'd174;
parameter [8:0] LEGUP_F_main_BB_if_then169_175 = 9'd175;
parameter [8:0] LEGUP_F_main_BB_if_then169_176 = 9'd176;
parameter [8:0] LEGUP_F_main_BB_if_then169_177 = 9'd177;
parameter [8:0] LEGUP_F_main_BB_if_then169_178 = 9'd178;
parameter [8:0] LEGUP_F_main_BB_if_then169_179 = 9'd179;
parameter [8:0] LEGUP_F_main_BB_if_then169_180 = 9'd180;
parameter [8:0] LEGUP_F_main_BB_if_then169_181 = 9'd181;
parameter [8:0] LEGUP_F_main_BB_if_then169_182 = 9'd182;
parameter [8:0] LEGUP_F_main_BB_if_then169_183 = 9'd183;
parameter [8:0] LEGUP_F_main_BB_if_then169_184 = 9'd184;
parameter [8:0] LEGUP_F_main_BB_if_then169_185 = 9'd185;
parameter [8:0] LEGUP_F_main_BB_if_then169_186 = 9'd186;
parameter [8:0] LEGUP_F_main_BB_if_then169_187 = 9'd187;
parameter [8:0] LEGUP_F_main_BB_if_then169_188 = 9'd188;
parameter [8:0] LEGUP_F_main_BB_if_then169_189 = 9'd189;
parameter [8:0] LEGUP_F_main_BB_if_then169_190 = 9'd190;
parameter [8:0] LEGUP_F_main_BB_if_else180_191 = 9'd191;
parameter [8:0] LEGUP_F_main_BB_if_else180_192 = 9'd192;
parameter [8:0] LEGUP_F_main_BB_if_else180_193 = 9'd193;
parameter [8:0] LEGUP_F_main_BB_if_else180_194 = 9'd194;
parameter [8:0] LEGUP_F_main_BB_if_else180_195 = 9'd195;
parameter [8:0] LEGUP_F_main_BB_if_else180_196 = 9'd196;
parameter [8:0] LEGUP_F_main_BB_if_else180_197 = 9'd197;
parameter [8:0] LEGUP_F_main_BB_if_else180_198 = 9'd198;
parameter [8:0] LEGUP_F_main_BB_if_else180_199 = 9'd199;
parameter [8:0] LEGUP_F_main_BB_if_else180_200 = 9'd200;
parameter [8:0] LEGUP_F_main_BB_if_else180_201 = 9'd201;
parameter [8:0] LEGUP_F_main_BB_if_else180_202 = 9'd202;
parameter [8:0] LEGUP_F_main_BB_if_else180_203 = 9'd203;
parameter [8:0] LEGUP_F_main_BB_if_else180_204 = 9'd204;
parameter [8:0] LEGUP_F_main_BB_if_else180_205 = 9'd205;
parameter [8:0] LEGUP_F_main_BB_if_else180_206 = 9'd206;
parameter [8:0] LEGUP_F_main_BB_if_else180_207 = 9'd207;
parameter [8:0] LEGUP_F_main_BB_if_else180_208 = 9'd208;
parameter [8:0] LEGUP_F_main_BB_if_else180_209 = 9'd209;
parameter [8:0] LEGUP_F_main_BB_if_else180_210 = 9'd210;
parameter [8:0] LEGUP_F_main_BB_if_else180_211 = 9'd211;
parameter [8:0] LEGUP_F_main_BB_if_else180_212 = 9'd212;
parameter [8:0] LEGUP_F_main_BB_if_else180_213 = 9'd213;
parameter [8:0] LEGUP_F_main_BB_if_else180_214 = 9'd214;
parameter [8:0] LEGUP_F_main_BB_if_else180_215 = 9'd215;
parameter [8:0] LEGUP_F_main_BB_if_else180_216 = 9'd216;
parameter [8:0] LEGUP_F_main_BB_if_else180_217 = 9'd217;
parameter [8:0] LEGUP_F_main_BB_if_else180_218 = 9'd218;
parameter [8:0] LEGUP_F_main_BB_if_else180_219 = 9'd219;
parameter [8:0] LEGUP_F_main_BB_if_else180_220 = 9'd220;
parameter [8:0] LEGUP_F_main_BB_if_else180_221 = 9'd221;
parameter [8:0] LEGUP_F_main_BB_if_else180_222 = 9'd222;
parameter [8:0] LEGUP_F_main_BB_if_else180_223 = 9'd223;
parameter [8:0] LEGUP_F_main_BB_if_then182_224 = 9'd224;
parameter [8:0] LEGUP_F_main_BB_if_then182_225 = 9'd225;
parameter [8:0] LEGUP_F_main_BB_if_then182_226 = 9'd226;
parameter [8:0] LEGUP_F_main_BB_if_then182_227 = 9'd227;
parameter [8:0] LEGUP_F_main_BB_if_then182_228 = 9'd228;
parameter [8:0] LEGUP_F_main_BB_if_then182_229 = 9'd229;
parameter [8:0] LEGUP_F_main_BB_if_then182_230 = 9'd230;
parameter [8:0] LEGUP_F_main_BB_if_then182_231 = 9'd231;
parameter [8:0] LEGUP_F_main_BB_if_then182_232 = 9'd232;
parameter [8:0] LEGUP_F_main_BB_if_then182_233 = 9'd233;
parameter [8:0] LEGUP_F_main_BB_if_then182_234 = 9'd234;
parameter [8:0] LEGUP_F_main_BB_if_then182_235 = 9'd235;
parameter [8:0] LEGUP_F_main_BB_if_then182_236 = 9'd236;
parameter [8:0] LEGUP_F_main_BB_if_then182_237 = 9'd237;
parameter [8:0] LEGUP_F_main_BB_if_then182_238 = 9'd238;
parameter [8:0] LEGUP_F_main_BB_if_then182_239 = 9'd239;
parameter [8:0] LEGUP_F_main_BB_if_then182_240 = 9'd240;
parameter [8:0] LEGUP_F_main_BB_if_then182_241 = 9'd241;
parameter [8:0] LEGUP_F_main_BB_if_then182_242 = 9'd242;
parameter [8:0] LEGUP_F_main_BB_if_then182_243 = 9'd243;
parameter [8:0] LEGUP_F_main_BB_if_then182_244 = 9'd244;
parameter [8:0] LEGUP_F_main_BB_if_then182_245 = 9'd245;
parameter [8:0] LEGUP_F_main_BB_if_then182_246 = 9'd246;
parameter [8:0] LEGUP_F_main_BB_if_then182_247 = 9'd247;
parameter [8:0] LEGUP_F_main_BB_if_then182_248 = 9'd248;
parameter [8:0] LEGUP_F_main_BB_if_then182_249 = 9'd249;
parameter [8:0] LEGUP_F_main_BB_if_then182_250 = 9'd250;
parameter [8:0] LEGUP_F_main_BB_if_then182_251 = 9'd251;
parameter [8:0] LEGUP_F_main_BB_if_then182_252 = 9'd252;
parameter [8:0] LEGUP_F_main_BB_if_then182_253 = 9'd253;
parameter [8:0] LEGUP_F_main_BB_if_then182_254 = 9'd254;
parameter [8:0] LEGUP_F_main_BB_if_then182_255 = 9'd255;
parameter [8:0] LEGUP_F_main_BB_if_then182_256 = 9'd256;
parameter [8:0] LEGUP_F_main_BB_if_else193_257 = 9'd257;
parameter [8:0] LEGUP_F_main_BB_if_else193_258 = 9'd258;
parameter [8:0] LEGUP_F_main_BB_if_else193_259 = 9'd259;
parameter [8:0] LEGUP_F_main_BB_if_else193_260 = 9'd260;
parameter [8:0] LEGUP_F_main_BB_if_else193_261 = 9'd261;
parameter [8:0] LEGUP_F_main_BB_if_else193_262 = 9'd262;
parameter [8:0] LEGUP_F_main_BB_if_else193_263 = 9'd263;
parameter [8:0] LEGUP_F_main_BB_if_else193_264 = 9'd264;
parameter [8:0] LEGUP_F_main_BB_if_else193_265 = 9'd265;
parameter [8:0] LEGUP_F_main_BB_if_else193_266 = 9'd266;
parameter [8:0] LEGUP_F_main_BB_if_else193_267 = 9'd267;
parameter [8:0] LEGUP_F_main_BB_if_else193_268 = 9'd268;
parameter [8:0] LEGUP_F_main_BB_if_else193_269 = 9'd269;
parameter [8:0] LEGUP_F_main_BB_if_else193_270 = 9'd270;
parameter [8:0] LEGUP_F_main_BB_if_else193_271 = 9'd271;
parameter [8:0] LEGUP_F_main_BB_if_else193_272 = 9'd272;
parameter [8:0] LEGUP_F_main_BB_if_else193_273 = 9'd273;
parameter [8:0] LEGUP_F_main_BB_if_else193_274 = 9'd274;
parameter [8:0] LEGUP_F_main_BB_if_else193_275 = 9'd275;
parameter [8:0] LEGUP_F_main_BB_if_else193_276 = 9'd276;
parameter [8:0] LEGUP_F_main_BB_if_else193_277 = 9'd277;
parameter [8:0] LEGUP_F_main_BB_if_else193_278 = 9'd278;
parameter [8:0] LEGUP_F_main_BB_if_else193_279 = 9'd279;
parameter [8:0] LEGUP_F_main_BB_if_else193_280 = 9'd280;
parameter [8:0] LEGUP_F_main_BB_if_else193_281 = 9'd281;
parameter [8:0] LEGUP_F_main_BB_if_else193_282 = 9'd282;
parameter [8:0] LEGUP_F_main_BB_if_else193_283 = 9'd283;
parameter [8:0] LEGUP_F_main_BB_if_else193_284 = 9'd284;
parameter [8:0] LEGUP_F_main_BB_if_else193_285 = 9'd285;
parameter [8:0] LEGUP_F_main_BB_if_else193_286 = 9'd286;
parameter [8:0] LEGUP_F_main_BB_if_else193_287 = 9'd287;
parameter [8:0] LEGUP_F_main_BB_if_else193_288 = 9'd288;
parameter [8:0] LEGUP_F_main_BB_if_else193_289 = 9'd289;
parameter [8:0] LEGUP_F_main_BB_if_else207_290 = 9'd290;
parameter [8:0] LEGUP_F_main_BB_if_then209_291 = 9'd291;
parameter [8:0] LEGUP_F_main_BB_if_then209_292 = 9'd292;
parameter [8:0] LEGUP_F_main_BB_if_then209_293 = 9'd293;
parameter [8:0] LEGUP_F_main_BB_NodeBlock16_294 = 9'd294;
parameter [8:0] LEGUP_F_main_BB_LeafBlock14_295 = 9'd295;
parameter [8:0] LEGUP_F_main_BB_LeafBlock12_296 = 9'd296;
parameter [8:0] LEGUP_F_main_BB_if_then216_297 = 9'd297;
parameter [8:0] LEGUP_F_main_BB_if_then216_298 = 9'd298;
parameter [8:0] LEGUP_F_main_BB_if_then216_299 = 9'd299;
parameter [8:0] LEGUP_F_main_BB_if_then223_300 = 9'd300;
parameter [8:0] LEGUP_F_main_BB_if_then223_301 = 9'd301;
parameter [8:0] LEGUP_F_main_BB_if_then223_302 = 9'd302;
parameter [8:0] LEGUP_F_main_BB_if_else228_303 = 9'd303;
parameter [8:0] LEGUP_F_main_BB_if_else228_304 = 9'd304;
parameter [8:0] LEGUP_F_main_BB_if_else228_305 = 9'd305;
parameter [8:0] LEGUP_F_main_BB_if_end236_306 = 9'd306;
parameter [8:0] LEGUP_F_main_BB_if_end236_307 = 9'd307;
parameter [8:0] LEGUP_F_main_BB_if_end236_308 = 9'd308;
parameter [8:0] LEGUP_F_main_BB_if_end236_309 = 9'd309;
parameter [8:0] LEGUP_F_main_BB_if_then248_310 = 9'd310;
parameter [8:0] LEGUP_F_main_BB_if_then248_311 = 9'd311;
parameter [8:0] LEGUP_F_main_BB_if_else253_312 = 9'd312;
parameter [8:0] LEGUP_F_main_BB_if_then255_313 = 9'd313;
parameter [8:0] LEGUP_F_main_BB_if_end258_314 = 9'd314;
parameter [8:0] LEGUP_F_main_BB_sw_bb263_315 = 9'd315;
parameter [8:0] LEGUP_F_main_BB_if_then265_316 = 9'd316;
parameter [8:0] LEGUP_F_main_BB_if_end267_317 = 9'd317;
parameter [8:0] LEGUP_F_main_BB_if_end267_318 = 9'd318;
parameter [8:0] LEGUP_F_main_BB_if_end267_319 = 9'd319;
parameter [8:0] LEGUP_F_main_BB_if_end267_320 = 9'd320;
parameter [8:0] LEGUP_F_main_BB_if_end267_321 = 9'd321;
parameter [8:0] LEGUP_F_main_BB_if_end267_322 = 9'd322;
parameter [8:0] LEGUP_F_main_BB_if_end267_323 = 9'd323;
parameter [8:0] LEGUP_F_main_BB_if_end267_324 = 9'd324;
parameter [8:0] LEGUP_F_main_BB_if_end267_325 = 9'd325;
parameter [8:0] LEGUP_F_main_BB_if_end267_326 = 9'd326;
parameter [8:0] LEGUP_F_main_BB_if_end267_327 = 9'd327;
parameter [8:0] LEGUP_F_main_BB_if_end267_328 = 9'd328;
parameter [8:0] LEGUP_F_main_BB_if_end267_329 = 9'd329;
parameter [8:0] LEGUP_F_main_BB_if_end267_330 = 9'd330;
parameter [8:0] LEGUP_F_main_BB_if_end267_331 = 9'd331;
parameter [8:0] LEGUP_F_main_BB_if_end267_332 = 9'd332;
parameter [8:0] LEGUP_F_main_BB_if_end267_333 = 9'd333;
parameter [8:0] LEGUP_F_main_BB_if_end267_334 = 9'd334;
parameter [8:0] LEGUP_F_main_BB_if_end267_335 = 9'd335;
parameter [8:0] LEGUP_F_main_BB_if_end267_336 = 9'd336;
parameter [8:0] LEGUP_F_main_BB_if_end267_337 = 9'd337;
parameter [8:0] LEGUP_F_main_BB_if_end267_338 = 9'd338;
parameter [8:0] LEGUP_F_main_BB_if_end267_339 = 9'd339;
parameter [8:0] LEGUP_F_main_BB_if_end267_340 = 9'd340;
parameter [8:0] LEGUP_F_main_BB_if_end267_341 = 9'd341;
parameter [8:0] LEGUP_F_main_BB_if_end267_342 = 9'd342;
parameter [8:0] LEGUP_F_main_BB_if_end267_343 = 9'd343;
parameter [8:0] LEGUP_F_main_BB_if_end267_344 = 9'd344;
parameter [8:0] LEGUP_F_main_BB_if_end267_345 = 9'd345;
parameter [8:0] LEGUP_F_main_BB_if_end267_346 = 9'd346;
parameter [8:0] LEGUP_F_main_BB_if_end267_347 = 9'd347;
parameter [8:0] LEGUP_F_main_BB_if_end267_348 = 9'd348;
parameter [8:0] LEGUP_F_main_BB_if_end267_349 = 9'd349;
parameter [8:0] LEGUP_F_main_BB_NodeBlock23_350 = 9'd350;
parameter [8:0] LEGUP_F_main_BB_LeafBlock21_351 = 9'd351;
parameter [8:0] LEGUP_F_main_BB_LeafBlock19_352 = 9'd352;
parameter [8:0] LEGUP_F_main_BB_if_then272_353 = 9'd353;
parameter [8:0] LEGUP_F_main_BB_if_then279_354 = 9'd354;
parameter [8:0] LEGUP_F_main_BB_if_then286_355 = 9'd355;
parameter [8:0] LEGUP_F_main_BB_if_else291_356 = 9'd356;
parameter [8:0] LEGUP_F_main_BB_if_end298_357 = 9'd357;
parameter [8:0] LEGUP_F_main_BB_if_end298_358 = 9'd358;
parameter [8:0] LEGUP_F_main_BB_if_end298_359 = 9'd359;
parameter [8:0] LEGUP_F_main_BB_if_end298_360 = 9'd360;
parameter [8:0] LEGUP_F_main_BB_if_end298_361 = 9'd361;
parameter [8:0] LEGUP_F_main_BB_if_end298_362 = 9'd362;
parameter [8:0] LEGUP_F_main_BB_if_then311_363 = 9'd363;
parameter [8:0] LEGUP_F_main_BB_if_then311_364 = 9'd364;
parameter [8:0] LEGUP_F_main_BB_if_else317_365 = 9'd365;
parameter [8:0] LEGUP_F_main_BB_if_then319_366 = 9'd366;
parameter [8:0] LEGUP_F_main_BB_sw_bb328_367 = 9'd367;
parameter [8:0] LEGUP_F_main_BB_if_end331_368 = 9'd368;
parameter [8:0] LEGUP_F_main_BB_if_end331_369 = 9'd369;
parameter [8:0] LEGUP_F_main_BB_if_end331_370 = 9'd370;
parameter [8:0] LEGUP_F_main_BB_if_end331_371 = 9'd371;
parameter [8:0] LEGUP_F_main_BB_if_end331_372 = 9'd372;
parameter [8:0] LEGUP_F_main_BB_if_end331_373 = 9'd373;
parameter [8:0] LEGUP_F_main_BB_if_end331_374 = 9'd374;
parameter [8:0] LEGUP_F_main_BB_if_end331_375 = 9'd375;
parameter [8:0] LEGUP_F_main_BB_if_end331_376 = 9'd376;
parameter [8:0] LEGUP_F_main_BB_if_end331_377 = 9'd377;
parameter [8:0] LEGUP_F_main_BB_if_end331_378 = 9'd378;
parameter [8:0] LEGUP_F_main_BB_if_end331_379 = 9'd379;
parameter [8:0] LEGUP_F_main_BB_if_end331_380 = 9'd380;
parameter [8:0] LEGUP_F_main_BB_if_end331_381 = 9'd381;
parameter [8:0] LEGUP_F_main_BB_if_end331_382 = 9'd382;
parameter [8:0] LEGUP_F_main_BB_if_end331_383 = 9'd383;
parameter [8:0] LEGUP_F_main_BB_if_end331_384 = 9'd384;
parameter [8:0] LEGUP_F_main_BB_if_end331_385 = 9'd385;
parameter [8:0] LEGUP_F_main_BB_if_end331_386 = 9'd386;
parameter [8:0] LEGUP_F_main_BB_if_end331_387 = 9'd387;
parameter [8:0] LEGUP_F_main_BB_if_end331_388 = 9'd388;
parameter [8:0] LEGUP_F_main_BB_if_end331_389 = 9'd389;
parameter [8:0] LEGUP_F_main_BB_if_end331_390 = 9'd390;
parameter [8:0] LEGUP_F_main_BB_if_end331_391 = 9'd391;
parameter [8:0] LEGUP_F_main_BB_if_end331_392 = 9'd392;
parameter [8:0] LEGUP_F_main_BB_if_end331_393 = 9'd393;
parameter [8:0] LEGUP_F_main_BB_if_end331_394 = 9'd394;
parameter [8:0] LEGUP_F_main_BB_if_end331_395 = 9'd395;
parameter [8:0] LEGUP_F_main_BB_if_end331_396 = 9'd396;
parameter [8:0] LEGUP_F_main_BB_if_end331_397 = 9'd397;
parameter [8:0] LEGUP_F_main_BB_if_end331_398 = 9'd398;
parameter [8:0] LEGUP_F_main_BB_if_end331_399 = 9'd399;
parameter [8:0] LEGUP_F_main_BB_if_end331_400 = 9'd400;
parameter [8:0] LEGUP_F_main_BB_if_end331_401 = 9'd401;
parameter [8:0] LEGUP_F_main_BB_if_end331_402 = 9'd402;
parameter [8:0] LEGUP_F_main_BB_if_end331_403 = 9'd403;
parameter [8:0] LEGUP_F_main_BB_if_end331_404 = 9'd404;
parameter [8:0] LEGUP_F_main_BB_for_cond361_preheader_405 = 9'd405;
parameter [8:0] LEGUP_F_main_BB_for_cond361_preheader_406 = 9'd406;
parameter [8:0] LEGUP_F_main_BB_for_cond361_preheader_407 = 9'd407;
parameter [8:0] LEGUP_F_main_BB_for_cond361_preheader_408 = 9'd408;
parameter [8:0] LEGUP_F_main_BB_for_cond361_preheader_409 = 9'd409;
parameter [8:0] LEGUP_F_main_BB_for_cond361_preheader_410 = 9'd410;
parameter [8:0] LEGUP_F_main_BB_for_end373_411 = 9'd411;
parameter [8:0] LEGUP_F_main_BB_cleanup_412 = 9'd412;

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
output  memory_controller_1_write_enable_a;
output [63:0] memory_controller_1_in_a;
output reg  memory_controller_1_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_a;
output reg [1:0] memory_controller_1_size_a;
input [63:0] memory_controller_1_out_a;
output  memory_controller_1_write_enable_b;
output [63:0] memory_controller_1_in_b;
output  memory_controller_1_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_b;
output [1:0] memory_controller_1_size_b;
input [63:0] memory_controller_1_out_b;
output  memory_controller_0_write_enable_a;
output [63:0] memory_controller_0_in_a;
output reg  memory_controller_0_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_a;
output reg [1:0] memory_controller_0_size_a;
input [63:0] memory_controller_0_out_a;
output  memory_controller_0_write_enable_b;
output [63:0] memory_controller_0_in_b;
output  memory_controller_0_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_b;
output [1:0] memory_controller_0_size_b;
input [63:0] memory_controller_0_out_b;
reg [8:0] cur_state/* synthesis syn_encoding="onehot" */;
reg [8:0] next_state;
wire  fsm_stall;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1556_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1556_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla555_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla555_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx68_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx69;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx69_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx70;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx70_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx71;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx71_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx72;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx72_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx74;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx74_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx75;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx75_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx76;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx76_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx77;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx77_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx78;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx78_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx79;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx79_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx80;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx80_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx81;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx81_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx82;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx82_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx84;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx84_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx85;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx85_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx86;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx86_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx87;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx87_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx88;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx88_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx89;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx89_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx90;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx90_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx91;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx91_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx92;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx92_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx93;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx93_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx94;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx94_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx95;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx95_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx96;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx96_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx97;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx97_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx98;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx98_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx99;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx99_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx100;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx100_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx101;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx101_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx102;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx102_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx103;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx103_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx104;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx104_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx105;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx105_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx106;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx106_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx107;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx107_reg;
reg [31:0] main_NodeBlock9_state_0;
reg [31:0] main_NodeBlock9_state_0_reg;
reg [31:0] main_NodeBlock9_i_0;
reg [31:0] main_NodeBlock9_i_0_reg;
reg [31:0] main_NodeBlock9_j_0;
reg [31:0] main_NodeBlock9_j_0_reg;
reg [31:0] main_NodeBlock9_a_0;
reg [31:0] main_NodeBlock9_a_0_reg;
reg [31:0] main_NodeBlock9_b_0;
reg [31:0] main_NodeBlock9_b_0_reg;
reg [31:0] main_NodeBlock9_pos_a_X_0;
reg [31:0] main_NodeBlock9_pos_a_X_0_reg;
reg [31:0] main_NodeBlock9_pos_a_Y_0;
reg [31:0] main_NodeBlock9_pos_a_Y_0_reg;
reg [31:0] main_NodeBlock9_pos_b_X_0;
reg [31:0] main_NodeBlock9_pos_b_X_0_reg;
reg [31:0] main_NodeBlock9_pos_b_Y_0;
reg [31:0] main_NodeBlock9_pos_b_Y_0_reg;
reg [31:0] main_NodeBlock9_sum_mesh_0;
reg [31:0] main_NodeBlock9_sum_mesh_0_reg;
reg [31:0] main_NodeBlock9_sum_1hop_0;
reg [31:0] main_NodeBlock9_sum_1hop_0_reg;
reg [31:0] main_NodeBlock9_seed_0;
reg [31:0] main_NodeBlock9_seed_0_reg;
reg  main_NodeBlock9_Pivot10;
reg  main_NodeBlock7_Pivot8;
reg  main_NodeBlock5_Pivot6;
reg  main_LeafBlock3_SwitchLeaf4;
reg [31:0] main_NodeBlock9_backedge_state_0_be;
reg [31:0] main_NodeBlock9_backedge_state_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_i_0_be;
reg [31:0] main_NodeBlock9_backedge_i_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_j_0_be;
reg [31:0] main_NodeBlock9_backedge_j_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_a_0_be;
reg [31:0] main_NodeBlock9_backedge_a_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_b_0_be;
reg [31:0] main_NodeBlock9_backedge_b_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_seed_0_be;
reg [31:0] main_NodeBlock9_backedge_seed_0_be_reg;
reg  main_NodeBlock1_Pivot2;
reg  main_NodeBlock_Pivot;
reg  main_LeafBlock_SwitchLeaf;
reg [31:0] main_for_cond109_preheader_i_1573;
reg [31:0] main_for_cond109_preheader_i_1573_reg;
reg [28:0] main_for_cond109_preheader_bit_select9;
reg [31:0] main_for_cond109_preheader_sr_negate;
reg [31:0] main_for_cond109_preheader_bit_concat10;
reg [31:0] main_for_cond109_preheader_sr_add;
reg [31:0] main_for_cond109_preheader_sr_add_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113;
reg [31:0] main_for_cond109_preheader_0;
reg [31:0] main_for_cond109_preheader_0_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_1;
reg [31:0] main_for_cond109_preheader_1;
reg [31:0] main_for_cond109_preheader_1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_2;
reg [31:0] main_for_cond109_preheader_2;
reg [31:0] main_for_cond109_preheader_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_3_reg;
reg [31:0] main_for_cond109_preheader_3;
reg [31:0] main_for_cond109_preheader_3_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_4_reg;
reg [31:0] main_for_cond109_preheader_4;
reg [31:0] main_for_cond109_preheader_4_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_5_reg;
reg [31:0] main_for_cond109_preheader_5;
reg [31:0] main_for_cond109_preheader_5_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond109_preheader_arrayidx113_6_reg;
reg [31:0] main_for_cond109_preheader_6;
reg [31:0] main_for_cond109_preheader_6_reg;
reg  main_for_cond109_preheader_exitcond5;
reg  main_for_cond109_preheader_exitcond5_reg;
reg [31:0] main_for_body119_i_2574;
reg [31:0] main_for_body119_i_2574_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body119_arrayidx120;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body119_arrayidx121;
reg [31:0] main_for_body119_7;
reg [31:0] main_for_body119_7_reg;
reg  main_for_body119_exitcond6;
reg  main_for_body119_exitcond6_reg;
reg [31:0] main_for_end124_8;
reg [31:0] main_for_end124_8_reg;
reg [31:0] main_for_end124_sub_i;
reg [31:0] main_for_end124_xor2_i;
reg [3:0] main_for_end124_rem;
reg [28:0] main_for_end124_bit_select7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end124_arrayidx126;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end124_arrayidx126_reg;
reg [31:0] main_for_end124_xor2_i16;
reg [31:0] main_for_end124_xor2_i16_reg;
reg [3:0] main_for_end124_rem128;
reg [3:0] main_for_end124_rem128_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end124_arrayidx129;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end124_arrayidx129_reg;
reg [31:0] main_for_end124_add130;
reg [31:0] main_for_end124_add130_reg;
reg [4:0] main_for_end124_sr_negate7;
reg [31:0] main_for_end124_bit_concat8;
reg [31:0] main_for_end124_sr_add10;
reg [31:0] main_for_end124_sr_add10_reg;
reg [31:0] main_for_end124_arrayidx133_sum;
reg [31:0] main_for_end124_arrayidx133_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end124_arrayidx134;
reg  main_sw_bb135_cmp136;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx137;
reg [31:0] main_if_end_9;
reg [31:0] main_if_end_9_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx138;
reg [31:0] main_if_end_10;
reg [31:0] main_if_end_10_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx139;
reg [31:0] main_if_end_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx140;
reg [31:0] main_if_end_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx141;
reg [31:0] main_if_end_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx142;
reg [31:0] main_if_end_14;
reg  main_if_end_cmp143;
reg [1:0] main_if_end_1;
reg [1:0] main_if_end_1_reg;
reg  main_sw_bb146_cmp147;
reg [31:0] main_if_end149_sub_i14;
reg [31:0] main_if_end149_xor2_i15;
reg [3:0] main_if_end149_rem151;
reg [3:0] main_if_end149_rem151_reg;
reg [31:0] main_if_end149_add152;
reg [31:0] main_if_end149_add152_reg;
reg  main_if_end149_cmp153;
reg  main_if_end149_cmp153_reg;
reg  main_if_end149_cmp155;
reg  main_if_end149_cmp155_reg;
reg [31:0] main_if_then156_xor2_i13;
reg [3:0] main_if_then156_rem158;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then156_arrayidx159;
reg [31:0] main_if_then156_15;
reg [31:0] main_if_then156_15_reg;
reg [31:0] main_if_then156_add160;
reg [31:0] main_if_then156_add160_reg;
reg [31:0] main_if_then156_xor2_i12;
reg [31:0] main_if_then156_xor2_i12_reg;
reg [3:0] main_if_then156_rem163;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then156_arrayidx164;
reg [31:0] main_if_then156_16;
reg [31:0] main_if_then156_16_reg;
reg [31:0] main_if_then156_add165;
reg [31:0] main_if_then156_add166;
reg [31:0] main_if_then156_add166_reg;
reg  main_if_else167_cmp168;
reg [31:0] main_if_then169_xor2_i10;
reg [3:0] main_if_then169_rem171;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then169_arrayidx172;
reg [31:0] main_if_then169_17;
reg [31:0] main_if_then169_17_reg;
reg [31:0] main_if_then169_add173;
reg [31:0] main_if_then169_add173_reg;
reg [31:0] main_if_then169_xor2_i9;
reg [31:0] main_if_then169_xor2_i9_reg;
reg [3:0] main_if_then169_rem176;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then169_arrayidx177;
reg [31:0] main_if_then169_18;
reg [31:0] main_if_then169_18_reg;
reg [31:0] main_if_then169_add178;
reg [31:0] main_if_then169_add179;
reg [31:0] main_if_then169_add179_reg;
reg  main_if_else180_cmp181;
reg  main_if_else180_cmp181_reg;
reg [31:0] main_if_else180_xor2_i7;
reg [3:0] main_if_else180_rem184;
reg [3:0] main_if_else180_rem184_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then182_arrayidx185;
reg [31:0] main_if_then182_19;
reg [31:0] main_if_then182_add186;
reg [31:0] main_if_then182_add186_reg;
reg [31:0] main_if_then182_xor2_i6;
reg [3:0] main_if_then182_rem189;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then182_arrayidx190;
reg [31:0] main_if_then182_20;
reg [31:0] main_if_then182_20_reg;
reg [31:0] main_if_then182_add191;
reg [31:0] main_if_then182_add192;
reg [31:0] main_if_then182_add192_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else193_arrayidx196;
reg [31:0] main_if_else193_21;
reg [31:0] main_if_else193_add197;
reg [31:0] main_if_else193_add197_reg;
reg [31:0] main_if_else193_xor2_i4;
reg [3:0] main_if_else193_rem200;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else193_arrayidx201;
reg [31:0] main_if_else193_22;
reg [31:0] main_if_else193_22_reg;
reg [31:0] main_if_else193_add202;
reg [31:0] main_if_else193_add203;
reg [31:0] main_if_else193_add203_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then209_arrayidx210;
reg [31:0] main_if_then209_23;
reg [31:0] main_if_then209_add211;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then209_arrayidx212;
reg [31:0] main_if_then209_24;
reg [31:0] main_if_then209_add213;
reg  main_NodeBlock16_Pivot17;
reg  main_LeafBlock14_SwitchLeaf15;
reg  main_LeafBlock12_SwitchLeaf13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then216_arrayidx217;
reg [31:0] main_if_then216_25;
reg [31:0] main_if_then216_add218;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then216_arrayidx219;
reg [31:0] main_if_then216_26;
reg [31:0] main_if_then216_add220;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then223_arrayidx224;
reg [31:0] main_if_then223_27;
reg [31:0] main_if_then223_add225;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then223_arrayidx226;
reg [31:0] main_if_then223_28;
reg [31:0] main_if_then223_add227;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else228_arrayidx229;
reg [31:0] main_if_else228_29;
reg [31:0] main_if_else228_add230;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else228_arrayidx231;
reg [31:0] main_if_else228_30;
reg [31:0] main_if_else228_add232;
reg [31:0] main_if_end236_xi_0;
reg [31:0] main_if_end236_xi_0_reg;
reg [31:0] main_if_end236_xj_0;
reg [31:0] main_if_end236_xj_0_reg;
reg [31:0] main_if_end236_seed_1;
reg [31:0] main_if_end236_seed_1_reg;
reg [28:0] main_if_end236_bit_select5;
reg [31:0] main_if_end236_inc237;
reg [31:0] main_if_end236_inc237_reg;
reg [31:0] main_if_end236_sr_negate11;
reg [31:0] main_if_end236_bit_concat6;
reg [31:0] main_if_end236_sr_add13;
reg [31:0] main_if_end236_sr_add13_reg;
reg [31:0] main_if_end236_arrayidx238_sum;
reg [31:0] main_if_end236_arrayidx238_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx239;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx239_reg;
reg [31:0] main_if_end236_31;
reg  main_if_end236_cmp240;
reg  main_if_end236_32;
reg  main_if_end236_32_reg;
reg  main_if_end236_or_cond;
reg  main_if_end236_33;
reg  main_if_end236_33_reg;
reg  main_if_end236_or_cond561;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then248_arrayidx251;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then248_arrayidx252;
reg  main_if_else253_cmp254;
reg [31:0] main_if_end258_pos_a_X_1;
reg [31:0] main_if_end258_pos_a_X_1_reg;
reg [31:0] main_if_end258_pos_a_Y_1;
reg [31:0] main_if_end258_pos_a_Y_1_reg;
reg  main_if_end258_cmp259;
reg [1:0] main_if_end258_562;
reg [31:0] main_if_end258_inc237_1;
reg  main_sw_bb263_cmp264;
reg [31:0] main_if_then265_inc266;
reg [31:0] main_if_end267_sub_i1;
reg [31:0] main_if_end267_xor2_i2;
reg [3:0] main_if_end267_rem269;
reg [3:0] main_if_end267_rem269_reg;
reg [31:0] main_if_end267_add270;
reg [31:0] main_if_end267_add270_reg;
reg  main_if_end267_Pivot26;
reg  main_NodeBlock23_Pivot24;
reg  main_LeafBlock21_SwitchLeaf22;
reg  main_LeafBlock19_SwitchLeaf20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then272_arrayidx273;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then272_arrayidx275;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then279_arrayidx280;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then279_arrayidx282;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then286_arrayidx287;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then286_arrayidx289;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else291_arrayidx292;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else291_arrayidx294;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end298_pn_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end298_pn_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end298_pn560_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end298_pn560_in_reg;
reg [31:0] main_if_end298_pn560;
reg [31:0] main_if_end298_pn;
reg [31:0] main_if_end298_xj_1;
reg [31:0] main_if_end298_xj_1_reg;
reg [31:0] main_if_end298_xi_1;
reg [31:0] main_if_end298_xi_1_reg;
reg [28:0] main_if_end298_bit_select3;
reg [31:0] main_if_end298_sr_negate14;
reg [31:0] main_if_end298_sr_negate14_reg;
reg [31:0] main_if_end298_bit_concat4;
reg [31:0] main_if_end298_bit_concat4_reg;
reg [31:0] main_if_end298_sr_add16;
reg [31:0] main_if_end298_arrayidx300_sum;
reg [31:0] main_if_end298_arrayidx300_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end298_arrayidx301;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end298_arrayidx301_reg;
reg [31:0] main_if_end298_34;
reg  main_if_end298_cmp302;
reg  main_if_end298_35;
reg  main_if_end298_35_reg;
reg  main_if_end298_or_cond563;
reg  main_if_end298_36;
reg  main_if_end298_36_reg;
reg  main_if_end298_or_cond564;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then311_arrayidx314;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then311_arrayidx315;
reg [31:0] main_if_then311_inc316;
reg [31:0] main_if_then311_inc316_reg;
reg [31:0] main_if_else317_inc299;
reg  main_if_else317_cmp318;
reg  main_sw_bb328_cmp329;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end331_arrayidx332;
reg [31:0] main_if_end331_37;
reg [31:0] main_if_end331_37_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end331_arrayidx333;
reg [31:0] main_if_end331_38;
reg [31:0] main_if_end331_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end331_arrayidx334;
reg [31:0] main_if_end331_39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end331_arrayidx335;
reg [31:0] main_if_end331_40;
reg [31:0] main_if_end331_sub;
reg [31:0] main_if_end331_sub_reg;
reg  main_if_end331_bit_select2;
reg  main_if_end331_bit_select2_reg;
reg [31:0] main_if_end331_mul;
reg [31:0] main_if_end331_mul_reg;
reg [31:0] main_if_end331_mul_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end331_arrayidx339;
reg [31:0] main_if_end331_41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end331_arrayidx340;
reg [31:0] main_if_end331_42;
reg [31:0] main_if_end331_sub341;
reg [31:0] main_if_end331_sub341_reg;
reg  main_if_end331_bit_select1;
reg  main_if_end331_bit_select1_reg;
reg [31:0] main_if_end331_mul344;
reg [31:0] main_if_end331_mul344_reg;
reg [31:0] main_if_end331_diff_pos_y_0;
reg [31:0] main_if_end331_diff_pos_y_0_reg;
reg [31:0] main_if_end331_add346;
reg [31:0] main_if_end331_add346_reg;
reg [31:0] main_if_end331_newEarly_add348;
reg [31:0] main_if_end331_newEarly_add348_reg;
reg [31:0] main_if_end331_newCurOp_add348;
reg [31:0] main_if_end331_newCurOp_add348_reg;
reg [30:0] main_if_end331_div;
reg [3:0] main_if_end331_rem349;
reg [3:0] main_if_end331_rem349_reg;
reg [30:0] main_if_end331_div351;
reg [3:0] main_if_end331_rem352;
reg [31:0] main_if_end331_add353;
reg [31:0] main_if_end331_add353_reg;
reg [31:0] main_if_end331_newEarly_add354;
reg [31:0] main_if_end331_newEarly_add354_reg;
reg [31:0] main_if_end331_newEarly_sub355;
reg [31:0] main_if_end331_newEarly_add356;
reg [31:0] main_if_end331_newCurOp_add356;
reg [31:0] main_if_end331_inc357;
reg [31:0] main_if_end331_inc357_reg;
reg [2:0] main_for_cond361_preheader_i_3571;
reg [2:0] main_for_cond361_preheader_i_3571_reg;
reg [28:0] main_for_cond361_preheader_bit_select;
reg [3:0] main_for_cond361_preheader_sr_negate17;
reg [31:0] main_for_cond361_preheader_bit_concat;
reg [31:0] main_for_cond361_preheader_sr_add19;
reg [31:0] main_for_cond361_preheader_sr_add19_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365;
reg [31:0] main_for_cond361_preheader_43;
reg [31:0] main_for_cond361_preheader_43_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_1;
reg [31:0] main_for_cond361_preheader_44;
reg [31:0] main_for_cond361_preheader_44_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_2;
reg [31:0] main_for_cond361_preheader_45;
reg [31:0] main_for_cond361_preheader_45_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_3_reg;
reg [31:0] main_for_cond361_preheader_46;
reg [31:0] main_for_cond361_preheader_46_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_4_reg;
reg [31:0] main_for_cond361_preheader_47;
reg [31:0] main_for_cond361_preheader_47_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_5_reg;
reg [31:0] main_for_cond361_preheader_48;
reg [31:0] main_for_cond361_preheader_48_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond361_preheader_arrayidx365_6_reg;
reg [31:0] main_for_cond361_preheader_49;
reg [31:0] main_for_cond361_preheader_50;
reg [31:0] main_for_cond361_preheader_51;
reg [31:0] main_for_cond361_preheader_52;
reg [31:0] main_for_cond361_preheader_53;
reg [31:0] main_for_cond361_preheader_54;
reg [31:0] main_for_cond361_preheader_55;
reg [3:0] main_for_cond361_preheader_56;
reg [3:0] main_for_cond361_preheader_56_reg;
reg  main_for_cond361_preheader_exitcond;
reg  main_for_cond361_preheader_exitcond_reg;
reg  main_cleanup_retval_0;
reg  main_cleanup_retval_0_reg;
reg [5:0] main_entry_vla555_address_a;
reg  main_entry_vla555_write_enable_a;
reg [31:0] main_entry_vla555_in_a;
wire [31:0] main_entry_vla555_out_a;
reg [5:0] main_entry_vla555_address_b;
reg  main_entry_vla555_write_enable_b;
reg [31:0] main_entry_vla555_in_b;
wire [31:0] main_entry_vla555_out_b;
reg [5:0] main_entry_vla1556_address_a;
reg  main_entry_vla1556_write_enable_a;
reg [31:0] main_entry_vla1556_in_a;
wire [31:0] main_entry_vla1556_out_a;
reg [5:0] main_entry_vla1556_address_b;
reg  main_entry_vla1556_write_enable_b;
reg [31:0] main_entry_vla1556_in_b;
wire [31:0] main_entry_vla1556_out_b;
reg [5:0] main_entry_vla2557_address_a;
reg  main_entry_vla2557_write_enable_a;
reg [31:0] main_entry_vla2557_in_a;
wire [31:0] main_entry_vla2557_out_a;
reg [5:0] main_entry_vla2557_address_b;
reg  main_entry_vla2557_write_enable_b;
reg [31:0] main_entry_vla2557_in_b;
wire [31:0] main_entry_vla2557_out_b;
reg [5:0] main_entry_vla3558_address_a;
reg  main_entry_vla3558_write_enable_a;
reg [31:0] main_entry_vla3558_in_a;
wire [31:0] main_entry_vla3558_out_a;
reg [5:0] main_entry_vla3558_address_b;
reg  main_entry_vla3558_write_enable_b;
reg [31:0] main_entry_vla3558_in_b;
wire [31:0] main_entry_vla3558_out_b;
reg [5:0] main_entry_vla4559_address_a;
reg  main_entry_vla4559_write_enable_a;
reg [31:0] main_entry_vla4559_in_a;
wire [31:0] main_entry_vla4559_out_a;
reg [5:0] main_entry_vla4559_address_b;
reg  main_entry_vla4559_write_enable_b;
reg [31:0] main_entry_vla4559_in_b;
wire [31:0] main_entry_vla4559_out_b;
reg [31:0] main_signed_divide_32_0_op0;
reg [3:0] main_signed_divide_32_0_op1;
reg  main_signed_divide_32_0_inst_clock;
reg  main_signed_divide_32_0_inst_aclr;
reg  main_signed_divide_32_0_inst_clken;
reg [31:0] main_signed_divide_32_0_inst_numer;
reg [3:0] main_signed_divide_32_0_inst_denom;
wire [31:0] main_signed_divide_32_0_inst_quotient;
wire [3:0] main_signed_divide_32_0_inst_remain;
reg [31:0] divide_main_if_end331_div_temp_out;
reg  divide_main_if_end331_div_en;
reg [30:0] divide_main_if_end331_div_out;
reg [30:0] main_signed_divide_32_0;
reg [31:0] main_signed_modulus_32_0_op0;
reg [4:0] main_signed_modulus_32_0_op1;
reg  main_signed_modulus_32_0_inst_clock;
reg  main_signed_modulus_32_0_inst_aclr;
reg  main_signed_modulus_32_0_inst_clken;
reg [31:0] main_signed_modulus_32_0_inst_numer;
reg [4:0] main_signed_modulus_32_0_inst_denom;
wire [31:0] main_signed_modulus_32_0_inst_quotient;
wire [4:0] main_signed_modulus_32_0_inst_remain;
reg [4:0] divide_main_if_end331_rem349_temp_out;
reg  divide_main_if_end331_rem349_en;
reg [3:0] divide_main_if_end331_rem349_out;
reg [3:0] main_signed_modulus_32_0;
wire [3:0] main_NodeBlock9_Pivot10_op1_temp;
wire [4:0] main_NodeBlock7_Pivot8_op1_temp;
wire [4:0] main_NodeBlock5_Pivot6_op1_temp;
wire [2:0] main_NodeBlock1_Pivot2_op1_temp;
wire [3:0] main_NodeBlock_Pivot_op1_temp;
wire [2:0] main_for_cond109_preheader_bit_concat10_bit_select_operand_2;
reg [28:0] main_for_end124_rem_width_extended;
wire [2:0] main_for_end124_bit_concat8_bit_select_operand_2;
wire [3:0] main_NodeBlock16_Pivot17_op1_temp;
wire [2:0] main_if_end236_bit_concat6_bit_select_operand_2;
wire [7:0] main_if_else253_cmp254_op1_temp;
wire [2:0] main_if_end267_Pivot26_op1_temp;
wire [3:0] main_NodeBlock23_Pivot24_op1_temp;
wire [2:0] main_if_end298_bit_concat4_bit_select_operand_2;
wire [7:0] main_if_else317_cmp318_op1_temp;
reg [28:0] main_for_cond361_preheader_i_3571_reg_width_extended;
wire [2:0] main_for_cond361_preheader_bit_concat_bit_select_operand_2;

/*   %div = sdiv i32 %mul.sub, 2, !dbg !381, !MSB !190, !LSB !67, !extendFrom !382*/
lpm_divide main_signed_divide_32_0_inst (
	.clock (main_signed_divide_32_0_inst_clock),
	.aclr (main_signed_divide_32_0_inst_aclr),
	.clken (main_signed_divide_32_0_inst_clken),
	.numer (main_signed_divide_32_0_inst_numer),
	.denom (main_signed_divide_32_0_inst_denom),
	.quotient (main_signed_divide_32_0_inst_quotient),
	.remain (main_signed_divide_32_0_inst_remain)
);

defparam
	main_signed_divide_32_0_inst.lpm_widthn = 32,
	main_signed_divide_32_0_inst.lpm_widthd = 4,
	main_signed_divide_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_divide_32_0_inst.lpm_pipeline = 32;

/*   %rem349 = srem i32 %mul.sub, 2, !dbg !381, !MSB !383, !LSB !67, !extendFrom !383*/
lpm_divide main_signed_modulus_32_0_inst (
	.clock (main_signed_modulus_32_0_inst_clock),
	.aclr (main_signed_modulus_32_0_inst_aclr),
	.clken (main_signed_modulus_32_0_inst_clken),
	.numer (main_signed_modulus_32_0_inst_numer),
	.denom (main_signed_modulus_32_0_inst_denom),
	.quotient (main_signed_modulus_32_0_inst_quotient),
	.remain (main_signed_modulus_32_0_inst_remain)
);

defparam
	main_signed_modulus_32_0_inst.lpm_widthn = 32,
	main_signed_modulus_32_0_inst.lpm_widthd = 5,
	main_signed_modulus_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_modulus_32_0_inst.lpm_pipeline = 32;



//   %vla555 = alloca [52 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla555 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla555_address_a ),
	.wren_a( main_entry_vla555_write_enable_a ),
	.data_a( main_entry_vla555_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla555_out_a ),
	.address_b( main_entry_vla555_address_b ),
	.wren_b( main_entry_vla555_write_enable_b ),
	.data_b( main_entry_vla555_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla555_out_b )
);
defparam main_entry_vla555.width_a = 32;
defparam main_entry_vla555.widthad_a = 6;
defparam main_entry_vla555.width_be_a = 4;
defparam main_entry_vla555.numwords_a = 52;
defparam main_entry_vla555.width_b = 32;
defparam main_entry_vla555.widthad_b = 6;
defparam main_entry_vla555.width_be_b = 4;
defparam main_entry_vla555.numwords_b = 52;
defparam main_entry_vla555.latency = 1;


//   %vla1556 = alloca [52 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla1556 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla1556_address_a ),
	.wren_a( main_entry_vla1556_write_enable_a ),
	.data_a( main_entry_vla1556_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla1556_out_a ),
	.address_b( main_entry_vla1556_address_b ),
	.wren_b( main_entry_vla1556_write_enable_b ),
	.data_b( main_entry_vla1556_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla1556_out_b )
);
defparam main_entry_vla1556.width_a = 32;
defparam main_entry_vla1556.widthad_a = 6;
defparam main_entry_vla1556.width_be_a = 4;
defparam main_entry_vla1556.numwords_a = 52;
defparam main_entry_vla1556.width_b = 32;
defparam main_entry_vla1556.widthad_b = 6;
defparam main_entry_vla1556.width_be_b = 4;
defparam main_entry_vla1556.numwords_b = 52;
defparam main_entry_vla1556.latency = 1;


//   %vla2557 = alloca [46 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla2557 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla2557_address_a ),
	.wren_a( main_entry_vla2557_write_enable_a ),
	.data_a( main_entry_vla2557_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla2557_out_a ),
	.address_b( main_entry_vla2557_address_b ),
	.wren_b( main_entry_vla2557_write_enable_b ),
	.data_b( main_entry_vla2557_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla2557_out_b )
);
defparam main_entry_vla2557.width_a = 32;
defparam main_entry_vla2557.widthad_a = 6;
defparam main_entry_vla2557.width_be_a = 4;
defparam main_entry_vla2557.numwords_a = 46;
defparam main_entry_vla2557.width_b = 32;
defparam main_entry_vla2557.widthad_b = 6;
defparam main_entry_vla2557.width_be_b = 4;
defparam main_entry_vla2557.numwords_b = 46;
defparam main_entry_vla2557.latency = 1;


//   %vla3558 = alloca [46 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla3558 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla3558_address_a ),
	.wren_a( main_entry_vla3558_write_enable_a ),
	.data_a( main_entry_vla3558_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla3558_out_a ),
	.address_b( main_entry_vla3558_address_b ),
	.wren_b( main_entry_vla3558_write_enable_b ),
	.data_b( main_entry_vla3558_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla3558_out_b )
);
defparam main_entry_vla3558.width_a = 32;
defparam main_entry_vla3558.widthad_a = 6;
defparam main_entry_vla3558.width_be_a = 4;
defparam main_entry_vla3558.numwords_a = 46;
defparam main_entry_vla3558.width_b = 32;
defparam main_entry_vla3558.widthad_b = 6;
defparam main_entry_vla3558.width_be_b = 4;
defparam main_entry_vla3558.numwords_b = 46;
defparam main_entry_vla3558.latency = 1;


//   %vla4559 = alloca [49 x i32], align 4, !dbg !69, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla4559 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla4559_address_a ),
	.wren_a( main_entry_vla4559_write_enable_a ),
	.data_a( main_entry_vla4559_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla4559_out_a ),
	.address_b( main_entry_vla4559_address_b ),
	.wren_b( main_entry_vla4559_write_enable_b ),
	.data_b( main_entry_vla4559_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla4559_out_b )
);
defparam main_entry_vla4559.width_a = 32;
defparam main_entry_vla4559.widthad_a = 6;
defparam main_entry_vla4559.width_be_a = 4;
defparam main_entry_vla4559.numwords_a = 49;
defparam main_entry_vla4559.width_b = 32;
defparam main_entry_vla4559.widthad_b = 6;
defparam main_entry_vla4559.width_be_b = 4;
defparam main_entry_vla4559.numwords_b = 49;
defparam main_entry_vla4559.latency = 1;

/* Unsynthesizable Statements */
/* synthesis translate_off */
always @(posedge clk)
	if (!fsm_stall) begin
	if ((cur_state == LEGUP_F_main_BB_if_then255_313)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_if_then319_366)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_407)) begin
		$write("%3d ", $signed(main_for_cond361_preheader_49));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond361_preheader_49) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_408)) begin
		$write("%3d ", $signed(main_for_cond361_preheader_50));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond361_preheader_50) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_408)) begin
		$write("%3d ", $signed(main_for_cond361_preheader_51));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond361_preheader_51) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_409)) begin
		$write("%3d ", $signed(main_for_cond361_preheader_52));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond361_preheader_52) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_409)) begin
		$write("%3d ", $signed(main_for_cond361_preheader_53));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond361_preheader_53) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_410)) begin
		$write("%3d ", $signed(main_for_cond361_preheader_54));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond361_preheader_54) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_410)) begin
		$write("%3d ", $signed(main_for_cond361_preheader_55));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond361_preheader_55) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_410)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_end373_411)) begin
		$write("\nEvaluation = %d\nEvaluation 1-hop = %d\n", $signed(main_NodeBlock9_sum_mesh_0_reg), $signed(main_NodeBlock9_sum_1hop_0_reg));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_mesh_0_reg) === 1'bX) finish <= 0;
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_1hop_0_reg) === 1'bX) finish <= 0;
	end
end
/* synthesis translate_on */
always @(posedge clk) begin
if (reset == 1'b1)
	cur_state <= LEGUP_0;
else if (!fsm_stall)
	cur_state <= next_state;
end

always @(*)
begin
next_state = cur_state;
case(cur_state)  /* synthesis parallel_case */
LEGUP_0:
	if ((fsm_stall == 1'd0) && (start == 1'd1))
		next_state = LEGUP_F_main_BB_entry_1;
LEGUP_F_main_BB_LeafBlock12_296:
	if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then216_297;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else228_303;
LEGUP_F_main_BB_LeafBlock14_295:
	if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then223_300;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else228_303;
LEGUP_F_main_BB_LeafBlock19_352:
	if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then272_353;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else291_356;
LEGUP_F_main_BB_LeafBlock21_351:
	if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then286_355;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else291_356;
LEGUP_F_main_BB_LeafBlock3_5:
	if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond361_preheader_preheader_7;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_LeafBlock_10:
	if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb_11;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_NodeBlock16_294:
	if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock12_296;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock14_295;
LEGUP_F_main_BB_NodeBlock1_8:
	if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock_10;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock_9;
LEGUP_F_main_BB_NodeBlock23_350:
	if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then279_354;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock21_351;
LEGUP_F_main_BB_NodeBlock5_4:
	if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb328_367;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock3_5;
LEGUP_F_main_BB_NodeBlock7_3:
	if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb263_315;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock5_4;
LEGUP_F_main_BB_NodeBlock9_2:
	if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock1_8;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock7_3;
LEGUP_F_main_BB_NodeBlock9_backedge_6:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_NodeBlock_9:
	if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb135_83;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd0))
		next_state = LEGUP_F_main_BB_sw_bb146_87;
LEGUP_F_main_BB_cleanup_412:
		next_state = LEGUP_0;
LEGUP_F_main_BB_entry_1:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_for_body119_45:
		next_state = LEGUP_F_main_BB_for_body119_46;
LEGUP_F_main_BB_for_body119_46:
	if ((fsm_stall == 1'd0) && (main_for_body119_exitcond6_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end124_47;
	else if ((fsm_stall == 1'd0) && (main_for_body119_exitcond6_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body119_45;
LEGUP_F_main_BB_for_body119_preheader_44:
		next_state = LEGUP_F_main_BB_for_body119_45;
LEGUP_F_main_BB_for_cond109_preheader_38:
		next_state = LEGUP_F_main_BB_for_cond109_preheader_39;
LEGUP_F_main_BB_for_cond109_preheader_39:
		next_state = LEGUP_F_main_BB_for_cond109_preheader_40;
LEGUP_F_main_BB_for_cond109_preheader_40:
		next_state = LEGUP_F_main_BB_for_cond109_preheader_41;
LEGUP_F_main_BB_for_cond109_preheader_41:
		next_state = LEGUP_F_main_BB_for_cond109_preheader_42;
LEGUP_F_main_BB_for_cond109_preheader_42:
		next_state = LEGUP_F_main_BB_for_cond109_preheader_43;
LEGUP_F_main_BB_for_cond109_preheader_43:
	if ((fsm_stall == 1'd0) && (main_for_cond109_preheader_exitcond5_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_body119_preheader_44;
	else if ((fsm_stall == 1'd0) && (main_for_cond109_preheader_exitcond5_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond109_preheader_38;
LEGUP_F_main_BB_for_cond361_preheader_405:
		next_state = LEGUP_F_main_BB_for_cond361_preheader_406;
LEGUP_F_main_BB_for_cond361_preheader_406:
		next_state = LEGUP_F_main_BB_for_cond361_preheader_407;
LEGUP_F_main_BB_for_cond361_preheader_407:
		next_state = LEGUP_F_main_BB_for_cond361_preheader_408;
LEGUP_F_main_BB_for_cond361_preheader_408:
		next_state = LEGUP_F_main_BB_for_cond361_preheader_409;
LEGUP_F_main_BB_for_cond361_preheader_409:
		next_state = LEGUP_F_main_BB_for_cond361_preheader_410;
LEGUP_F_main_BB_for_cond361_preheader_410:
	if ((fsm_stall == 1'd0) && (main_for_cond361_preheader_exitcond_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end373_411;
	else if ((fsm_stall == 1'd0) && (main_for_cond361_preheader_exitcond_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond361_preheader_405;
LEGUP_F_main_BB_for_cond361_preheader_preheader_7:
		next_state = LEGUP_F_main_BB_for_cond361_preheader_405;
LEGUP_F_main_BB_for_end124_47:
		next_state = LEGUP_F_main_BB_for_end124_48;
LEGUP_F_main_BB_for_end124_48:
		next_state = LEGUP_F_main_BB_for_end124_49;
LEGUP_F_main_BB_for_end124_49:
		next_state = LEGUP_F_main_BB_for_end124_50;
LEGUP_F_main_BB_for_end124_50:
		next_state = LEGUP_F_main_BB_for_end124_51;
LEGUP_F_main_BB_for_end124_51:
		next_state = LEGUP_F_main_BB_for_end124_52;
LEGUP_F_main_BB_for_end124_52:
		next_state = LEGUP_F_main_BB_for_end124_53;
LEGUP_F_main_BB_for_end124_53:
		next_state = LEGUP_F_main_BB_for_end124_54;
LEGUP_F_main_BB_for_end124_54:
		next_state = LEGUP_F_main_BB_for_end124_55;
LEGUP_F_main_BB_for_end124_55:
		next_state = LEGUP_F_main_BB_for_end124_56;
LEGUP_F_main_BB_for_end124_56:
		next_state = LEGUP_F_main_BB_for_end124_57;
LEGUP_F_main_BB_for_end124_57:
		next_state = LEGUP_F_main_BB_for_end124_58;
LEGUP_F_main_BB_for_end124_58:
		next_state = LEGUP_F_main_BB_for_end124_59;
LEGUP_F_main_BB_for_end124_59:
		next_state = LEGUP_F_main_BB_for_end124_60;
LEGUP_F_main_BB_for_end124_60:
		next_state = LEGUP_F_main_BB_for_end124_61;
LEGUP_F_main_BB_for_end124_61:
		next_state = LEGUP_F_main_BB_for_end124_62;
LEGUP_F_main_BB_for_end124_62:
		next_state = LEGUP_F_main_BB_for_end124_63;
LEGUP_F_main_BB_for_end124_63:
		next_state = LEGUP_F_main_BB_for_end124_64;
LEGUP_F_main_BB_for_end124_64:
		next_state = LEGUP_F_main_BB_for_end124_65;
LEGUP_F_main_BB_for_end124_65:
		next_state = LEGUP_F_main_BB_for_end124_66;
LEGUP_F_main_BB_for_end124_66:
		next_state = LEGUP_F_main_BB_for_end124_67;
LEGUP_F_main_BB_for_end124_67:
		next_state = LEGUP_F_main_BB_for_end124_68;
LEGUP_F_main_BB_for_end124_68:
		next_state = LEGUP_F_main_BB_for_end124_69;
LEGUP_F_main_BB_for_end124_69:
		next_state = LEGUP_F_main_BB_for_end124_70;
LEGUP_F_main_BB_for_end124_70:
		next_state = LEGUP_F_main_BB_for_end124_71;
LEGUP_F_main_BB_for_end124_71:
		next_state = LEGUP_F_main_BB_for_end124_72;
LEGUP_F_main_BB_for_end124_72:
		next_state = LEGUP_F_main_BB_for_end124_73;
LEGUP_F_main_BB_for_end124_73:
		next_state = LEGUP_F_main_BB_for_end124_74;
LEGUP_F_main_BB_for_end124_74:
		next_state = LEGUP_F_main_BB_for_end124_75;
LEGUP_F_main_BB_for_end124_75:
		next_state = LEGUP_F_main_BB_for_end124_76;
LEGUP_F_main_BB_for_end124_76:
		next_state = LEGUP_F_main_BB_for_end124_77;
LEGUP_F_main_BB_for_end124_77:
		next_state = LEGUP_F_main_BB_for_end124_78;
LEGUP_F_main_BB_for_end124_78:
		next_state = LEGUP_F_main_BB_for_end124_79;
LEGUP_F_main_BB_for_end124_79:
		next_state = LEGUP_F_main_BB_for_end124_80;
LEGUP_F_main_BB_for_end124_80:
		next_state = LEGUP_F_main_BB_for_end124_81;
LEGUP_F_main_BB_for_end124_81:
		next_state = LEGUP_F_main_BB_for_end124_82;
LEGUP_F_main_BB_for_end124_82:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_for_end373_411:
		next_state = LEGUP_F_main_BB_cleanup_412;
LEGUP_F_main_BB_if_else167_156:
	if ((fsm_stall == 1'd0) && (main_if_else167_cmp168 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then169_157;
	else if ((fsm_stall == 1'd0) && (main_if_else167_cmp168 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else180_191;
LEGUP_F_main_BB_if_else180_191:
		next_state = LEGUP_F_main_BB_if_else180_192;
LEGUP_F_main_BB_if_else180_192:
		next_state = LEGUP_F_main_BB_if_else180_193;
LEGUP_F_main_BB_if_else180_193:
		next_state = LEGUP_F_main_BB_if_else180_194;
LEGUP_F_main_BB_if_else180_194:
		next_state = LEGUP_F_main_BB_if_else180_195;
LEGUP_F_main_BB_if_else180_195:
		next_state = LEGUP_F_main_BB_if_else180_196;
LEGUP_F_main_BB_if_else180_196:
		next_state = LEGUP_F_main_BB_if_else180_197;
LEGUP_F_main_BB_if_else180_197:
		next_state = LEGUP_F_main_BB_if_else180_198;
LEGUP_F_main_BB_if_else180_198:
		next_state = LEGUP_F_main_BB_if_else180_199;
LEGUP_F_main_BB_if_else180_199:
		next_state = LEGUP_F_main_BB_if_else180_200;
LEGUP_F_main_BB_if_else180_200:
		next_state = LEGUP_F_main_BB_if_else180_201;
LEGUP_F_main_BB_if_else180_201:
		next_state = LEGUP_F_main_BB_if_else180_202;
LEGUP_F_main_BB_if_else180_202:
		next_state = LEGUP_F_main_BB_if_else180_203;
LEGUP_F_main_BB_if_else180_203:
		next_state = LEGUP_F_main_BB_if_else180_204;
LEGUP_F_main_BB_if_else180_204:
		next_state = LEGUP_F_main_BB_if_else180_205;
LEGUP_F_main_BB_if_else180_205:
		next_state = LEGUP_F_main_BB_if_else180_206;
LEGUP_F_main_BB_if_else180_206:
		next_state = LEGUP_F_main_BB_if_else180_207;
LEGUP_F_main_BB_if_else180_207:
		next_state = LEGUP_F_main_BB_if_else180_208;
LEGUP_F_main_BB_if_else180_208:
		next_state = LEGUP_F_main_BB_if_else180_209;
LEGUP_F_main_BB_if_else180_209:
		next_state = LEGUP_F_main_BB_if_else180_210;
LEGUP_F_main_BB_if_else180_210:
		next_state = LEGUP_F_main_BB_if_else180_211;
LEGUP_F_main_BB_if_else180_211:
		next_state = LEGUP_F_main_BB_if_else180_212;
LEGUP_F_main_BB_if_else180_212:
		next_state = LEGUP_F_main_BB_if_else180_213;
LEGUP_F_main_BB_if_else180_213:
		next_state = LEGUP_F_main_BB_if_else180_214;
LEGUP_F_main_BB_if_else180_214:
		next_state = LEGUP_F_main_BB_if_else180_215;
LEGUP_F_main_BB_if_else180_215:
		next_state = LEGUP_F_main_BB_if_else180_216;
LEGUP_F_main_BB_if_else180_216:
		next_state = LEGUP_F_main_BB_if_else180_217;
LEGUP_F_main_BB_if_else180_217:
		next_state = LEGUP_F_main_BB_if_else180_218;
LEGUP_F_main_BB_if_else180_218:
		next_state = LEGUP_F_main_BB_if_else180_219;
LEGUP_F_main_BB_if_else180_219:
		next_state = LEGUP_F_main_BB_if_else180_220;
LEGUP_F_main_BB_if_else180_220:
		next_state = LEGUP_F_main_BB_if_else180_221;
LEGUP_F_main_BB_if_else180_221:
		next_state = LEGUP_F_main_BB_if_else180_222;
LEGUP_F_main_BB_if_else180_222:
		next_state = LEGUP_F_main_BB_if_else180_223;
LEGUP_F_main_BB_if_else180_223:
	if ((fsm_stall == 1'd0) && (main_if_else180_cmp181_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then182_224;
	else if ((fsm_stall == 1'd0) && (main_if_else180_cmp181_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else193_257;
LEGUP_F_main_BB_if_else193_257:
		next_state = LEGUP_F_main_BB_if_else193_258;
LEGUP_F_main_BB_if_else193_258:
		next_state = LEGUP_F_main_BB_if_else193_259;
LEGUP_F_main_BB_if_else193_259:
		next_state = LEGUP_F_main_BB_if_else193_260;
LEGUP_F_main_BB_if_else193_260:
		next_state = LEGUP_F_main_BB_if_else193_261;
LEGUP_F_main_BB_if_else193_261:
		next_state = LEGUP_F_main_BB_if_else193_262;
LEGUP_F_main_BB_if_else193_262:
		next_state = LEGUP_F_main_BB_if_else193_263;
LEGUP_F_main_BB_if_else193_263:
		next_state = LEGUP_F_main_BB_if_else193_264;
LEGUP_F_main_BB_if_else193_264:
		next_state = LEGUP_F_main_BB_if_else193_265;
LEGUP_F_main_BB_if_else193_265:
		next_state = LEGUP_F_main_BB_if_else193_266;
LEGUP_F_main_BB_if_else193_266:
		next_state = LEGUP_F_main_BB_if_else193_267;
LEGUP_F_main_BB_if_else193_267:
		next_state = LEGUP_F_main_BB_if_else193_268;
LEGUP_F_main_BB_if_else193_268:
		next_state = LEGUP_F_main_BB_if_else193_269;
LEGUP_F_main_BB_if_else193_269:
		next_state = LEGUP_F_main_BB_if_else193_270;
LEGUP_F_main_BB_if_else193_270:
		next_state = LEGUP_F_main_BB_if_else193_271;
LEGUP_F_main_BB_if_else193_271:
		next_state = LEGUP_F_main_BB_if_else193_272;
LEGUP_F_main_BB_if_else193_272:
		next_state = LEGUP_F_main_BB_if_else193_273;
LEGUP_F_main_BB_if_else193_273:
		next_state = LEGUP_F_main_BB_if_else193_274;
LEGUP_F_main_BB_if_else193_274:
		next_state = LEGUP_F_main_BB_if_else193_275;
LEGUP_F_main_BB_if_else193_275:
		next_state = LEGUP_F_main_BB_if_else193_276;
LEGUP_F_main_BB_if_else193_276:
		next_state = LEGUP_F_main_BB_if_else193_277;
LEGUP_F_main_BB_if_else193_277:
		next_state = LEGUP_F_main_BB_if_else193_278;
LEGUP_F_main_BB_if_else193_278:
		next_state = LEGUP_F_main_BB_if_else193_279;
LEGUP_F_main_BB_if_else193_279:
		next_state = LEGUP_F_main_BB_if_else193_280;
LEGUP_F_main_BB_if_else193_280:
		next_state = LEGUP_F_main_BB_if_else193_281;
LEGUP_F_main_BB_if_else193_281:
		next_state = LEGUP_F_main_BB_if_else193_282;
LEGUP_F_main_BB_if_else193_282:
		next_state = LEGUP_F_main_BB_if_else193_283;
LEGUP_F_main_BB_if_else193_283:
		next_state = LEGUP_F_main_BB_if_else193_284;
LEGUP_F_main_BB_if_else193_284:
		next_state = LEGUP_F_main_BB_if_else193_285;
LEGUP_F_main_BB_if_else193_285:
		next_state = LEGUP_F_main_BB_if_else193_286;
LEGUP_F_main_BB_if_else193_286:
		next_state = LEGUP_F_main_BB_if_else193_287;
LEGUP_F_main_BB_if_else193_287:
		next_state = LEGUP_F_main_BB_if_else193_288;
LEGUP_F_main_BB_if_else193_288:
		next_state = LEGUP_F_main_BB_if_else193_289;
LEGUP_F_main_BB_if_else193_289:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_else207_290:
	if ((fsm_stall == 1'd0) && (main_if_end149_cmp155_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then209_291;
	else if ((fsm_stall == 1'd0) && (main_if_end149_cmp155_reg == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock16_294;
LEGUP_F_main_BB_if_else228_303:
		next_state = LEGUP_F_main_BB_if_else228_304;
LEGUP_F_main_BB_if_else228_304:
		next_state = LEGUP_F_main_BB_if_else228_305;
LEGUP_F_main_BB_if_else228_305:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_else253_312:
	if ((fsm_stall == 1'd0) && (main_if_else253_cmp254 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then255_313;
	else if ((fsm_stall == 1'd0) && (main_if_else253_cmp254 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end258_314;
LEGUP_F_main_BB_if_else291_356:
		next_state = LEGUP_F_main_BB_if_end298_357;
LEGUP_F_main_BB_if_else317_365:
	if ((fsm_stall == 1'd0) && (main_if_else317_cmp318 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then319_366;
	else if ((fsm_stall == 1'd0) && (main_if_else317_cmp318 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end149_100:
		next_state = LEGUP_F_main_BB_if_end149_101;
LEGUP_F_main_BB_if_end149_101:
		next_state = LEGUP_F_main_BB_if_end149_102;
LEGUP_F_main_BB_if_end149_102:
		next_state = LEGUP_F_main_BB_if_end149_103;
LEGUP_F_main_BB_if_end149_103:
		next_state = LEGUP_F_main_BB_if_end149_104;
LEGUP_F_main_BB_if_end149_104:
		next_state = LEGUP_F_main_BB_if_end149_105;
LEGUP_F_main_BB_if_end149_105:
		next_state = LEGUP_F_main_BB_if_end149_106;
LEGUP_F_main_BB_if_end149_106:
		next_state = LEGUP_F_main_BB_if_end149_107;
LEGUP_F_main_BB_if_end149_107:
		next_state = LEGUP_F_main_BB_if_end149_108;
LEGUP_F_main_BB_if_end149_108:
		next_state = LEGUP_F_main_BB_if_end149_109;
LEGUP_F_main_BB_if_end149_109:
		next_state = LEGUP_F_main_BB_if_end149_110;
LEGUP_F_main_BB_if_end149_110:
		next_state = LEGUP_F_main_BB_if_end149_111;
LEGUP_F_main_BB_if_end149_111:
		next_state = LEGUP_F_main_BB_if_end149_112;
LEGUP_F_main_BB_if_end149_112:
		next_state = LEGUP_F_main_BB_if_end149_113;
LEGUP_F_main_BB_if_end149_113:
		next_state = LEGUP_F_main_BB_if_end149_114;
LEGUP_F_main_BB_if_end149_114:
		next_state = LEGUP_F_main_BB_if_end149_115;
LEGUP_F_main_BB_if_end149_115:
		next_state = LEGUP_F_main_BB_if_end149_116;
LEGUP_F_main_BB_if_end149_116:
		next_state = LEGUP_F_main_BB_if_end149_117;
LEGUP_F_main_BB_if_end149_117:
		next_state = LEGUP_F_main_BB_if_end149_118;
LEGUP_F_main_BB_if_end149_118:
		next_state = LEGUP_F_main_BB_if_end149_119;
LEGUP_F_main_BB_if_end149_119:
		next_state = LEGUP_F_main_BB_if_end149_120;
LEGUP_F_main_BB_if_end149_120:
	if ((fsm_stall == 1'd0) && (main_if_end149_cmp153_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then154_121;
	else if ((fsm_stall == 1'd0) && (main_if_end149_cmp153_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else207_290;
LEGUP_F_main_BB_if_end149_88:
		next_state = LEGUP_F_main_BB_if_end149_89;
LEGUP_F_main_BB_if_end149_89:
		next_state = LEGUP_F_main_BB_if_end149_90;
LEGUP_F_main_BB_if_end149_90:
		next_state = LEGUP_F_main_BB_if_end149_91;
LEGUP_F_main_BB_if_end149_91:
		next_state = LEGUP_F_main_BB_if_end149_92;
LEGUP_F_main_BB_if_end149_92:
		next_state = LEGUP_F_main_BB_if_end149_93;
LEGUP_F_main_BB_if_end149_93:
		next_state = LEGUP_F_main_BB_if_end149_94;
LEGUP_F_main_BB_if_end149_94:
		next_state = LEGUP_F_main_BB_if_end149_95;
LEGUP_F_main_BB_if_end149_95:
		next_state = LEGUP_F_main_BB_if_end149_96;
LEGUP_F_main_BB_if_end149_96:
		next_state = LEGUP_F_main_BB_if_end149_97;
LEGUP_F_main_BB_if_end149_97:
		next_state = LEGUP_F_main_BB_if_end149_98;
LEGUP_F_main_BB_if_end149_98:
		next_state = LEGUP_F_main_BB_if_end149_99;
LEGUP_F_main_BB_if_end149_99:
		next_state = LEGUP_F_main_BB_if_end149_100;
LEGUP_F_main_BB_if_end236_306:
		next_state = LEGUP_F_main_BB_if_end236_307;
LEGUP_F_main_BB_if_end236_307:
		next_state = LEGUP_F_main_BB_if_end236_308;
LEGUP_F_main_BB_if_end236_308:
		next_state = LEGUP_F_main_BB_if_end236_309;
LEGUP_F_main_BB_if_end236_309:
	if ((fsm_stall == 1'd0) && (main_if_end236_or_cond561 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then248_310;
	else if ((fsm_stall == 1'd0) && (main_if_end236_or_cond561 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else253_312;
LEGUP_F_main_BB_if_end258_314:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end267_317:
		next_state = LEGUP_F_main_BB_if_end267_318;
LEGUP_F_main_BB_if_end267_318:
		next_state = LEGUP_F_main_BB_if_end267_319;
LEGUP_F_main_BB_if_end267_319:
		next_state = LEGUP_F_main_BB_if_end267_320;
LEGUP_F_main_BB_if_end267_320:
		next_state = LEGUP_F_main_BB_if_end267_321;
LEGUP_F_main_BB_if_end267_321:
		next_state = LEGUP_F_main_BB_if_end267_322;
LEGUP_F_main_BB_if_end267_322:
		next_state = LEGUP_F_main_BB_if_end267_323;
LEGUP_F_main_BB_if_end267_323:
		next_state = LEGUP_F_main_BB_if_end267_324;
LEGUP_F_main_BB_if_end267_324:
		next_state = LEGUP_F_main_BB_if_end267_325;
LEGUP_F_main_BB_if_end267_325:
		next_state = LEGUP_F_main_BB_if_end267_326;
LEGUP_F_main_BB_if_end267_326:
		next_state = LEGUP_F_main_BB_if_end267_327;
LEGUP_F_main_BB_if_end267_327:
		next_state = LEGUP_F_main_BB_if_end267_328;
LEGUP_F_main_BB_if_end267_328:
		next_state = LEGUP_F_main_BB_if_end267_329;
LEGUP_F_main_BB_if_end267_329:
		next_state = LEGUP_F_main_BB_if_end267_330;
LEGUP_F_main_BB_if_end267_330:
		next_state = LEGUP_F_main_BB_if_end267_331;
LEGUP_F_main_BB_if_end267_331:
		next_state = LEGUP_F_main_BB_if_end267_332;
LEGUP_F_main_BB_if_end267_332:
		next_state = LEGUP_F_main_BB_if_end267_333;
LEGUP_F_main_BB_if_end267_333:
		next_state = LEGUP_F_main_BB_if_end267_334;
LEGUP_F_main_BB_if_end267_334:
		next_state = LEGUP_F_main_BB_if_end267_335;
LEGUP_F_main_BB_if_end267_335:
		next_state = LEGUP_F_main_BB_if_end267_336;
LEGUP_F_main_BB_if_end267_336:
		next_state = LEGUP_F_main_BB_if_end267_337;
LEGUP_F_main_BB_if_end267_337:
		next_state = LEGUP_F_main_BB_if_end267_338;
LEGUP_F_main_BB_if_end267_338:
		next_state = LEGUP_F_main_BB_if_end267_339;
LEGUP_F_main_BB_if_end267_339:
		next_state = LEGUP_F_main_BB_if_end267_340;
LEGUP_F_main_BB_if_end267_340:
		next_state = LEGUP_F_main_BB_if_end267_341;
LEGUP_F_main_BB_if_end267_341:
		next_state = LEGUP_F_main_BB_if_end267_342;
LEGUP_F_main_BB_if_end267_342:
		next_state = LEGUP_F_main_BB_if_end267_343;
LEGUP_F_main_BB_if_end267_343:
		next_state = LEGUP_F_main_BB_if_end267_344;
LEGUP_F_main_BB_if_end267_344:
		next_state = LEGUP_F_main_BB_if_end267_345;
LEGUP_F_main_BB_if_end267_345:
		next_state = LEGUP_F_main_BB_if_end267_346;
LEGUP_F_main_BB_if_end267_346:
		next_state = LEGUP_F_main_BB_if_end267_347;
LEGUP_F_main_BB_if_end267_347:
		next_state = LEGUP_F_main_BB_if_end267_348;
LEGUP_F_main_BB_if_end267_348:
		next_state = LEGUP_F_main_BB_if_end267_349;
LEGUP_F_main_BB_if_end267_349:
	if ((fsm_stall == 1'd0) && (main_if_end267_Pivot26 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock19_352;
	else if ((fsm_stall == 1'd0) && (main_if_end267_Pivot26 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock23_350;
LEGUP_F_main_BB_if_end298_357:
		next_state = LEGUP_F_main_BB_if_end298_358;
LEGUP_F_main_BB_if_end298_358:
		next_state = LEGUP_F_main_BB_if_end298_359;
LEGUP_F_main_BB_if_end298_359:
		next_state = LEGUP_F_main_BB_if_end298_360;
LEGUP_F_main_BB_if_end298_360:
		next_state = LEGUP_F_main_BB_if_end298_361;
LEGUP_F_main_BB_if_end298_361:
		next_state = LEGUP_F_main_BB_if_end298_362;
LEGUP_F_main_BB_if_end298_362:
	if ((fsm_stall == 1'd0) && (main_if_end298_or_cond564 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then311_363;
	else if ((fsm_stall == 1'd0) && (main_if_end298_or_cond564 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else317_365;
LEGUP_F_main_BB_if_end331_368:
		next_state = LEGUP_F_main_BB_if_end331_369;
LEGUP_F_main_BB_if_end331_369:
		next_state = LEGUP_F_main_BB_if_end331_370;
LEGUP_F_main_BB_if_end331_370:
		next_state = LEGUP_F_main_BB_if_end331_371;
LEGUP_F_main_BB_if_end331_371:
		next_state = LEGUP_F_main_BB_if_end331_372;
LEGUP_F_main_BB_if_end331_372:
		next_state = LEGUP_F_main_BB_if_end331_373;
LEGUP_F_main_BB_if_end331_373:
		next_state = LEGUP_F_main_BB_if_end331_374;
LEGUP_F_main_BB_if_end331_374:
		next_state = LEGUP_F_main_BB_if_end331_375;
LEGUP_F_main_BB_if_end331_375:
		next_state = LEGUP_F_main_BB_if_end331_376;
LEGUP_F_main_BB_if_end331_376:
		next_state = LEGUP_F_main_BB_if_end331_377;
LEGUP_F_main_BB_if_end331_377:
		next_state = LEGUP_F_main_BB_if_end331_378;
LEGUP_F_main_BB_if_end331_378:
		next_state = LEGUP_F_main_BB_if_end331_379;
LEGUP_F_main_BB_if_end331_379:
		next_state = LEGUP_F_main_BB_if_end331_380;
LEGUP_F_main_BB_if_end331_380:
		next_state = LEGUP_F_main_BB_if_end331_381;
LEGUP_F_main_BB_if_end331_381:
		next_state = LEGUP_F_main_BB_if_end331_382;
LEGUP_F_main_BB_if_end331_382:
		next_state = LEGUP_F_main_BB_if_end331_383;
LEGUP_F_main_BB_if_end331_383:
		next_state = LEGUP_F_main_BB_if_end331_384;
LEGUP_F_main_BB_if_end331_384:
		next_state = LEGUP_F_main_BB_if_end331_385;
LEGUP_F_main_BB_if_end331_385:
		next_state = LEGUP_F_main_BB_if_end331_386;
LEGUP_F_main_BB_if_end331_386:
		next_state = LEGUP_F_main_BB_if_end331_387;
LEGUP_F_main_BB_if_end331_387:
		next_state = LEGUP_F_main_BB_if_end331_388;
LEGUP_F_main_BB_if_end331_388:
		next_state = LEGUP_F_main_BB_if_end331_389;
LEGUP_F_main_BB_if_end331_389:
		next_state = LEGUP_F_main_BB_if_end331_390;
LEGUP_F_main_BB_if_end331_390:
		next_state = LEGUP_F_main_BB_if_end331_391;
LEGUP_F_main_BB_if_end331_391:
		next_state = LEGUP_F_main_BB_if_end331_392;
LEGUP_F_main_BB_if_end331_392:
		next_state = LEGUP_F_main_BB_if_end331_393;
LEGUP_F_main_BB_if_end331_393:
		next_state = LEGUP_F_main_BB_if_end331_394;
LEGUP_F_main_BB_if_end331_394:
		next_state = LEGUP_F_main_BB_if_end331_395;
LEGUP_F_main_BB_if_end331_395:
		next_state = LEGUP_F_main_BB_if_end331_396;
LEGUP_F_main_BB_if_end331_396:
		next_state = LEGUP_F_main_BB_if_end331_397;
LEGUP_F_main_BB_if_end331_397:
		next_state = LEGUP_F_main_BB_if_end331_398;
LEGUP_F_main_BB_if_end331_398:
		next_state = LEGUP_F_main_BB_if_end331_399;
LEGUP_F_main_BB_if_end331_399:
		next_state = LEGUP_F_main_BB_if_end331_400;
LEGUP_F_main_BB_if_end331_400:
		next_state = LEGUP_F_main_BB_if_end331_401;
LEGUP_F_main_BB_if_end331_401:
		next_state = LEGUP_F_main_BB_if_end331_402;
LEGUP_F_main_BB_if_end331_402:
		next_state = LEGUP_F_main_BB_if_end331_403;
LEGUP_F_main_BB_if_end331_403:
		next_state = LEGUP_F_main_BB_if_end331_404;
LEGUP_F_main_BB_if_end331_404:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end_84:
		next_state = LEGUP_F_main_BB_if_end_85;
LEGUP_F_main_BB_if_end_85:
		next_state = LEGUP_F_main_BB_if_end_86;
LEGUP_F_main_BB_if_end_86:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then154_121:
	if ((fsm_stall == 1'd0) && (main_if_end149_cmp155_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then156_122;
	else if ((fsm_stall == 1'd0) && (main_if_end149_cmp155_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else167_156;
LEGUP_F_main_BB_if_then156_122:
		next_state = LEGUP_F_main_BB_if_then156_123;
LEGUP_F_main_BB_if_then156_123:
		next_state = LEGUP_F_main_BB_if_then156_124;
LEGUP_F_main_BB_if_then156_124:
		next_state = LEGUP_F_main_BB_if_then156_125;
LEGUP_F_main_BB_if_then156_125:
		next_state = LEGUP_F_main_BB_if_then156_126;
LEGUP_F_main_BB_if_then156_126:
		next_state = LEGUP_F_main_BB_if_then156_127;
LEGUP_F_main_BB_if_then156_127:
		next_state = LEGUP_F_main_BB_if_then156_128;
LEGUP_F_main_BB_if_then156_128:
		next_state = LEGUP_F_main_BB_if_then156_129;
LEGUP_F_main_BB_if_then156_129:
		next_state = LEGUP_F_main_BB_if_then156_130;
LEGUP_F_main_BB_if_then156_130:
		next_state = LEGUP_F_main_BB_if_then156_131;
LEGUP_F_main_BB_if_then156_131:
		next_state = LEGUP_F_main_BB_if_then156_132;
LEGUP_F_main_BB_if_then156_132:
		next_state = LEGUP_F_main_BB_if_then156_133;
LEGUP_F_main_BB_if_then156_133:
		next_state = LEGUP_F_main_BB_if_then156_134;
LEGUP_F_main_BB_if_then156_134:
		next_state = LEGUP_F_main_BB_if_then156_135;
LEGUP_F_main_BB_if_then156_135:
		next_state = LEGUP_F_main_BB_if_then156_136;
LEGUP_F_main_BB_if_then156_136:
		next_state = LEGUP_F_main_BB_if_then156_137;
LEGUP_F_main_BB_if_then156_137:
		next_state = LEGUP_F_main_BB_if_then156_138;
LEGUP_F_main_BB_if_then156_138:
		next_state = LEGUP_F_main_BB_if_then156_139;
LEGUP_F_main_BB_if_then156_139:
		next_state = LEGUP_F_main_BB_if_then156_140;
LEGUP_F_main_BB_if_then156_140:
		next_state = LEGUP_F_main_BB_if_then156_141;
LEGUP_F_main_BB_if_then156_141:
		next_state = LEGUP_F_main_BB_if_then156_142;
LEGUP_F_main_BB_if_then156_142:
		next_state = LEGUP_F_main_BB_if_then156_143;
LEGUP_F_main_BB_if_then156_143:
		next_state = LEGUP_F_main_BB_if_then156_144;
LEGUP_F_main_BB_if_then156_144:
		next_state = LEGUP_F_main_BB_if_then156_145;
LEGUP_F_main_BB_if_then156_145:
		next_state = LEGUP_F_main_BB_if_then156_146;
LEGUP_F_main_BB_if_then156_146:
		next_state = LEGUP_F_main_BB_if_then156_147;
LEGUP_F_main_BB_if_then156_147:
		next_state = LEGUP_F_main_BB_if_then156_148;
LEGUP_F_main_BB_if_then156_148:
		next_state = LEGUP_F_main_BB_if_then156_149;
LEGUP_F_main_BB_if_then156_149:
		next_state = LEGUP_F_main_BB_if_then156_150;
LEGUP_F_main_BB_if_then156_150:
		next_state = LEGUP_F_main_BB_if_then156_151;
LEGUP_F_main_BB_if_then156_151:
		next_state = LEGUP_F_main_BB_if_then156_152;
LEGUP_F_main_BB_if_then156_152:
		next_state = LEGUP_F_main_BB_if_then156_153;
LEGUP_F_main_BB_if_then156_153:
		next_state = LEGUP_F_main_BB_if_then156_154;
LEGUP_F_main_BB_if_then156_154:
		next_state = LEGUP_F_main_BB_if_then156_155;
LEGUP_F_main_BB_if_then156_155:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_then169_157:
		next_state = LEGUP_F_main_BB_if_then169_158;
LEGUP_F_main_BB_if_then169_158:
		next_state = LEGUP_F_main_BB_if_then169_159;
LEGUP_F_main_BB_if_then169_159:
		next_state = LEGUP_F_main_BB_if_then169_160;
LEGUP_F_main_BB_if_then169_160:
		next_state = LEGUP_F_main_BB_if_then169_161;
LEGUP_F_main_BB_if_then169_161:
		next_state = LEGUP_F_main_BB_if_then169_162;
LEGUP_F_main_BB_if_then169_162:
		next_state = LEGUP_F_main_BB_if_then169_163;
LEGUP_F_main_BB_if_then169_163:
		next_state = LEGUP_F_main_BB_if_then169_164;
LEGUP_F_main_BB_if_then169_164:
		next_state = LEGUP_F_main_BB_if_then169_165;
LEGUP_F_main_BB_if_then169_165:
		next_state = LEGUP_F_main_BB_if_then169_166;
LEGUP_F_main_BB_if_then169_166:
		next_state = LEGUP_F_main_BB_if_then169_167;
LEGUP_F_main_BB_if_then169_167:
		next_state = LEGUP_F_main_BB_if_then169_168;
LEGUP_F_main_BB_if_then169_168:
		next_state = LEGUP_F_main_BB_if_then169_169;
LEGUP_F_main_BB_if_then169_169:
		next_state = LEGUP_F_main_BB_if_then169_170;
LEGUP_F_main_BB_if_then169_170:
		next_state = LEGUP_F_main_BB_if_then169_171;
LEGUP_F_main_BB_if_then169_171:
		next_state = LEGUP_F_main_BB_if_then169_172;
LEGUP_F_main_BB_if_then169_172:
		next_state = LEGUP_F_main_BB_if_then169_173;
LEGUP_F_main_BB_if_then169_173:
		next_state = LEGUP_F_main_BB_if_then169_174;
LEGUP_F_main_BB_if_then169_174:
		next_state = LEGUP_F_main_BB_if_then169_175;
LEGUP_F_main_BB_if_then169_175:
		next_state = LEGUP_F_main_BB_if_then169_176;
LEGUP_F_main_BB_if_then169_176:
		next_state = LEGUP_F_main_BB_if_then169_177;
LEGUP_F_main_BB_if_then169_177:
		next_state = LEGUP_F_main_BB_if_then169_178;
LEGUP_F_main_BB_if_then169_178:
		next_state = LEGUP_F_main_BB_if_then169_179;
LEGUP_F_main_BB_if_then169_179:
		next_state = LEGUP_F_main_BB_if_then169_180;
LEGUP_F_main_BB_if_then169_180:
		next_state = LEGUP_F_main_BB_if_then169_181;
LEGUP_F_main_BB_if_then169_181:
		next_state = LEGUP_F_main_BB_if_then169_182;
LEGUP_F_main_BB_if_then169_182:
		next_state = LEGUP_F_main_BB_if_then169_183;
LEGUP_F_main_BB_if_then169_183:
		next_state = LEGUP_F_main_BB_if_then169_184;
LEGUP_F_main_BB_if_then169_184:
		next_state = LEGUP_F_main_BB_if_then169_185;
LEGUP_F_main_BB_if_then169_185:
		next_state = LEGUP_F_main_BB_if_then169_186;
LEGUP_F_main_BB_if_then169_186:
		next_state = LEGUP_F_main_BB_if_then169_187;
LEGUP_F_main_BB_if_then169_187:
		next_state = LEGUP_F_main_BB_if_then169_188;
LEGUP_F_main_BB_if_then169_188:
		next_state = LEGUP_F_main_BB_if_then169_189;
LEGUP_F_main_BB_if_then169_189:
		next_state = LEGUP_F_main_BB_if_then169_190;
LEGUP_F_main_BB_if_then169_190:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_then182_224:
		next_state = LEGUP_F_main_BB_if_then182_225;
LEGUP_F_main_BB_if_then182_225:
		next_state = LEGUP_F_main_BB_if_then182_226;
LEGUP_F_main_BB_if_then182_226:
		next_state = LEGUP_F_main_BB_if_then182_227;
LEGUP_F_main_BB_if_then182_227:
		next_state = LEGUP_F_main_BB_if_then182_228;
LEGUP_F_main_BB_if_then182_228:
		next_state = LEGUP_F_main_BB_if_then182_229;
LEGUP_F_main_BB_if_then182_229:
		next_state = LEGUP_F_main_BB_if_then182_230;
LEGUP_F_main_BB_if_then182_230:
		next_state = LEGUP_F_main_BB_if_then182_231;
LEGUP_F_main_BB_if_then182_231:
		next_state = LEGUP_F_main_BB_if_then182_232;
LEGUP_F_main_BB_if_then182_232:
		next_state = LEGUP_F_main_BB_if_then182_233;
LEGUP_F_main_BB_if_then182_233:
		next_state = LEGUP_F_main_BB_if_then182_234;
LEGUP_F_main_BB_if_then182_234:
		next_state = LEGUP_F_main_BB_if_then182_235;
LEGUP_F_main_BB_if_then182_235:
		next_state = LEGUP_F_main_BB_if_then182_236;
LEGUP_F_main_BB_if_then182_236:
		next_state = LEGUP_F_main_BB_if_then182_237;
LEGUP_F_main_BB_if_then182_237:
		next_state = LEGUP_F_main_BB_if_then182_238;
LEGUP_F_main_BB_if_then182_238:
		next_state = LEGUP_F_main_BB_if_then182_239;
LEGUP_F_main_BB_if_then182_239:
		next_state = LEGUP_F_main_BB_if_then182_240;
LEGUP_F_main_BB_if_then182_240:
		next_state = LEGUP_F_main_BB_if_then182_241;
LEGUP_F_main_BB_if_then182_241:
		next_state = LEGUP_F_main_BB_if_then182_242;
LEGUP_F_main_BB_if_then182_242:
		next_state = LEGUP_F_main_BB_if_then182_243;
LEGUP_F_main_BB_if_then182_243:
		next_state = LEGUP_F_main_BB_if_then182_244;
LEGUP_F_main_BB_if_then182_244:
		next_state = LEGUP_F_main_BB_if_then182_245;
LEGUP_F_main_BB_if_then182_245:
		next_state = LEGUP_F_main_BB_if_then182_246;
LEGUP_F_main_BB_if_then182_246:
		next_state = LEGUP_F_main_BB_if_then182_247;
LEGUP_F_main_BB_if_then182_247:
		next_state = LEGUP_F_main_BB_if_then182_248;
LEGUP_F_main_BB_if_then182_248:
		next_state = LEGUP_F_main_BB_if_then182_249;
LEGUP_F_main_BB_if_then182_249:
		next_state = LEGUP_F_main_BB_if_then182_250;
LEGUP_F_main_BB_if_then182_250:
		next_state = LEGUP_F_main_BB_if_then182_251;
LEGUP_F_main_BB_if_then182_251:
		next_state = LEGUP_F_main_BB_if_then182_252;
LEGUP_F_main_BB_if_then182_252:
		next_state = LEGUP_F_main_BB_if_then182_253;
LEGUP_F_main_BB_if_then182_253:
		next_state = LEGUP_F_main_BB_if_then182_254;
LEGUP_F_main_BB_if_then182_254:
		next_state = LEGUP_F_main_BB_if_then182_255;
LEGUP_F_main_BB_if_then182_255:
		next_state = LEGUP_F_main_BB_if_then182_256;
LEGUP_F_main_BB_if_then182_256:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_then209_291:
		next_state = LEGUP_F_main_BB_if_then209_292;
LEGUP_F_main_BB_if_then209_292:
		next_state = LEGUP_F_main_BB_if_then209_293;
LEGUP_F_main_BB_if_then209_293:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_then216_297:
		next_state = LEGUP_F_main_BB_if_then216_298;
LEGUP_F_main_BB_if_then216_298:
		next_state = LEGUP_F_main_BB_if_then216_299;
LEGUP_F_main_BB_if_then216_299:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_then223_300:
		next_state = LEGUP_F_main_BB_if_then223_301;
LEGUP_F_main_BB_if_then223_301:
		next_state = LEGUP_F_main_BB_if_then223_302;
LEGUP_F_main_BB_if_then223_302:
		next_state = LEGUP_F_main_BB_if_end236_306;
LEGUP_F_main_BB_if_then248_310:
		next_state = LEGUP_F_main_BB_if_then248_311;
LEGUP_F_main_BB_if_then248_311:
		next_state = LEGUP_F_main_BB_if_end258_314;
LEGUP_F_main_BB_if_then255_313:
		next_state = LEGUP_F_main_BB_cleanup_412;
LEGUP_F_main_BB_if_then265_316:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then272_353:
		next_state = LEGUP_F_main_BB_if_end298_357;
LEGUP_F_main_BB_if_then279_354:
		next_state = LEGUP_F_main_BB_if_end298_357;
LEGUP_F_main_BB_if_then286_355:
		next_state = LEGUP_F_main_BB_if_end298_357;
LEGUP_F_main_BB_if_then311_363:
		next_state = LEGUP_F_main_BB_if_then311_364;
LEGUP_F_main_BB_if_then311_364:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then319_366:
		next_state = LEGUP_F_main_BB_cleanup_412;
LEGUP_F_main_BB_sw_bb135_83:
	if ((fsm_stall == 1'd0) && (main_sw_bb135_cmp136 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb135_cmp136 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end_84;
LEGUP_F_main_BB_sw_bb146_87:
	if ((fsm_stall == 1'd0) && (main_sw_bb146_cmp147 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end149_88;
	else if ((fsm_stall == 1'd0) && (main_sw_bb146_cmp147 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_sw_bb263_315:
	if ((fsm_stall == 1'd0) && (main_sw_bb263_cmp264 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end267_317;
	else if ((fsm_stall == 1'd0) && (main_sw_bb263_cmp264 == 1'd0))
		next_state = LEGUP_F_main_BB_if_then265_316;
LEGUP_F_main_BB_sw_bb328_367:
	if ((fsm_stall == 1'd0) && (main_sw_bb328_cmp329 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb328_cmp329 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end331_368;
LEGUP_F_main_BB_sw_bb_11:
		next_state = LEGUP_F_main_BB_sw_bb_12;
LEGUP_F_main_BB_sw_bb_12:
		next_state = LEGUP_F_main_BB_sw_bb_13;
LEGUP_F_main_BB_sw_bb_13:
		next_state = LEGUP_F_main_BB_sw_bb_14;
LEGUP_F_main_BB_sw_bb_14:
		next_state = LEGUP_F_main_BB_sw_bb_15;
LEGUP_F_main_BB_sw_bb_15:
		next_state = LEGUP_F_main_BB_sw_bb_16;
LEGUP_F_main_BB_sw_bb_16:
		next_state = LEGUP_F_main_BB_sw_bb_17;
LEGUP_F_main_BB_sw_bb_17:
		next_state = LEGUP_F_main_BB_sw_bb_18;
LEGUP_F_main_BB_sw_bb_18:
		next_state = LEGUP_F_main_BB_sw_bb_19;
LEGUP_F_main_BB_sw_bb_19:
		next_state = LEGUP_F_main_BB_sw_bb_20;
LEGUP_F_main_BB_sw_bb_20:
		next_state = LEGUP_F_main_BB_sw_bb_21;
LEGUP_F_main_BB_sw_bb_21:
		next_state = LEGUP_F_main_BB_sw_bb_22;
LEGUP_F_main_BB_sw_bb_22:
		next_state = LEGUP_F_main_BB_sw_bb_23;
LEGUP_F_main_BB_sw_bb_23:
		next_state = LEGUP_F_main_BB_sw_bb_24;
LEGUP_F_main_BB_sw_bb_24:
		next_state = LEGUP_F_main_BB_sw_bb_25;
LEGUP_F_main_BB_sw_bb_25:
		next_state = LEGUP_F_main_BB_sw_bb_26;
LEGUP_F_main_BB_sw_bb_26:
		next_state = LEGUP_F_main_BB_sw_bb_27;
LEGUP_F_main_BB_sw_bb_27:
		next_state = LEGUP_F_main_BB_sw_bb_28;
LEGUP_F_main_BB_sw_bb_28:
		next_state = LEGUP_F_main_BB_sw_bb_29;
LEGUP_F_main_BB_sw_bb_29:
		next_state = LEGUP_F_main_BB_sw_bb_30;
LEGUP_F_main_BB_sw_bb_30:
		next_state = LEGUP_F_main_BB_sw_bb_31;
LEGUP_F_main_BB_sw_bb_31:
		next_state = LEGUP_F_main_BB_sw_bb_32;
LEGUP_F_main_BB_sw_bb_32:
		next_state = LEGUP_F_main_BB_sw_bb_33;
LEGUP_F_main_BB_sw_bb_33:
		next_state = LEGUP_F_main_BB_sw_bb_34;
LEGUP_F_main_BB_sw_bb_34:
		next_state = LEGUP_F_main_BB_sw_bb_35;
LEGUP_F_main_BB_sw_bb_35:
		next_state = LEGUP_F_main_BB_sw_bb_36;
LEGUP_F_main_BB_sw_bb_36:
		next_state = LEGUP_F_main_BB_sw_bb_37;
LEGUP_F_main_BB_sw_bb_37:
		next_state = LEGUP_F_main_BB_for_cond109_preheader_38;
default:
	next_state = cur_state;
endcase

end
assign fsm_stall = 1'd0;
assign main_entry_vla1556_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla1556_sub_reg <= main_entry_vla1556_sub;
	end
end
assign main_entry_vla555_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla555_sub_reg <= main_entry_vla555_sub;
	end
end
assign main_entry_arrayidx6 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx6_reg <= main_entry_arrayidx6;
	end
end
assign main_entry_arrayidx7 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx7_reg <= main_entry_arrayidx7;
	end
end
assign main_entry_arrayidx8 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx8_reg <= main_entry_arrayidx8;
	end
end
assign main_entry_arrayidx9 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx9_reg <= main_entry_arrayidx9;
	end
end
assign main_entry_arrayidx10 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx10_reg <= main_entry_arrayidx10;
	end
end
assign main_entry_arrayidx11 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx11_reg <= main_entry_arrayidx11;
	end
end
assign main_entry_arrayidx12 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx12_reg <= main_entry_arrayidx12;
	end
end
assign main_entry_arrayidx13 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx13_reg <= main_entry_arrayidx13;
	end
end
assign main_entry_arrayidx14 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx14_reg <= main_entry_arrayidx14;
	end
end
assign main_entry_arrayidx15 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx15_reg <= main_entry_arrayidx15;
	end
end
assign main_entry_arrayidx16 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx16_reg <= main_entry_arrayidx16;
	end
end
assign main_entry_arrayidx17 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx17_reg <= main_entry_arrayidx17;
	end
end
assign main_entry_arrayidx18 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx18_reg <= main_entry_arrayidx18;
	end
end
assign main_entry_arrayidx19 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx19_reg <= main_entry_arrayidx19;
	end
end
assign main_entry_arrayidx20 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx20_reg <= main_entry_arrayidx20;
	end
end
assign main_entry_arrayidx21 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx21_reg <= main_entry_arrayidx21;
	end
end
assign main_entry_arrayidx22 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx22_reg <= main_entry_arrayidx22;
	end
end
assign main_entry_arrayidx23 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx23_reg <= main_entry_arrayidx23;
	end
end
assign main_entry_arrayidx24 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx24_reg <= main_entry_arrayidx24;
	end
end
assign main_entry_arrayidx25 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx25_reg <= main_entry_arrayidx25;
	end
end
assign main_entry_arrayidx26 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx26_reg <= main_entry_arrayidx26;
	end
end
assign main_entry_arrayidx27 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx27_reg <= main_entry_arrayidx27;
	end
end
assign main_entry_arrayidx28 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx28_reg <= main_entry_arrayidx28;
	end
end
assign main_entry_arrayidx29 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx29_reg <= main_entry_arrayidx29;
	end
end
assign main_entry_arrayidx30 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx30_reg <= main_entry_arrayidx30;
	end
end
assign main_entry_arrayidx31 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx31_reg <= main_entry_arrayidx31;
	end
end
assign main_entry_arrayidx32 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx32_reg <= main_entry_arrayidx32;
	end
end
assign main_entry_arrayidx33 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx33_reg <= main_entry_arrayidx33;
	end
end
assign main_entry_arrayidx34 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx34_reg <= main_entry_arrayidx34;
	end
end
assign main_entry_arrayidx35 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx35_reg <= main_entry_arrayidx35;
	end
end
assign main_entry_arrayidx36 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx36_reg <= main_entry_arrayidx36;
	end
end
assign main_entry_arrayidx37 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx37_reg <= main_entry_arrayidx37;
	end
end
assign main_entry_arrayidx38 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx38_reg <= main_entry_arrayidx38;
	end
end
assign main_entry_arrayidx39 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx39_reg <= main_entry_arrayidx39;
	end
end
assign main_entry_arrayidx40 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx40_reg <= main_entry_arrayidx40;
	end
end
assign main_entry_arrayidx41 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx41_reg <= main_entry_arrayidx41;
	end
end
assign main_entry_arrayidx42 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx42_reg <= main_entry_arrayidx42;
	end
end
assign main_entry_arrayidx43 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx43_reg <= main_entry_arrayidx43;
	end
end
assign main_entry_arrayidx44 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx44_reg <= main_entry_arrayidx44;
	end
end
assign main_entry_arrayidx45 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx45_reg <= main_entry_arrayidx45;
	end
end
assign main_entry_arrayidx46 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx46_reg <= main_entry_arrayidx46;
	end
end
assign main_entry_arrayidx47 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_reg <= main_entry_arrayidx47;
	end
end
assign main_entry_arrayidx48 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx48_reg <= main_entry_arrayidx48;
	end
end
assign main_entry_arrayidx49 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx49_reg <= main_entry_arrayidx49;
	end
end
assign main_entry_arrayidx50 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx50_reg <= main_entry_arrayidx50;
	end
end
assign main_entry_arrayidx51 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx51_reg <= main_entry_arrayidx51;
	end
end
assign main_entry_arrayidx52 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx52_reg <= main_entry_arrayidx52;
	end
end
assign main_entry_arrayidx53 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_reg <= main_entry_arrayidx53;
	end
end
assign main_entry_arrayidx54 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_reg <= main_entry_arrayidx54;
	end
end
assign main_entry_arrayidx55 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_reg <= main_entry_arrayidx55;
	end
end
assign main_entry_arrayidx56 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx56_reg <= main_entry_arrayidx56;
	end
end
assign main_entry_arrayidx57 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx57_reg <= main_entry_arrayidx57;
	end
end
assign main_entry_arrayidx58 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx58_reg <= main_entry_arrayidx58;
	end
end
assign main_entry_arrayidx59 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx59_reg <= main_entry_arrayidx59;
	end
end
assign main_entry_arrayidx60 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_reg <= main_entry_arrayidx60;
	end
end
assign main_entry_arrayidx61 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_reg <= main_entry_arrayidx61;
	end
end
assign main_entry_arrayidx62 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx62_reg <= main_entry_arrayidx62;
	end
end
assign main_entry_arrayidx63 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx63_reg <= main_entry_arrayidx63;
	end
end
assign main_entry_arrayidx64 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx64_reg <= main_entry_arrayidx64;
	end
end
assign main_entry_arrayidx65 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx65_reg <= main_entry_arrayidx65;
	end
end
assign main_entry_arrayidx66 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx66_reg <= main_entry_arrayidx66;
	end
end
assign main_entry_arrayidx67 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx67_reg <= main_entry_arrayidx67;
	end
end
assign main_entry_arrayidx68 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx68_reg <= main_entry_arrayidx68;
	end
end
assign main_entry_arrayidx69 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx69_reg <= main_entry_arrayidx69;
	end
end
assign main_entry_arrayidx70 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx70_reg <= main_entry_arrayidx70;
	end
end
assign main_entry_arrayidx71 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx71_reg <= main_entry_arrayidx71;
	end
end
assign main_entry_arrayidx72 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx72_reg <= main_entry_arrayidx72;
	end
end
assign main_entry_arrayidx73 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_reg <= main_entry_arrayidx73;
	end
end
assign main_entry_arrayidx74 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx74_reg <= main_entry_arrayidx74;
	end
end
assign main_entry_arrayidx75 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx75_reg <= main_entry_arrayidx75;
	end
end
assign main_entry_arrayidx76 = (1'd0 + (4 * 32'd36));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx76_reg <= main_entry_arrayidx76;
	end
end
assign main_entry_arrayidx77 = (1'd0 + (4 * 32'd36));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx77_reg <= main_entry_arrayidx77;
	end
end
assign main_entry_arrayidx78 = (1'd0 + (4 * 32'd37));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx78_reg <= main_entry_arrayidx78;
	end
end
assign main_entry_arrayidx79 = (1'd0 + (4 * 32'd37));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx79_reg <= main_entry_arrayidx79;
	end
end
assign main_entry_arrayidx80 = (1'd0 + (4 * 32'd38));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx80_reg <= main_entry_arrayidx80;
	end
end
assign main_entry_arrayidx81 = (1'd0 + (4 * 32'd38));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx81_reg <= main_entry_arrayidx81;
	end
end
assign main_entry_arrayidx82 = (1'd0 + (4 * 32'd39));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx82_reg <= main_entry_arrayidx82;
	end
end
assign main_entry_arrayidx83 = (1'd0 + (4 * 32'd39));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_reg <= main_entry_arrayidx83;
	end
end
assign main_entry_arrayidx84 = (1'd0 + (4 * 32'd40));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx84_reg <= main_entry_arrayidx84;
	end
end
assign main_entry_arrayidx85 = (1'd0 + (4 * 32'd40));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx85_reg <= main_entry_arrayidx85;
	end
end
assign main_entry_arrayidx86 = (1'd0 + (4 * 32'd41));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx86_reg <= main_entry_arrayidx86;
	end
end
assign main_entry_arrayidx87 = (1'd0 + (4 * 32'd41));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx87_reg <= main_entry_arrayidx87;
	end
end
assign main_entry_arrayidx88 = (1'd0 + (4 * 32'd42));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx88_reg <= main_entry_arrayidx88;
	end
end
assign main_entry_arrayidx89 = (1'd0 + (4 * 32'd42));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx89_reg <= main_entry_arrayidx89;
	end
end
assign main_entry_arrayidx90 = (1'd0 + (4 * 32'd43));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx90_reg <= main_entry_arrayidx90;
	end
end
assign main_entry_arrayidx91 = (1'd0 + (4 * 32'd43));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx91_reg <= main_entry_arrayidx91;
	end
end
assign main_entry_arrayidx92 = (1'd0 + (4 * 32'd44));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx92_reg <= main_entry_arrayidx92;
	end
end
assign main_entry_arrayidx93 = (1'd0 + (4 * 32'd44));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx93_reg <= main_entry_arrayidx93;
	end
end
assign main_entry_arrayidx94 = (1'd0 + (4 * 32'd45));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx94_reg <= main_entry_arrayidx94;
	end
end
assign main_entry_arrayidx95 = (1'd0 + (4 * 32'd45));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx95_reg <= main_entry_arrayidx95;
	end
end
assign main_entry_arrayidx96 = (1'd0 + (4 * 32'd46));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx96_reg <= main_entry_arrayidx96;
	end
end
assign main_entry_arrayidx97 = (1'd0 + (4 * 32'd46));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx97_reg <= main_entry_arrayidx97;
	end
end
assign main_entry_arrayidx98 = (1'd0 + (4 * 32'd47));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx98_reg <= main_entry_arrayidx98;
	end
end
assign main_entry_arrayidx99 = (1'd0 + (4 * 32'd47));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx99_reg <= main_entry_arrayidx99;
	end
end
assign main_entry_arrayidx100 = (1'd0 + (4 * 32'd48));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx100_reg <= main_entry_arrayidx100;
	end
end
assign main_entry_arrayidx101 = (1'd0 + (4 * 32'd48));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx101_reg <= main_entry_arrayidx101;
	end
end
assign main_entry_arrayidx102 = (1'd0 + (4 * 32'd49));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx102_reg <= main_entry_arrayidx102;
	end
end
assign main_entry_arrayidx103 = (1'd0 + (4 * 32'd49));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx103_reg <= main_entry_arrayidx103;
	end
end
assign main_entry_arrayidx104 = (1'd0 + (4 * 32'd50));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx104_reg <= main_entry_arrayidx104;
	end
end
assign main_entry_arrayidx105 = (1'd0 + (4 * 32'd50));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx105_reg <= main_entry_arrayidx105;
	end
end
assign main_entry_arrayidx106 = (1'd0 + (4 * 32'd51));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx106_reg <= main_entry_arrayidx106;
	end
end
assign main_entry_arrayidx107 = (1'd0 + (4 * 32'd51));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx107_reg <= main_entry_arrayidx107;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_state_0 = main_NodeBlock9_backedge_state_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_i_0 = main_NodeBlock9_backedge_i_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_j_0 = main_NodeBlock9_backedge_j_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_a_0 = main_NodeBlock9_backedge_a_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_b_0 = main_NodeBlock9_backedge_b_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_X_0 = main_NodeBlock9_backedge_pos_a_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_Y_0 = main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_X_0 = main_NodeBlock9_backedge_pos_b_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_Y_0 = main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_mesh_0 = main_NodeBlock9_backedge_sum_mesh_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_1hop_0 = main_NodeBlock9_backedge_sum_1hop_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0 = 32'd1840789027;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_seed_0 = main_NodeBlock9_backedge_seed_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
end
always @(*) begin
		main_NodeBlock9_Pivot10 = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock9_Pivot10_op1_temp}));
end
always @(*) begin
		main_NodeBlock7_Pivot8 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock7_Pivot8_op1_temp}));
end
always @(*) begin
		main_NodeBlock5_Pivot6 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock5_Pivot6_op1_temp}));
end
always @(*) begin
		main_LeafBlock3_SwitchLeaf4 = (main_NodeBlock9_state_0_reg == 32'd5);
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end_1_reg};
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end258_562};
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd5;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then265_inc266;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then311_inc316_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd52;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_i_0_be = main_if_end331_inc357_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_end258_inc237_1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_else317_inc299;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_for_end124_8_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_if_end_9_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_a_0_be = main_if_end331_37_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_if_end_10_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_b_0_be = main_if_end331_38_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end_11;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end258_pos_a_X_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end_12;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end258_pos_a_Y_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end_13;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end298_xi_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = -32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end_14;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end298_xj_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_if_end331_newCurOp_add348_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_if_end331_newCurOp_add356;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_for_end124_add130_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end236_seed_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end267_add270_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end267_add270_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end124_82) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb135_83) & (fsm_stall == 1'd0)) & (main_sw_bb135_cmp136 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb146_87) & (fsm_stall == 1'd0)) & (main_sw_bb146_cmp147 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end258_314) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then265_316) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then311_364) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else317_365) & (fsm_stall == 1'd0)) & (main_if_else317_cmp318 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb328_367) & (fsm_stall == 1'd0)) & (main_sw_bb328_cmp329 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end331_404) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
end
always @(*) begin
		main_NodeBlock1_Pivot2 = ($signed(main_NodeBlock9_state_0_reg) < $signed({29'd0,main_NodeBlock1_Pivot2_op1_temp}));
end
always @(*) begin
		main_NodeBlock_Pivot = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock_Pivot_op1_temp}));
end
always @(*) begin
		main_LeafBlock_SwitchLeaf = (main_NodeBlock9_state_0_reg == 32'd0);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_37) & (fsm_stall == 1'd0))) begin
		main_for_cond109_preheader_i_1573 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_cond109_preheader_43) & (fsm_stall == 1'd0)) & (main_for_cond109_preheader_exitcond5_reg == 1'd0))) */ begin
		main_for_cond109_preheader_i_1573 = main_for_cond109_preheader_6_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_37) & (fsm_stall == 1'd0))) begin
		main_for_cond109_preheader_i_1573_reg <= main_for_cond109_preheader_i_1573;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_cond109_preheader_43) & (fsm_stall == 1'd0)) & (main_for_cond109_preheader_exitcond5_reg == 1'd0))) begin
		main_for_cond109_preheader_i_1573_reg <= main_for_cond109_preheader_i_1573;
	end
end
always @(*) begin
		main_for_cond109_preheader_bit_select9 = main_for_cond109_preheader_i_1573_reg[28:0];
end
always @(*) begin
		main_for_cond109_preheader_sr_negate = (32'd0 - main_for_cond109_preheader_i_1573_reg);
end
always @(*) begin
		main_for_cond109_preheader_bit_concat10 = {main_for_cond109_preheader_bit_select9[28:0], main_for_cond109_preheader_bit_concat10_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_for_cond109_preheader_sr_add = (main_for_cond109_preheader_sr_negate + main_for_cond109_preheader_bit_concat10);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_38)) begin
		main_for_cond109_preheader_sr_add_reg <= main_for_cond109_preheader_sr_add;
	end
end
always @(*) begin
		main_for_cond109_preheader_arrayidx113 = (1'd0 + (4 * main_for_cond109_preheader_sr_add_reg));
end
always @(*) begin
		main_for_cond109_preheader_0 = (main_for_cond109_preheader_sr_add_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_for_cond109_preheader_0_reg <= main_for_cond109_preheader_0;
	end
end
always @(*) begin
		main_for_cond109_preheader_arrayidx113_1 = (1'd0 + (4 * main_for_cond109_preheader_0_reg));
end
always @(*) begin
		main_for_cond109_preheader_1 = (main_for_cond109_preheader_sr_add_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_for_cond109_preheader_1_reg <= main_for_cond109_preheader_1;
	end
end
always @(*) begin
		main_for_cond109_preheader_arrayidx113_2 = (1'd0 + (4 * main_for_cond109_preheader_1_reg));
end
always @(*) begin
		main_for_cond109_preheader_2 = (main_for_cond109_preheader_sr_add_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_for_cond109_preheader_2_reg <= main_for_cond109_preheader_2;
	end
end
always @(*) begin
		main_for_cond109_preheader_arrayidx113_3 = (1'd0 + (4 * main_for_cond109_preheader_2_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_for_cond109_preheader_arrayidx113_3_reg <= main_for_cond109_preheader_arrayidx113_3;
	end
end
always @(*) begin
		main_for_cond109_preheader_3 = (main_for_cond109_preheader_sr_add_reg + 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_for_cond109_preheader_3_reg <= main_for_cond109_preheader_3;
	end
end
always @(*) begin
		main_for_cond109_preheader_arrayidx113_4 = (1'd0 + (4 * main_for_cond109_preheader_3_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_for_cond109_preheader_arrayidx113_4_reg <= main_for_cond109_preheader_arrayidx113_4;
	end
end
always @(*) begin
		main_for_cond109_preheader_4 = (main_for_cond109_preheader_sr_add_reg + 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_for_cond109_preheader_4_reg <= main_for_cond109_preheader_4;
	end
end
always @(*) begin
		main_for_cond109_preheader_arrayidx113_5 = (1'd0 + (4 * main_for_cond109_preheader_4_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_for_cond109_preheader_arrayidx113_5_reg <= main_for_cond109_preheader_arrayidx113_5;
	end
end
always @(*) begin
		main_for_cond109_preheader_5 = (main_for_cond109_preheader_sr_add_reg + 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_for_cond109_preheader_5_reg <= main_for_cond109_preheader_5;
	end
end
always @(*) begin
		main_for_cond109_preheader_arrayidx113_6 = (1'd0 + (4 * main_for_cond109_preheader_5_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_for_cond109_preheader_arrayidx113_6_reg <= main_for_cond109_preheader_arrayidx113_6;
	end
end
always @(*) begin
		main_for_cond109_preheader_6 = (main_for_cond109_preheader_i_1573_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_38)) begin
		main_for_cond109_preheader_6_reg <= main_for_cond109_preheader_6;
	end
end
always @(*) begin
		main_for_cond109_preheader_exitcond5 = (main_for_cond109_preheader_6 == 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_38)) begin
		main_for_cond109_preheader_exitcond5_reg <= main_for_cond109_preheader_exitcond5;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_body119_preheader_44) & (fsm_stall == 1'd0))) begin
		main_for_body119_i_2574 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body119_46) & (fsm_stall == 1'd0)) & (main_for_body119_exitcond6_reg == 1'd0))) */ begin
		main_for_body119_i_2574 = main_for_body119_7_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_body119_preheader_44) & (fsm_stall == 1'd0))) begin
		main_for_body119_i_2574_reg <= main_for_body119_i_2574;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body119_46) & (fsm_stall == 1'd0)) & (main_for_body119_exitcond6_reg == 1'd0))) begin
		main_for_body119_i_2574_reg <= main_for_body119_i_2574;
	end
end
always @(*) begin
		main_for_body119_arrayidx120 = (1'd0 + (4 * main_for_body119_i_2574_reg));
end
always @(*) begin
		main_for_body119_arrayidx121 = (1'd0 + (4 * main_for_body119_i_2574_reg));
end
always @(*) begin
		main_for_body119_7 = (main_for_body119_i_2574_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_for_body119_7_reg <= main_for_body119_7;
	end
end
always @(*) begin
		main_for_body119_exitcond6 = (main_for_body119_7 == 32'd46);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_for_body119_exitcond6_reg <= main_for_body119_exitcond6;
	end
end
always @(*) begin
		main_for_end124_8 = main_entry_vla555_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_48)) begin
		main_for_end124_8_reg <= main_for_end124_8;
	end
end
always @(*) begin
		main_for_end124_sub_i = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_for_end124_xor2_i = (main_for_end124_sub_i ^ 32'd1);
end
always @(*) begin
	main_for_end124_rem = main_signed_modulus_32_0;
end
always @(*) begin
		main_for_end124_bit_select7 = main_for_end124_rem_width_extended[28:0];
end
always @(*) begin
		main_for_end124_arrayidx126 = (1'd0 + (4 * main_for_end124_8));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_48)) begin
		main_for_end124_arrayidx126_reg <= main_for_end124_arrayidx126;
	end
end
always @(*) begin
		main_for_end124_xor2_i16 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_47)) begin
		main_for_end124_xor2_i16_reg <= main_for_end124_xor2_i16;
	end
end
always @(*) begin
	main_for_end124_rem128 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_80)) begin
		main_for_end124_rem128_reg <= main_for_end124_rem128;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else180_223)) begin
		main_for_end124_rem128_reg <= main_if_else180_rem184;
	end
end
always @(*) begin
		main_for_end124_arrayidx129 = (1'd0 + (4 * main_for_end124_8));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_48)) begin
		main_for_end124_arrayidx129_reg <= main_for_end124_arrayidx129;
	end
end
always @(*) begin
		main_for_end124_add130 = (main_NodeBlock9_seed_0_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_47)) begin
		main_for_end124_add130_reg <= main_for_end124_add130;
	end
end
always @(*) begin
		main_for_end124_sr_negate7 = (32'd0 - $signed({{1{main_for_end124_rem[3]}},main_for_end124_rem}));
end
always @(*) begin
		main_for_end124_bit_concat8 = {main_for_end124_bit_select7[28:0], main_for_end124_bit_concat8_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_for_end124_sr_add10 = ($signed({{27{main_for_end124_sr_negate7[4]}},main_for_end124_sr_negate7}) + main_for_end124_bit_concat8);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_79)) begin
		main_for_end124_sr_add10_reg <= main_for_end124_sr_add10;
	end
end
always @(*) begin
		main_for_end124_arrayidx133_sum = (main_for_end124_sr_add10_reg + $signed({{28{main_for_end124_rem128[3]}},main_for_end124_rem128}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_80)) begin
		main_for_end124_arrayidx133_sum_reg <= main_for_end124_arrayidx133_sum;
	end
end
always @(*) begin
		main_for_end124_arrayidx134 = (1'd0 + (4 * main_for_end124_arrayidx133_sum_reg));
end
always @(*) begin
		main_sw_bb135_cmp136 = (main_NodeBlock9_i_0_reg == 32'd52);
end
always @(*) begin
		main_if_end_arrayidx137 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_9 = main_entry_vla555_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_85)) begin
		main_if_end_9_reg <= main_if_end_9;
	end
end
always @(*) begin
		main_if_end_arrayidx138 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_10 = main_entry_vla1556_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_85)) begin
		main_if_end_10_reg <= main_if_end_10;
	end
end
always @(*) begin
		main_if_end_arrayidx139 = (1'd0 + (4 * main_if_end_9));
end
always @(*) begin
		main_if_end_11 = main_entry_vla2557_out_a;
end
always @(*) begin
		main_if_end_arrayidx140 = (1'd0 + (4 * main_if_end_9));
end
always @(*) begin
		main_if_end_12 = main_entry_vla3558_out_a;
end
always @(*) begin
		main_if_end_arrayidx141 = (1'd0 + (4 * main_if_end_10));
end
always @(*) begin
		main_if_end_13 = main_entry_vla2557_out_b;
end
always @(*) begin
		main_if_end_arrayidx142 = (1'd0 + (4 * main_if_end_10));
end
always @(*) begin
		main_if_end_14 = main_entry_vla3558_out_b;
end
always @(*) begin
		main_if_end_cmp143 = (main_NodeBlock9_i_0_reg == 32'd0);
end
always @(*) begin
		main_if_end_1 = (main_if_end_cmp143 ? 32'd3 : 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_84)) begin
		main_if_end_1_reg <= main_if_end_1;
	end
end
always @(*) begin
		main_sw_bb146_cmp147 = (main_NodeBlock9_pos_a_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end149_sub_i14 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end149_xor2_i15 = (main_if_end149_sub_i14 ^ 32'd1);
end
always @(*) begin
	main_if_end149_rem151 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end149_rem151_reg = main_if_end331_rem349_reg;
end
always @(*) begin
		main_if_end149_add152 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end149_88)) begin
		main_if_end149_add152_reg <= main_if_end149_add152;
	end
end
always @(*) begin
		main_if_end149_cmp153 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end149_88)) begin
		main_if_end149_cmp153_reg <= main_if_end149_cmp153;
	end
end
always @(*) begin
		main_if_end149_cmp155 = ($signed(main_if_end149_rem151) == 32'd0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end149_120)) begin
		main_if_end149_cmp155_reg <= main_if_end149_cmp155;
	end
end
always @(*) begin
		main_if_then156_xor2_i13 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then156_rem158 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then156_arrayidx159 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then156_15 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then156_124)) begin
		main_if_then156_15_reg <= main_if_then156_15;
	end
end
always @(*) begin
		main_if_then156_add160 = (main_if_then156_15_reg + $signed({{28{main_if_then156_rem158[3]}},main_if_then156_rem158}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then156_154)) begin
		main_if_then156_add160_reg <= main_if_then156_add160;
	end
end
always @(*) begin
		main_if_then156_xor2_i12 = (main_if_end149_add152_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		main_if_then156_xor2_i12_reg <= main_if_then156_xor2_i12;
	end
end
always @(*) begin
	main_if_then156_rem163 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then156_arrayidx164 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then156_16 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then156_124)) begin
		main_if_then156_16_reg <= main_if_then156_16;
	end
end
always @(*) begin
		main_if_then156_add165 = (main_if_then156_16_reg + $signed({{28{main_if_then156_rem163[3]}},main_if_then156_rem163}));
end
always @(*) begin
		main_if_then156_add166 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		main_if_then156_add166_reg <= main_if_then156_add166;
	end
end
always @(*) begin
		main_if_else167_cmp168 = ($signed(main_if_end149_rem151_reg) == 32'd1);
end
always @(*) begin
		main_if_then169_xor2_i10 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then169_rem171 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then169_arrayidx172 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then169_17 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then169_159)) begin
		main_if_then169_17_reg <= main_if_then169_17;
	end
end
always @(*) begin
		main_if_then169_add173 = (main_if_then169_17_reg + $signed({{28{main_if_then169_rem171[3]}},main_if_then169_rem171}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then169_189)) begin
		main_if_then169_add173_reg <= main_if_then169_add173;
	end
end
always @(*) begin
		main_if_then169_xor2_i9 = (main_if_end149_add152_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		main_if_then169_xor2_i9_reg <= main_if_then169_xor2_i9;
	end
end
always @(*) begin
	main_if_then169_rem176 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then169_arrayidx177 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then169_18 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then169_159)) begin
		main_if_then169_18_reg <= main_if_then169_18;
	end
end
always @(*) begin
		main_if_then169_add178 = (main_if_then169_18_reg + $signed({{28{main_if_then169_rem176[3]}},main_if_then169_rem176}));
end
always @(*) begin
		main_if_then169_add179 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		main_if_then169_add179_reg <= main_if_then169_add179;
	end
end
always @(*) begin
		main_if_else180_cmp181 = ($signed(main_if_end149_rem151_reg) == 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else180_191)) begin
		main_if_else180_cmp181_reg <= main_if_else180_cmp181;
	end
end
always @(*) begin
		main_if_else180_xor2_i7 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_else180_rem184 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_else180_rem184_reg = main_for_end124_rem128_reg;
end
always @(*) begin
		main_if_then182_arrayidx185 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then182_19 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then182_add186 = (main_if_then182_19 + $signed({{28{main_if_else180_rem184_reg[3]}},main_if_else180_rem184_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then182_226)) begin
		main_if_then182_add186_reg <= main_if_then182_add186;
	end
end
always @(*) begin
		main_if_then182_xor2_i6 = (main_if_end149_add152_reg ^ 32'd1);
end
always @(*) begin
	main_if_then182_rem189 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then182_arrayidx190 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then182_20 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then182_226)) begin
		main_if_then182_20_reg <= main_if_then182_20;
	end
end
always @(*) begin
		main_if_then182_add191 = (main_if_then182_20_reg + $signed({{28{main_if_then182_rem189[3]}},main_if_then182_rem189}));
end
always @(*) begin
		main_if_then182_add192 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		main_if_then182_add192_reg <= main_if_then182_add192;
	end
end
always @(*) begin
		main_if_else193_arrayidx196 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else193_21 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else193_add197 = (main_if_else193_21 + $signed({{28{main_if_else180_rem184_reg[3]}},main_if_else180_rem184_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else193_259)) begin
		main_if_else193_add197_reg <= main_if_else193_add197;
	end
end
always @(*) begin
		main_if_else193_xor2_i4 = (main_if_end149_add152_reg ^ 32'd1);
end
always @(*) begin
	main_if_else193_rem200 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_else193_arrayidx201 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else193_22 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else193_259)) begin
		main_if_else193_22_reg <= main_if_else193_22;
	end
end
always @(*) begin
		main_if_else193_add202 = (main_if_else193_22_reg + $signed({{28{main_if_else193_rem200[3]}},main_if_else193_rem200}));
end
always @(*) begin
		main_if_else193_add203 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		main_if_else193_add203_reg <= main_if_else193_add203;
	end
end
always @(*) begin
		main_if_then209_arrayidx210 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then209_23 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then209_add211 = (main_if_then209_23 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then209_arrayidx212 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then209_24 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then209_add213 = (main_if_then209_24 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_NodeBlock16_Pivot17 = ($signed($signed({{28{main_if_end149_rem151_reg[3]}},main_if_end149_rem151_reg})) < $signed({28'd0,main_NodeBlock16_Pivot17_op1_temp}));
end
always @(*) begin
		main_LeafBlock14_SwitchLeaf15 = ($signed(main_if_end149_rem151_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock12_SwitchLeaf13 = ($signed(main_if_end149_rem151_reg) == 32'd1);
end
always @(*) begin
		main_if_then216_arrayidx217 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then216_25 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then216_add218 = (main_if_then216_25 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then216_arrayidx219 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then216_26 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then216_add220 = (main_if_then216_26 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_then223_arrayidx224 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then223_27 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then223_add225 = (main_if_then223_27 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then223_arrayidx226 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then223_28 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then223_add227 = (main_if_then223_28 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_else228_arrayidx229 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else228_29 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else228_add230 = (main_if_else228_29 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_else228_arrayidx231 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else228_30 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_else228_add232 = (main_if_else228_30 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then156_155) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0 = main_if_then156_add160_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then169_190) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0 = main_if_then169_add173_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then182_256) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0 = main_if_then182_add186_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else193_289) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0 = main_if_else193_add197_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then209_293) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0 = main_if_then209_add211;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_299) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0 = main_if_then216_add218;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then223_302) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0 = main_if_then223_add225;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else228_305) & (fsm_stall == 1'd0))) */ begin
		main_if_end236_xi_0 = main_if_else228_add230;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then156_155) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then169_190) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then182_256) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else193_289) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then209_293) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_299) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then223_302) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else228_305) & (fsm_stall == 1'd0))) begin
		main_if_end236_xi_0_reg <= main_if_end236_xi_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then156_155) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0 = main_if_then156_add165;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then169_190) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0 = main_if_then169_add178;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then182_256) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0 = main_if_then182_add191;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else193_289) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0 = main_if_else193_add202;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then209_293) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0 = main_if_then209_add213;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_299) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0 = main_if_then216_add220;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then223_302) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0 = main_if_then223_add227;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else228_305) & (fsm_stall == 1'd0))) */ begin
		main_if_end236_xj_0 = main_if_else228_add232;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then156_155) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then169_190) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then182_256) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else193_289) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then209_293) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_299) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then223_302) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else228_305) & (fsm_stall == 1'd0))) begin
		main_if_end236_xj_0_reg <= main_if_end236_xj_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then156_155) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1 = main_if_then156_add166_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then169_190) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1 = main_if_then169_add179_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then182_256) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1 = main_if_then182_add192_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else193_289) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1 = main_if_else193_add203_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then209_293) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1 = main_if_end149_add152_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_299) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1 = main_if_end149_add152_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then223_302) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1 = main_if_end149_add152_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else228_305) & (fsm_stall == 1'd0))) */ begin
		main_if_end236_seed_1 = main_if_end149_add152_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then156_155) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then169_190) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then182_256) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else193_289) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then209_293) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_299) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then223_302) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else228_305) & (fsm_stall == 1'd0))) begin
		main_if_end236_seed_1_reg <= main_if_end236_seed_1;
	end
end
always @(*) begin
		main_if_end236_bit_select5 = main_if_end236_xi_0_reg[28:0];
end
always @(*) begin
		main_if_end236_inc237 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_306)) begin
		main_if_end236_inc237_reg <= main_if_end236_inc237;
	end
end
always @(*) begin
		main_if_end236_sr_negate11 = (32'd0 - main_if_end236_xi_0_reg);
end
always @(*) begin
		main_if_end236_bit_concat6 = {main_if_end236_bit_select5[28:0], main_if_end236_bit_concat6_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_if_end236_sr_add13 = (main_if_end236_sr_negate11 + main_if_end236_bit_concat6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_306)) begin
		main_if_end236_sr_add13_reg <= main_if_end236_sr_add13;
	end
end
always @(*) begin
		main_if_end236_arrayidx238_sum = (main_if_end236_sr_add13_reg + main_if_end236_xj_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_307)) begin
		main_if_end236_arrayidx238_sum_reg <= main_if_end236_arrayidx238_sum;
	end
end
always @(*) begin
		main_if_end236_arrayidx239 = (1'd0 + (4 * main_if_end236_arrayidx238_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_308)) begin
		main_if_end236_arrayidx239_reg <= main_if_end236_arrayidx239;
	end
end
always @(*) begin
		main_if_end236_31 = main_entry_vla4559_out_a;
end
always @(*) begin
		main_if_end236_cmp240 = (main_if_end236_31 == $signed(-32'd1));
end
always @(*) begin
		main_if_end236_32 = (main_if_end236_xi_0_reg < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_306)) begin
		main_if_end236_32_reg <= main_if_end236_32;
	end
end
always @(*) begin
		main_if_end236_or_cond = (main_if_end236_cmp240 & main_if_end236_32_reg);
end
always @(*) begin
		main_if_end236_33 = (main_if_end236_xj_0_reg < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_306)) begin
		main_if_end236_33_reg <= main_if_end236_33;
	end
end
always @(*) begin
		main_if_end236_or_cond561 = (main_if_end236_or_cond & main_if_end236_33_reg);
end
always @(*) begin
		main_if_then248_arrayidx251 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_then248_arrayidx252 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_else253_cmp254 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else253_cmp254_op1_temp}));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then248_311) & (fsm_stall == 1'd0))) begin
		main_if_end258_pos_a_X_1 = main_if_end236_xi_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else253_312) & (fsm_stall == 1'd0)) & (main_if_else253_cmp254 == 1'd0))) */ begin
		main_if_end258_pos_a_X_1 = -32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then248_311) & (fsm_stall == 1'd0))) begin
		main_if_end258_pos_a_X_1_reg <= main_if_end258_pos_a_X_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else253_312) & (fsm_stall == 1'd0)) & (main_if_else253_cmp254 == 1'd0))) begin
		main_if_end258_pos_a_X_1_reg <= main_if_end258_pos_a_X_1;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then248_311) & (fsm_stall == 1'd0))) begin
		main_if_end258_pos_a_Y_1 = main_if_end236_xj_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else253_312) & (fsm_stall == 1'd0)) & (main_if_else253_cmp254 == 1'd0))) */ begin
		main_if_end258_pos_a_Y_1 = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then248_311) & (fsm_stall == 1'd0))) begin
		main_if_end258_pos_a_Y_1_reg <= main_if_end258_pos_a_Y_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else253_312) & (fsm_stall == 1'd0)) & (main_if_else253_cmp254 == 1'd0))) begin
		main_if_end258_pos_a_Y_1_reg <= main_if_end258_pos_a_Y_1;
	end
end
always @(*) begin
		main_if_end258_cmp259 = (main_if_end258_pos_a_X_1_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end258_562 = (main_if_end258_cmp259 ? 32'd2 : 32'd3);
end
always @(*) begin
		main_if_end258_inc237_1 = (main_if_end258_cmp259 ? main_if_end236_inc237_reg : 32'd0);
end
always @(*) begin
		main_sw_bb263_cmp264 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_then265_inc266 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(*) begin
		main_if_end267_sub_i1 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end267_xor2_i2 = (main_if_end267_sub_i1 ^ 32'd1);
end
always @(*) begin
	main_if_end267_rem269 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end267_rem269_reg = main_if_end331_rem349_reg;
end
always @(*) begin
		main_if_end267_add270 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end267_317)) begin
		main_if_end267_add270_reg <= main_if_end267_add270;
	end
end
always @(*) begin
		main_if_end267_Pivot26 = ($signed($signed({{28{main_if_end267_rem269[3]}},main_if_end267_rem269})) < $signed({29'd0,main_if_end267_Pivot26_op1_temp}));
end
always @(*) begin
		main_NodeBlock23_Pivot24 = ($signed($signed({{28{main_if_end267_rem269_reg[3]}},main_if_end267_rem269_reg})) < $signed({28'd0,main_NodeBlock23_Pivot24_op1_temp}));
end
always @(*) begin
		main_LeafBlock21_SwitchLeaf22 = ($signed(main_if_end267_rem269_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock19_SwitchLeaf20 = ($signed(main_if_end267_rem269_reg) == 32'd0);
end
always @(*) begin
		main_if_then272_arrayidx273 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then272_arrayidx275 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then279_arrayidx280 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then279_arrayidx282 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then286_arrayidx287 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then286_arrayidx289 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else291_arrayidx292 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else291_arrayidx294 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then272_353) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn_in = main_if_then272_arrayidx273;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then279_354) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn_in = main_if_then279_arrayidx280;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then286_355) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn_in = main_if_then286_arrayidx287;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else291_356) & (fsm_stall == 1'd0))) */ begin
		main_if_end298_pn_in = main_if_else291_arrayidx292;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then272_353) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn_in_reg <= main_if_end298_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then279_354) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn_in_reg <= main_if_end298_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then286_355) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn_in_reg <= main_if_end298_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else291_356) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn_in_reg <= main_if_end298_pn_in;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then272_353) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn560_in = main_if_then272_arrayidx275;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then279_354) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn560_in = main_if_then279_arrayidx282;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then286_355) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn560_in = main_if_then286_arrayidx289;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else291_356) & (fsm_stall == 1'd0))) */ begin
		main_if_end298_pn560_in = main_if_else291_arrayidx294;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then272_353) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn560_in_reg <= main_if_end298_pn560_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then279_354) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn560_in_reg <= main_if_end298_pn560_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then286_355) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn560_in_reg <= main_if_end298_pn560_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else291_356) & (fsm_stall == 1'd0))) begin
		main_if_end298_pn560_in_reg <= main_if_end298_pn560_in;
	end
end
always @(*) begin
		main_if_end298_pn560 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_end298_pn = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_end298_xj_1 = (main_if_end298_pn560 + main_NodeBlock9_pos_a_Y_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_359)) begin
		main_if_end298_xj_1_reg <= main_if_end298_xj_1;
	end
end
always @(*) begin
		main_if_end298_xi_1 = (main_if_end298_pn + main_NodeBlock9_pos_a_X_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_359)) begin
		main_if_end298_xi_1_reg <= main_if_end298_xi_1;
	end
end
always @(*) begin
		main_if_end298_bit_select3 = main_if_end298_xi_1[28:0];
end
always @(*) begin
		main_if_end298_sr_negate14 = (32'd0 - main_if_end298_xi_1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_359)) begin
		main_if_end298_sr_negate14_reg <= main_if_end298_sr_negate14;
	end
end
always @(*) begin
		main_if_end298_bit_concat4 = {main_if_end298_bit_select3[28:0], main_if_end298_bit_concat4_bit_select_operand_2[2:0]};
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_359)) begin
		main_if_end298_bit_concat4_reg <= main_if_end298_bit_concat4;
	end
end
always @(*) begin
		main_if_end298_sr_add16 = (main_if_end298_sr_negate14_reg + main_if_end298_bit_concat4_reg);
end
always @(*) begin
		main_if_end298_arrayidx300_sum = (main_if_end298_sr_add16 + main_if_end298_xj_1_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_360)) begin
		main_if_end298_arrayidx300_sum_reg <= main_if_end298_arrayidx300_sum;
	end
end
always @(*) begin
		main_if_end298_arrayidx301 = (1'd0 + (4 * main_if_end298_arrayidx300_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_361)) begin
		main_if_end298_arrayidx301_reg <= main_if_end298_arrayidx301;
	end
end
always @(*) begin
		main_if_end298_34 = main_entry_vla4559_out_b;
end
always @(*) begin
		main_if_end298_cmp302 = (main_if_end298_34 == $signed(-32'd1));
end
always @(*) begin
		main_if_end298_35 = (main_if_end298_xi_1 < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_359)) begin
		main_if_end298_35_reg <= main_if_end298_35;
	end
end
always @(*) begin
		main_if_end298_or_cond563 = (main_if_end298_cmp302 & main_if_end298_35_reg);
end
always @(*) begin
		main_if_end298_36 = (main_if_end298_xj_1 < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end298_359)) begin
		main_if_end298_36_reg <= main_if_end298_36;
	end
end
always @(*) begin
		main_if_end298_or_cond564 = (main_if_end298_or_cond563 & main_if_end298_36_reg);
end
always @(*) begin
		main_if_then311_arrayidx314 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then311_arrayidx315 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then311_inc316 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_if_then311_inc316_reg <= main_if_then311_inc316;
	end
end
always @(*) begin
		main_if_else317_inc299 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(*) begin
		main_if_else317_cmp318 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else317_cmp318_op1_temp}));
end
always @(*) begin
		main_sw_bb328_cmp329 = (main_NodeBlock9_i_0_reg == 32'd52);
end
always @(*) begin
		main_if_end331_arrayidx332 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end331_37 = main_entry_vla555_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_369)) begin
		main_if_end331_37_reg <= main_if_end331_37;
	end
end
always @(*) begin
		main_if_end331_arrayidx333 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end331_38 = main_entry_vla1556_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_369)) begin
		main_if_end331_38_reg <= main_if_end331_38;
	end
end
always @(*) begin
		main_if_end331_arrayidx334 = (1'd0 + (4 * main_if_end331_37));
end
always @(*) begin
		main_if_end331_39 = main_entry_vla2557_out_a;
end
always @(*) begin
		main_if_end331_arrayidx335 = (1'd0 + (4 * main_if_end331_38));
end
always @(*) begin
		main_if_end331_40 = main_entry_vla2557_out_b;
end
always @(*) begin
		main_if_end331_sub = (main_if_end331_39 - main_if_end331_40);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_370)) begin
		main_if_end331_sub_reg <= main_if_end331_sub;
	end
end
always @(*) begin
		main_if_end331_bit_select2 = main_if_end331_sub[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_370)) begin
		main_if_end331_bit_select2_reg <= main_if_end331_bit_select2;
	end
end
always @(*) begin
		main_if_end331_mul = (32'd0 - main_if_end331_sub);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_370)) begin
		main_if_end331_mul_reg <= main_if_end331_mul;
	end
end
always @(*) begin
		main_if_end331_mul_sub = (main_if_end331_bit_select2_reg ? main_if_end331_mul_reg : main_if_end331_sub_reg);
end
always @(*) begin
		main_if_end331_arrayidx339 = (1'd0 + (4 * main_if_end331_37));
end
always @(*) begin
		main_if_end331_41 = main_entry_vla3558_out_a;
end
always @(*) begin
		main_if_end331_arrayidx340 = (1'd0 + (4 * main_if_end331_38));
end
always @(*) begin
		main_if_end331_42 = main_entry_vla3558_out_b;
end
always @(*) begin
		main_if_end331_sub341 = (main_if_end331_41 - main_if_end331_42);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_370)) begin
		main_if_end331_sub341_reg <= main_if_end331_sub341;
	end
end
always @(*) begin
		main_if_end331_bit_select1 = main_if_end331_sub341[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_370)) begin
		main_if_end331_bit_select1_reg <= main_if_end331_bit_select1;
	end
end
always @(*) begin
		main_if_end331_mul344 = (32'd0 - main_if_end331_sub341);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_370)) begin
		main_if_end331_mul344_reg <= main_if_end331_mul344;
	end
end
always @(*) begin
		main_if_end331_diff_pos_y_0 = (main_if_end331_bit_select1_reg ? main_if_end331_mul344_reg : main_if_end331_sub341_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_371)) begin
		main_if_end331_diff_pos_y_0_reg <= main_if_end331_diff_pos_y_0;
	end
end
always @(*) begin
		main_if_end331_add346 = (main_NodeBlock9_sum_mesh_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_368)) begin
		main_if_end331_add346_reg <= main_if_end331_add346;
	end
end
always @(*) begin
		main_if_end331_newEarly_add348 = (main_if_end331_mul_sub + main_if_end331_diff_pos_y_0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_371)) begin
		main_if_end331_newEarly_add348_reg <= main_if_end331_newEarly_add348;
	end
end
always @(*) begin
		main_if_end331_newCurOp_add348 = (main_if_end331_add346_reg + main_if_end331_newEarly_add348_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_372)) begin
		main_if_end331_newCurOp_add348_reg <= main_if_end331_newCurOp_add348;
	end
end
always @(*) begin
	main_if_end331_div = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end331_rem349 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_403)) begin
		main_if_end331_rem349_reg <= main_if_end331_rem349;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end331_404)) begin
		main_if_end331_rem349_reg <= main_if_end331_rem352;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_79)) begin
		main_if_end331_rem349_reg <= main_for_end124_rem;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end149_120)) begin
		main_if_end331_rem349_reg <= main_if_end149_rem151;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_154)) begin
		main_if_end331_rem349_reg <= main_if_then156_rem158;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then156_155)) begin
		main_if_end331_rem349_reg <= main_if_then156_rem163;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_189)) begin
		main_if_end331_rem349_reg <= main_if_then169_rem171;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_190)) begin
		main_if_end331_rem349_reg <= main_if_then169_rem176;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_256)) begin
		main_if_end331_rem349_reg <= main_if_then182_rem189;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else193_289)) begin
		main_if_end331_rem349_reg <= main_if_else193_rem200;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end267_349)) begin
		main_if_end331_rem349_reg <= main_if_end267_rem269;
	end
end
always @(*) begin
	main_if_end331_div351 = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end331_rem352 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_end331_add353 = (main_NodeBlock9_sum_1hop_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_368)) begin
		main_if_end331_add353_reg <= main_if_end331_add353;
	end
end
always @(*) begin
		main_if_end331_newEarly_add354 = ($signed({{1{main_if_end331_div[30]}},main_if_end331_div}) + $signed({{28{main_if_end331_rem349[3]}},main_if_end331_rem349}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_403)) begin
		main_if_end331_newEarly_add354_reg <= main_if_end331_newEarly_add354;
	end
end
always @(*) begin
		main_if_end331_newEarly_sub355 = (main_if_end331_add353_reg + $signed({{1{main_if_end331_div351[30]}},main_if_end331_div351}));
end
always @(*) begin
		main_if_end331_newEarly_add356 = (main_if_end331_newEarly_add354_reg + $signed({{28{main_if_end331_rem352[3]}},main_if_end331_rem352}));
end
always @(*) begin
		main_if_end331_newCurOp_add356 = (main_if_end331_newEarly_sub355 + main_if_end331_newEarly_add356);
end
always @(*) begin
		main_if_end331_inc357 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_368)) begin
		main_if_end331_inc357_reg <= main_if_end331_inc357;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond361_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond361_preheader_i_3571 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_cond361_preheader_410) & (fsm_stall == 1'd0)) & (main_for_cond361_preheader_exitcond_reg == 1'd0))) */ begin
		main_for_cond361_preheader_i_3571 = main_for_cond361_preheader_56_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond361_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond361_preheader_i_3571_reg <= main_for_cond361_preheader_i_3571;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_cond361_preheader_410) & (fsm_stall == 1'd0)) & (main_for_cond361_preheader_exitcond_reg == 1'd0))) begin
		main_for_cond361_preheader_i_3571_reg <= main_for_cond361_preheader_i_3571;
	end
end
always @(*) begin
		main_for_cond361_preheader_bit_select = main_for_cond361_preheader_i_3571_reg_width_extended[28:0];
end
always @(*) begin
		main_for_cond361_preheader_sr_negate17 = (32'd0 - {1'd0,main_for_cond361_preheader_i_3571_reg});
end
always @(*) begin
		main_for_cond361_preheader_bit_concat = {main_for_cond361_preheader_bit_select[28:0], main_for_cond361_preheader_bit_concat_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_for_cond361_preheader_sr_add19 = ($signed({{28{main_for_cond361_preheader_sr_negate17[3]}},main_for_cond361_preheader_sr_negate17}) + main_for_cond361_preheader_bit_concat);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_405)) begin
		main_for_cond361_preheader_sr_add19_reg <= main_for_cond361_preheader_sr_add19;
	end
end
always @(*) begin
		main_for_cond361_preheader_arrayidx365 = (1'd0 + (4 * main_for_cond361_preheader_sr_add19_reg));
end
always @(*) begin
		main_for_cond361_preheader_43 = (main_for_cond361_preheader_sr_add19_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_406)) begin
		main_for_cond361_preheader_43_reg <= main_for_cond361_preheader_43;
	end
end
always @(*) begin
		main_for_cond361_preheader_arrayidx365_1 = (1'd0 + (4 * main_for_cond361_preheader_43_reg));
end
always @(*) begin
		main_for_cond361_preheader_44 = (main_for_cond361_preheader_sr_add19_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_406)) begin
		main_for_cond361_preheader_44_reg <= main_for_cond361_preheader_44;
	end
end
always @(*) begin
		main_for_cond361_preheader_arrayidx365_2 = (1'd0 + (4 * main_for_cond361_preheader_44_reg));
end
always @(*) begin
		main_for_cond361_preheader_45 = (main_for_cond361_preheader_sr_add19_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_406)) begin
		main_for_cond361_preheader_45_reg <= main_for_cond361_preheader_45;
	end
end
always @(*) begin
		main_for_cond361_preheader_arrayidx365_3 = (1'd0 + (4 * main_for_cond361_preheader_45_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_407)) begin
		main_for_cond361_preheader_arrayidx365_3_reg <= main_for_cond361_preheader_arrayidx365_3;
	end
end
always @(*) begin
		main_for_cond361_preheader_46 = (main_for_cond361_preheader_sr_add19_reg + 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_406)) begin
		main_for_cond361_preheader_46_reg <= main_for_cond361_preheader_46;
	end
end
always @(*) begin
		main_for_cond361_preheader_arrayidx365_4 = (1'd0 + (4 * main_for_cond361_preheader_46_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_407)) begin
		main_for_cond361_preheader_arrayidx365_4_reg <= main_for_cond361_preheader_arrayidx365_4;
	end
end
always @(*) begin
		main_for_cond361_preheader_47 = (main_for_cond361_preheader_sr_add19_reg + 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_406)) begin
		main_for_cond361_preheader_47_reg <= main_for_cond361_preheader_47;
	end
end
always @(*) begin
		main_for_cond361_preheader_arrayidx365_5 = (1'd0 + (4 * main_for_cond361_preheader_47_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_407)) begin
		main_for_cond361_preheader_arrayidx365_5_reg <= main_for_cond361_preheader_arrayidx365_5;
	end
end
always @(*) begin
		main_for_cond361_preheader_48 = (main_for_cond361_preheader_sr_add19_reg + 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_406)) begin
		main_for_cond361_preheader_48_reg <= main_for_cond361_preheader_48;
	end
end
always @(*) begin
		main_for_cond361_preheader_arrayidx365_6 = (1'd0 + (4 * main_for_cond361_preheader_48_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_407)) begin
		main_for_cond361_preheader_arrayidx365_6_reg <= main_for_cond361_preheader_arrayidx365_6;
	end
end
always @(*) begin
		main_for_cond361_preheader_49 = main_entry_vla4559_out_a;
end
always @(*) begin
		main_for_cond361_preheader_50 = main_entry_vla4559_out_a;
end
always @(*) begin
		main_for_cond361_preheader_51 = main_entry_vla4559_out_b;
end
always @(*) begin
		main_for_cond361_preheader_52 = main_entry_vla4559_out_a;
end
always @(*) begin
		main_for_cond361_preheader_53 = main_entry_vla4559_out_b;
end
always @(*) begin
		main_for_cond361_preheader_54 = main_entry_vla4559_out_a;
end
always @(*) begin
		main_for_cond361_preheader_55 = main_entry_vla4559_out_b;
end
always @(*) begin
		main_for_cond361_preheader_56 = ({1'd0,main_for_cond361_preheader_i_3571_reg} + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_405)) begin
		main_for_cond361_preheader_56_reg <= main_for_cond361_preheader_56;
	end
end
always @(*) begin
		main_for_cond361_preheader_exitcond = (main_for_cond361_preheader_56 == 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_405)) begin
		main_for_cond361_preheader_exitcond_reg <= main_for_cond361_preheader_exitcond;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then255_313) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then319_366) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_for_end373_411) & (fsm_stall == 1'd0))) */ begin
		main_cleanup_retval_0 = 32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then255_313) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then319_366) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end373_411) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
end
always @(*) begin
	main_entry_vla555_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla555_address_a = (main_entry_vla555_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx20_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx24_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx28_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx32_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx36_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx40_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx44_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx48_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx52_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx56_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx60_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx64_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx68_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx72_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx76_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx80_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx84_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx88_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx92_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx96_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx100_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla555_address_a = (main_entry_arrayidx104_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_47)) begin
		main_entry_vla555_address_a = (main_entry_vla555_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_84)) begin
		main_entry_vla555_address_a = (main_if_end_arrayidx137 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla555_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla555_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla555_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla555_in_a = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla555_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla555_in_a = 32'd33;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla555_in_a = 32'd45;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla555_in_a = 32'd32;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla555_in_a = 32'd38;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla555_in_a = 32'd41;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla555_in_a = 32'd42;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla555_in_a = 32'd31;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla555_in_a = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla555_in_a = 32'd36;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla555_in_a = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla555_in_a = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla555_in_a = 32'd28;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla555_in_a = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla555_in_a = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla555_in_a = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla555_in_a = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla555_in_a = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla555_in_a = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla555_in_a = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla555_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla555_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla555_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla555_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla555_in_a = 32'd27;
	end
end
always @(*) begin
	main_entry_vla555_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx22_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx26_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx30_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx34_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx38_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx42_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx46_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx50_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx54_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx58_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx62_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx66_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx70_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx74_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx78_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx82_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx86_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx90_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx94_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx98_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx102_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla555_address_b = (main_entry_arrayidx106_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end331_368)) begin
		main_entry_vla555_address_b = (main_if_end331_arrayidx332 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla555_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla555_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla555_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla555_in_b = 32'd40;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla555_in_b = 32'd43;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla555_in_b = 32'd39;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla555_in_b = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla555_in_b = 32'd44;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla555_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla555_in_b = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla555_in_b = 32'd37;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla555_in_b = 32'd35;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla555_in_b = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla555_in_b = 32'd30;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla555_in_b = 32'd27;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla555_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla555_in_b = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla555_in_b = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla555_in_b = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla555_in_b = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla555_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla555_in_b = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla555_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla555_in_b = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla555_in_b = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla555_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla555_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla555_in_b = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla555_in_b = 32'd36;
	end
end
always @(*) begin
	main_entry_vla1556_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1556_address_a = (main_entry_vla1556_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx21_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx25_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx29_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx33_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx37_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx41_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx45_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx49_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx53_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx57_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx61_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx65_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx69_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx73_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx77_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx81_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx85_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx89_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx93_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx97_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx101_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1556_address_a = (main_entry_arrayidx105_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_84)) begin
		main_entry_vla1556_address_a = (main_if_end_arrayidx138 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1556_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1556_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1556_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1556_in_a = 32'd34;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1556_in_a = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1556_in_a = 32'd40;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1556_in_a = 32'd33;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1556_in_a = 32'd39;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1556_in_a = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1556_in_a = 32'd32;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1556_in_a = 32'd44;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1556_in_a = 32'd38;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1556_in_a = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1556_in_a = 32'd42;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1556_in_a = 32'd31;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1556_in_a = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1556_in_a = 32'd36;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1556_in_a = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1556_in_a = 32'd27;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1556_in_a = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1556_in_a = 32'd28;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1556_in_a = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1556_in_a = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1556_in_a = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1556_in_a = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1556_in_a = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1556_in_a = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1556_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1556_in_a = 32'd30;
	end
end
always @(*) begin
	main_entry_vla1556_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx19_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx23_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx27_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx31_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx35_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx39_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx43_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx47_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx51_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx55_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx59_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx63_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx67_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx71_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx75_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx79_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx83_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx87_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx91_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx95_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx99_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx103_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1556_address_b = (main_entry_arrayidx107_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end331_368)) begin
		main_entry_vla1556_address_b = (main_if_end331_arrayidx333 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1556_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1556_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1556_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1556_in_b = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1556_in_b = 32'd40;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1556_in_b = 32'd43;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1556_in_b = 32'd33;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1556_in_b = 32'd45;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1556_in_b = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1556_in_b = 32'd32;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1556_in_b = 32'd38;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1556_in_b = 32'd41;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1556_in_b = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1556_in_b = 32'd37;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1556_in_b = 32'd35;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1556_in_b = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1556_in_b = 32'd30;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1556_in_b = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1556_in_b = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1556_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1556_in_b = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1556_in_b = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1556_in_b = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1556_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1556_in_b = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1556_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1556_in_b = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1556_in_b = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1556_in_b = 32'd31;
	end
end
always @(*) begin
	main_entry_vla2557_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_entry_vla2557_address_a = (main_for_body119_arrayidx120 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_79)) begin
		main_entry_vla2557_address_a = (main_for_end124_arrayidx126_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_85)) begin
		main_entry_vla2557_address_a = (main_if_end_arrayidx139 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end331_369)) begin
		main_entry_vla2557_address_a = (main_if_end331_arrayidx334 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2557_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_entry_vla2557_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_79)) begin
		main_entry_vla2557_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2557_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_entry_vla2557_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_79)) begin
		main_entry_vla2557_in_a = {{28{main_for_end124_rem[3]}},main_for_end124_rem};
	end
end
always @(*) begin
	main_entry_vla2557_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_85)) begin
		main_entry_vla2557_address_b = (main_if_end_arrayidx141 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla2557_address_b = (main_if_then248_arrayidx251 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla2557_address_b = (main_if_then311_arrayidx314 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end331_369)) begin
		main_entry_vla2557_address_b = (main_if_end331_arrayidx335 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2557_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla2557_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla2557_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2557_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla2557_in_b = main_if_end236_xi_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla2557_in_b = main_if_end298_xi_1_reg;
	end
end
always @(*) begin
	main_entry_vla3558_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_entry_vla3558_address_a = (main_for_body119_arrayidx121 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_80)) begin
		main_entry_vla3558_address_a = (main_for_end124_arrayidx129_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_85)) begin
		main_entry_vla3558_address_a = (main_if_end_arrayidx140 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end331_369)) begin
		main_entry_vla3558_address_a = (main_if_end331_arrayidx339 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3558_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_entry_vla3558_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_80)) begin
		main_entry_vla3558_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3558_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body119_45)) begin
		main_entry_vla3558_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_80)) begin
		main_entry_vla3558_in_a = {{28{main_for_end124_rem128[3]}},main_for_end124_rem128};
	end
end
always @(*) begin
	main_entry_vla3558_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_85)) begin
		main_entry_vla3558_address_b = (main_if_end_arrayidx142 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla3558_address_b = (main_if_then248_arrayidx252 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla3558_address_b = (main_if_then311_arrayidx315 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end331_369)) begin
		main_entry_vla3558_address_b = (main_if_end331_arrayidx340 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3558_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla3558_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla3558_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3558_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla3558_in_b = main_if_end236_xj_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla3558_in_b = main_if_end298_xj_1_reg;
	end
end
always @(*) begin
	main_entry_vla4559_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_entry_vla4559_address_a = (main_for_cond109_preheader_arrayidx113 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_entry_vla4559_address_a = (main_for_cond109_preheader_arrayidx113_1 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_41)) begin
		main_entry_vla4559_address_a = (main_for_cond109_preheader_arrayidx113_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_42)) begin
		main_entry_vla4559_address_a = (main_for_cond109_preheader_arrayidx113_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_308)) begin
		main_entry_vla4559_address_a = (main_if_end236_arrayidx239 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla4559_address_a = (main_if_end236_arrayidx239_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_406)) begin
		main_entry_vla4559_address_a = (main_for_cond361_preheader_arrayidx365 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_407)) begin
		main_entry_vla4559_address_a = (main_for_cond361_preheader_arrayidx365_1 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_408)) begin
		main_entry_vla4559_address_a = (main_for_cond361_preheader_arrayidx365_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_409)) begin
		main_entry_vla4559_address_a = (main_for_cond361_preheader_arrayidx365_5_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4559_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_entry_vla4559_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_entry_vla4559_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_41)) begin
		main_entry_vla4559_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_42)) begin
		main_entry_vla4559_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla4559_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4559_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_39)) begin
		main_entry_vla4559_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_entry_vla4559_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_41)) begin
		main_entry_vla4559_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_42)) begin
		main_entry_vla4559_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then248_310)) begin
		main_entry_vla4559_in_a = main_NodeBlock9_a_0_reg;
	end
end
always @(*) begin
	main_entry_vla4559_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_entry_vla4559_address_b = (main_for_cond109_preheader_arrayidx113_2 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_41)) begin
		main_entry_vla4559_address_b = (main_for_cond109_preheader_arrayidx113_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_42)) begin
		main_entry_vla4559_address_b = (main_for_cond109_preheader_arrayidx113_6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_81)) begin
		main_entry_vla4559_address_b = (main_for_end124_arrayidx134 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end298_361)) begin
		main_entry_vla4559_address_b = (main_if_end298_arrayidx301 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla4559_address_b = (main_if_end298_arrayidx301_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_407)) begin
		main_entry_vla4559_address_b = (main_for_cond361_preheader_arrayidx365_2 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_408)) begin
		main_entry_vla4559_address_b = (main_for_cond361_preheader_arrayidx365_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond361_preheader_409)) begin
		main_entry_vla4559_address_b = (main_for_cond361_preheader_arrayidx365_6_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4559_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_entry_vla4559_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_41)) begin
		main_entry_vla4559_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_42)) begin
		main_entry_vla4559_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_81)) begin
		main_entry_vla4559_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla4559_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4559_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_40)) begin
		main_entry_vla4559_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_41)) begin
		main_entry_vla4559_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond109_preheader_42)) begin
		main_entry_vla4559_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end124_81)) begin
		main_entry_vla4559_in_b = main_for_end124_8_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then311_363)) begin
		main_entry_vla4559_in_b = main_NodeBlock9_b_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_371)) begin
		main_signed_divide_32_0_op0 = main_if_end331_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end331_372)) */ begin
		main_signed_divide_32_0_op0 = main_if_end331_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end331_371)) begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end331_372)) */ begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_divide_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_divide_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_divide_32_0_inst_clken = divide_main_if_end331_div_en;
end
always @(*) begin
	main_signed_divide_32_0_inst_numer = main_signed_divide_32_0_op0;
end
always @(*) begin
	main_signed_divide_32_0_inst_denom = main_signed_divide_32_0_op1;
end
always @(*) begin
	divide_main_if_end331_div_temp_out = main_signed_divide_32_0_inst_quotient;
end
always @(*) begin
	divide_main_if_end331_div_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end331_div_out = divide_main_if_end331_div_temp_out;
end
always @(*) begin
	main_signed_divide_32_0 = divide_main_if_end331_div_out;
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_47)) begin
		main_signed_modulus_32_0_op0 = main_for_end124_xor2_i;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end124_48)) begin
		main_signed_modulus_32_0_op0 = main_for_end124_xor2_i16_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end149_88)) begin
		main_signed_modulus_32_0_op0 = main_if_end149_xor2_i15;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		main_signed_modulus_32_0_op0 = main_if_then156_xor2_i13;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then156_123)) begin
		main_signed_modulus_32_0_op0 = main_if_then156_xor2_i12_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		main_signed_modulus_32_0_op0 = main_if_then169_xor2_i10;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then169_158)) begin
		main_signed_modulus_32_0_op0 = main_if_then169_xor2_i9_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else180_191)) begin
		main_signed_modulus_32_0_op0 = main_if_else180_xor2_i7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		main_signed_modulus_32_0_op0 = main_if_then182_xor2_i6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		main_signed_modulus_32_0_op0 = main_if_else193_xor2_i4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end267_317)) begin
		main_signed_modulus_32_0_op0 = main_if_end267_xor2_i2;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end331_371)) begin
		main_signed_modulus_32_0_op0 = main_if_end331_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end331_372)) */ begin
		main_signed_modulus_32_0_op0 = main_if_end331_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end124_47)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end124_48)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end149_88)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then156_123)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then169_158)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else180_191)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end267_317)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end331_371)) begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end331_372)) */ begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_modulus_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_modulus_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_modulus_32_0_inst_clken = divide_main_if_end331_rem349_en;
end
always @(*) begin
	main_signed_modulus_32_0_inst_numer = main_signed_modulus_32_0_op0;
end
always @(*) begin
	main_signed_modulus_32_0_inst_denom = main_signed_modulus_32_0_op1;
end
always @(*) begin
	divide_main_if_end331_rem349_temp_out = main_signed_modulus_32_0_inst_remain;
end
always @(*) begin
	divide_main_if_end331_rem349_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end331_rem349_out = divide_main_if_end331_rem349_temp_out;
end
always @(*) begin
	main_signed_modulus_32_0 = divide_main_if_end331_rem349_out;
end
assign main_NodeBlock9_Pivot10_op1_temp = 32'd3;
assign main_NodeBlock7_Pivot8_op1_temp = 32'd4;
assign main_NodeBlock5_Pivot6_op1_temp = 32'd5;
assign main_NodeBlock1_Pivot2_op1_temp = 32'd1;
assign main_NodeBlock_Pivot_op1_temp = 32'd2;
assign main_for_cond109_preheader_bit_concat10_bit_select_operand_2 = 3'd0;
always @(*) begin
	main_for_end124_rem_width_extended = {{25{main_for_end124_rem[3]}},main_for_end124_rem};
end
assign main_for_end124_bit_concat8_bit_select_operand_2 = 3'd0;
assign main_NodeBlock16_Pivot17_op1_temp = 32'd2;
assign main_if_end236_bit_concat6_bit_select_operand_2 = 3'd0;
assign main_if_else253_cmp254_op1_temp = 32'd60;
assign main_if_end267_Pivot26_op1_temp = 32'd1;
assign main_NodeBlock23_Pivot24_op1_temp = 32'd2;
assign main_if_end298_bit_concat4_bit_select_operand_2 = 3'd0;
assign main_if_else317_cmp318_op1_temp = 32'd60;
always @(*) begin
	main_for_cond361_preheader_i_3571_reg_width_extended = {26'd0,main_for_cond361_preheader_i_3571_reg};
end
assign main_for_cond361_preheader_bit_concat_bit_select_operand_2 = 3'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		finish <= 1'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_412)) begin
		finish <= (fsm_stall == 1'd0);
	end
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		return_val <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_412)) begin
		return_val <= main_cleanup_retval_0_reg;
	end
end
assign memory_controller_1_write_enable_a = 1'd0;
assign memory_controller_1_in_a = 64'd0;
always @(*) begin
	memory_controller_1_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then209_291)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_297)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then223_300)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else228_303)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end298_357)) begin
		memory_controller_1_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_1_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		memory_controller_1_address_a = main_if_then156_arrayidx159;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		memory_controller_1_address_a = main_if_then169_arrayidx172;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		memory_controller_1_address_a = main_if_then182_arrayidx185;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		memory_controller_1_address_a = main_if_else193_arrayidx196;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then209_291)) begin
		memory_controller_1_address_a = main_if_then209_arrayidx210;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_297)) begin
		memory_controller_1_address_a = main_if_then216_arrayidx217;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then223_300)) begin
		memory_controller_1_address_a = main_if_then223_arrayidx224;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else228_303)) begin
		memory_controller_1_address_a = main_if_else228_arrayidx229;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end298_357)) begin
		memory_controller_1_address_a = main_if_end298_pn_in_reg;
	end
end
always @(*) begin
	memory_controller_1_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then209_291)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_297)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then223_300)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else228_303)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end298_357)) begin
		memory_controller_1_size_a = 2'd2;
	end
end
assign memory_controller_1_write_enable_b = 1'd0;
assign memory_controller_1_in_b = 64'd0;
assign memory_controller_1_enable_b = 1'd0;
assign memory_controller_1_address_b = 0;
assign memory_controller_1_size_b = 2'd0;
assign memory_controller_0_write_enable_a = 1'd0;
assign memory_controller_0_in_a = 64'd0;
always @(*) begin
	memory_controller_0_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then209_291)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_297)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then223_300)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else228_303)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end298_357)) begin
		memory_controller_0_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_0_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		memory_controller_0_address_a = main_if_then156_arrayidx164;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		memory_controller_0_address_a = main_if_then169_arrayidx177;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		memory_controller_0_address_a = main_if_then182_arrayidx190;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		memory_controller_0_address_a = main_if_else193_arrayidx201;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then209_291)) begin
		memory_controller_0_address_a = main_if_then209_arrayidx212;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_297)) begin
		memory_controller_0_address_a = main_if_then216_arrayidx219;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then223_300)) begin
		memory_controller_0_address_a = main_if_then223_arrayidx226;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else228_303)) begin
		memory_controller_0_address_a = main_if_else228_arrayidx231;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end298_357)) begin
		memory_controller_0_address_a = main_if_end298_pn560_in_reg;
	end
end
always @(*) begin
	memory_controller_0_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then156_122)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_157)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_224)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else193_257)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then209_291)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_297)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then223_300)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else228_303)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end298_357)) begin
		memory_controller_0_size_a = 2'd2;
	end
end
assign memory_controller_0_write_enable_b = 1'd0;
assign memory_controller_0_in_b = 64'd0;
assign memory_controller_0_enable_b = 1'd0;
assign memory_controller_0_address_b = 0;
assign memory_controller_0_size_b = 2'd0;

endmodule
module ram_dual_port
(
	clk,
	clken,
	address_a,
	address_b,
	wren_a,
	data_a,
	byteena_a,
	wren_b,
	data_b,
	byteena_b,
	q_b,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
wire [(width_b-1):0] q_b_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
input  wren_b;
input [(width_b-1):0] data_b;
input [width_be_b-1:0] byteena_b;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
	.address_b (address_b),
    .addressstall_b (1'd0),
    .rden_b (clken),
    .q_b (q_b),
    .wren_a (wren_a),
    .data_a (data_a),
    .wren_b (wren_b),
    .data_b (data_b),
    .byteena_b (byteena_b),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.width_byteena_b = width_be_b,
    altsyncram_component.operation_mode = "BIDIR_DUAL_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_b = "BYPASS",
    altsyncram_component.clock_enable_output_b = "BYPASS",
    altsyncram_component.outdata_aclr_b = "NONE",
    altsyncram_component.outdata_reg_b = output_registered,
    altsyncram_component.numwords_b = numwords_b,
    altsyncram_component.widthad_b = widthad_b,
    altsyncram_component.width_b = width_b,
    altsyncram_component.address_reg_b = "CLOCK0",
    altsyncram_component.byteena_reg_b = "CLOCK0",
    altsyncram_component.indata_reg_b = "CLOCK0",
    altsyncram_component.wrcontrol_wraddress_reg_b = "CLOCK0",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module rom_dual_port
(
	clk,
	clken,
	address_a,
	q_a,
	address_b,
	q_b
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = {`MEM_INIT_DIR, "UNUSED.mif"};
parameter  latency = 1;

input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
reg [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
reg [(width_b-1):0] q_b_wire;

(* ram_init_file = init_file *) reg [width_a-1:0] ram [numwords_a-1:0];

integer i;
/* synthesis translate_off */
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == {`MEM_INIT_DIR, "UNUSED.mif"})
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

localparam input_latency = ((latency - 1) >> 1);
localparam output_latency = (latency - 1) - input_latency;
integer j;

reg [(widthad_a-1):0] address_a_reg[input_latency:0];
reg [(widthad_b-1):0] address_b_reg[input_latency:0];

always @(*)
begin
  address_a_reg[0] = address_a;
  address_b_reg[0] = address_b;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < input_latency; j=j+1)
   begin
       address_a_reg[j+1] <= address_a_reg[j];
       address_b_reg[j+1] <= address_b_reg[j];
   end
end

always @ (posedge clk)
if (clken)
begin
    q_a_wire <= ram[address_a_reg[input_latency]];
end

always @ (posedge clk)
if (clken)
begin
    q_b_wire <= ram[address_b_reg[input_latency]];
end


reg [(width_a-1):0] q_a_reg[output_latency:0];

always @(*)
begin
   q_a_reg[0] <= q_a_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
   end
end

assign q_a = q_a_reg[output_latency];
reg [(width_b-1):0] q_b_reg[output_latency:0];

always @(*)
begin
   q_b_reg[0] <= q_b_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_b = q_b_reg[output_latency];

endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);




initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;
@(negedge clk);
start <= 0;
end

always@(posedge clk) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end


endmodule
