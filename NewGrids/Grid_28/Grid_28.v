// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Sat May  9 20:02:16 2020
// ----------------------------------------------------------------------------
`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 12
`define MEMORY_CONTROLLER_TAG_SIZE 9
// This directory contains the memory initialization files generated by LegUp.
// This relative path is used by ModelSim and FPGA synthesis tool.
`define MEM_INIT_DIR "../mem_init/"
// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX1 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcX1_a {`TAG_g_main_opcX1, 23'd0}
// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX2 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcX2_a {`TAG_g_main_opcX2, 23'd0}
// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
`define TAG_g_main_opcX3 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcX3_a {`TAG_g_main_opcX3, 23'd0}
// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY0 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcY0_a {`TAG_g_main_opcY0, 23'd0}
// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcY1_a {`TAG_g_main_opcY1, 23'd0}
// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY2 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcY2_a {`TAG_g_main_opcY2, 23'd0}
// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY3 `MEMORY_CONTROLLER_TAG_SIZE'd5
`define TAG_g_main_opcY3_a {`TAG_g_main_opcY3, 23'd0}

`timescale 1 ns / 1 ns
module top
(
	clk,
	reset,
	start,
	finish,
	return_val
);

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
reg  main_inst_clk;
reg  main_inst_reset;
reg  main_inst_start;
wire  main_inst_finish;
wire [31:0] main_inst_return_val;
wire  main_inst_memory_controller_1_write_enable_a;
wire [63:0] main_inst_memory_controller_1_in_a;
wire  main_inst_memory_controller_1_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_a;
wire [1:0] main_inst_memory_controller_1_size_a;
reg [63:0] main_inst_memory_controller_1_out_a;
wire  main_inst_memory_controller_1_write_enable_b;
wire [63:0] main_inst_memory_controller_1_in_b;
wire  main_inst_memory_controller_1_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_b;
wire [1:0] main_inst_memory_controller_1_size_b;
reg [63:0] main_inst_memory_controller_1_out_b;
wire  main_inst_memory_controller_0_write_enable_a;
wire [63:0] main_inst_memory_controller_0_in_a;
wire  main_inst_memory_controller_0_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_a;
wire [1:0] main_inst_memory_controller_0_size_a;
reg [63:0] main_inst_memory_controller_0_out_a;
wire  main_inst_memory_controller_0_write_enable_b;
wire [63:0] main_inst_memory_controller_0_in_b;
wire  main_inst_memory_controller_0_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_b;
wire [1:0] main_inst_memory_controller_0_size_b;
reg [63:0] main_inst_memory_controller_0_out_b;
reg  main_inst_finish_reg;
reg [31:0] main_inst_return_val_reg;
reg  memory_controller_1_inst_clk;
wire  memory_controller_1_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_a;
reg  memory_controller_1_inst_memory_controller_enable_a;
reg [1:0] memory_controller_1_inst_memory_controller_size_a;
reg  memory_controller_1_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_1_inst_memory_controller_in_a;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_b;
reg  memory_controller_1_inst_memory_controller_enable_b;
reg [1:0] memory_controller_1_inst_memory_controller_size_b;
reg  memory_controller_1_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_1_inst_memory_controller_in_b;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_b;
reg  memory_controller_0_inst_clk;
wire  memory_controller_0_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_a;
reg  memory_controller_0_inst_memory_controller_enable_a;
reg [1:0] memory_controller_0_inst_memory_controller_size_a;
reg  memory_controller_0_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_0_inst_memory_controller_in_a;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_b;
reg  memory_controller_0_inst_memory_controller_enable_b;
reg [1:0] memory_controller_0_inst_memory_controller_size_b;
reg  memory_controller_0_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_0_inst_memory_controller_in_b;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_b;


main main_inst (
	.clk (main_inst_clk),
	.reset (main_inst_reset),
	.start (main_inst_start),
	.finish (main_inst_finish),
	.return_val (main_inst_return_val),
	.memory_controller_1_write_enable_a (main_inst_memory_controller_1_write_enable_a),
	.memory_controller_1_in_a (main_inst_memory_controller_1_in_a),
	.memory_controller_1_enable_a (main_inst_memory_controller_1_enable_a),
	.memory_controller_1_address_a (main_inst_memory_controller_1_address_a),
	.memory_controller_1_size_a (main_inst_memory_controller_1_size_a),
	.memory_controller_1_out_a (main_inst_memory_controller_1_out_a),
	.memory_controller_1_write_enable_b (main_inst_memory_controller_1_write_enable_b),
	.memory_controller_1_in_b (main_inst_memory_controller_1_in_b),
	.memory_controller_1_enable_b (main_inst_memory_controller_1_enable_b),
	.memory_controller_1_address_b (main_inst_memory_controller_1_address_b),
	.memory_controller_1_size_b (main_inst_memory_controller_1_size_b),
	.memory_controller_1_out_b (main_inst_memory_controller_1_out_b),
	.memory_controller_0_write_enable_a (main_inst_memory_controller_0_write_enable_a),
	.memory_controller_0_in_a (main_inst_memory_controller_0_in_a),
	.memory_controller_0_enable_a (main_inst_memory_controller_0_enable_a),
	.memory_controller_0_address_a (main_inst_memory_controller_0_address_a),
	.memory_controller_0_size_a (main_inst_memory_controller_0_size_a),
	.memory_controller_0_out_a (main_inst_memory_controller_0_out_a),
	.memory_controller_0_write_enable_b (main_inst_memory_controller_0_write_enable_b),
	.memory_controller_0_in_b (main_inst_memory_controller_0_in_b),
	.memory_controller_0_enable_b (main_inst_memory_controller_0_enable_b),
	.memory_controller_0_address_b (main_inst_memory_controller_0_address_b),
	.memory_controller_0_size_b (main_inst_memory_controller_0_size_b),
	.memory_controller_0_out_b (main_inst_memory_controller_0_out_b)
);



memory_controller_1 memory_controller_1_inst (
	.clk (memory_controller_1_inst_clk),
	.memory_controller_waitrequest (memory_controller_1_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_1_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_1_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_1_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_1_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_1_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_1_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_1_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_1_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_1_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_1_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_1_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_1_inst_memory_controller_out_reg_b)
);



memory_controller_0 memory_controller_0_inst (
	.clk (memory_controller_0_inst_clk),
	.memory_controller_waitrequest (memory_controller_0_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_0_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_0_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_0_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_0_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_0_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_0_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_0_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_0_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_0_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_0_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_0_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_0_inst_memory_controller_out_reg_b)
);



always @(*) begin
	main_inst_clk = clk;
end
always @(*) begin
	main_inst_reset = reset;
end
always @(*) begin
	main_inst_start = start;
end
always @(*) begin
	main_inst_memory_controller_1_out_a = memory_controller_1_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_1_out_b = memory_controller_1_inst_memory_controller_out_reg_b;
end
always @(*) begin
	main_inst_memory_controller_0_out_a = memory_controller_0_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_0_out_b = memory_controller_0_inst_memory_controller_out_reg_b;
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_finish_reg <= 1'd0;
	end
	if (main_inst_finish) begin
		main_inst_finish_reg <= 1'd1;
	end
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_return_val_reg <= 0;
	end
	if (main_inst_finish) begin
		main_inst_return_val_reg <= main_inst_return_val;
	end
end
always @(*) begin
	memory_controller_1_inst_clk = clk;
end
assign memory_controller_1_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_1_inst_memory_controller_address_a = main_inst_memory_controller_1_address_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_a = main_inst_memory_controller_1_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_a = main_inst_memory_controller_1_size_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_a = main_inst_memory_controller_1_write_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_a = main_inst_memory_controller_1_in_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_address_b = main_inst_memory_controller_1_address_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_b = main_inst_memory_controller_1_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_b = main_inst_memory_controller_1_size_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_b = main_inst_memory_controller_1_write_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_b = main_inst_memory_controller_1_in_b;
end
always @(*) begin
	memory_controller_0_inst_clk = clk;
end
assign memory_controller_0_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_0_inst_memory_controller_address_a = main_inst_memory_controller_0_address_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_a = main_inst_memory_controller_0_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_a = main_inst_memory_controller_0_size_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_a = main_inst_memory_controller_0_write_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_a = main_inst_memory_controller_0_in_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_address_b = main_inst_memory_controller_0_address_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_b = main_inst_memory_controller_0_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_b = main_inst_memory_controller_0_size_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_b = main_inst_memory_controller_0_write_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_b = main_inst_memory_controller_0_in_b;
end
always @(*) begin
	finish = main_inst_finish;
end
always @(*) begin
	return_val = main_inst_return_val;
end

endmodule
`timescale 1 ns / 1 ns
module memory_controller_0
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcY0_address_a;
reg [5:0] main_opcY0_address_b;
reg main_opcY0_write_enable_a;
reg main_opcY0_write_enable_b;
reg [31:0] main_opcY0_in_a;
reg [31:0] main_opcY0_in_b;
wire [31:0] main_opcY0_out_a;
wire [31:0] main_opcY0_out_b;

// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY0 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY0_address_a ),
	.q_a( main_opcY0_out_a ),
	.address_b( main_opcY0_address_b ),
	.q_b( main_opcY0_out_b )
);
defparam main_opcY0.width_a = 32;
defparam main_opcY0.widthad_a = 6;
defparam main_opcY0.numwords_a = 62;
defparam main_opcY0.width_b = 32;
defparam main_opcY0.widthad_b = 6;
defparam main_opcY0.numwords_b = 62;
defparam main_opcY0.latency = ram_latency;
defparam main_opcY0.init_file = {`MEM_INIT_DIR, "main_opcY0.mif"};

reg [5:0] main_opcY1_address_a;
reg [5:0] main_opcY1_address_b;
reg main_opcY1_write_enable_a;
reg main_opcY1_write_enable_b;
reg [31:0] main_opcY1_in_a;
reg [31:0] main_opcY1_in_b;
wire [31:0] main_opcY1_out_a;
wire [31:0] main_opcY1_out_b;

// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY1_address_a ),
	.q_a( main_opcY1_out_a ),
	.address_b( main_opcY1_address_b ),
	.q_b( main_opcY1_out_b )
);
defparam main_opcY1.width_a = 32;
defparam main_opcY1.widthad_a = 6;
defparam main_opcY1.numwords_a = 62;
defparam main_opcY1.width_b = 32;
defparam main_opcY1.widthad_b = 6;
defparam main_opcY1.numwords_b = 62;
defparam main_opcY1.latency = ram_latency;
defparam main_opcY1.init_file = {`MEM_INIT_DIR, "main_opcY1.mif"};

reg [5:0] main_opcY2_address_a;
reg [5:0] main_opcY2_address_b;
reg main_opcY2_write_enable_a;
reg main_opcY2_write_enable_b;
reg [31:0] main_opcY2_in_a;
reg [31:0] main_opcY2_in_b;
wire [31:0] main_opcY2_out_a;
wire [31:0] main_opcY2_out_b;

// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY2_address_a ),
	.q_a( main_opcY2_out_a ),
	.address_b( main_opcY2_address_b ),
	.q_b( main_opcY2_out_b )
);
defparam main_opcY2.width_a = 32;
defparam main_opcY2.widthad_a = 6;
defparam main_opcY2.numwords_a = 62;
defparam main_opcY2.width_b = 32;
defparam main_opcY2.widthad_b = 6;
defparam main_opcY2.numwords_b = 62;
defparam main_opcY2.latency = ram_latency;
defparam main_opcY2.init_file = {`MEM_INIT_DIR, "main_opcY2.mif"};

reg [5:0] main_opcY3_address_a;
reg [5:0] main_opcY3_address_b;
reg main_opcY3_write_enable_a;
reg main_opcY3_write_enable_b;
reg [31:0] main_opcY3_in_a;
reg [31:0] main_opcY3_in_b;
wire [31:0] main_opcY3_out_a;
wire [31:0] main_opcY3_out_b;

// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY3_address_a ),
	.q_a( main_opcY3_out_a ),
	.address_b( main_opcY3_address_b ),
	.q_b( main_opcY3_out_b )
);
defparam main_opcY3.width_a = 32;
defparam main_opcY3.widthad_a = 6;
defparam main_opcY3.numwords_a = 62;
defparam main_opcY3.width_b = 32;
defparam main_opcY3.widthad_b = 6;
defparam main_opcY3.numwords_b = 62;
defparam main_opcY3.latency = ram_latency;
defparam main_opcY3.init_file = {`MEM_INIT_DIR, "main_opcY3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcY0_a;
assign select_main_opcY0_a = (tag_a == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_a;
wire [31:0] memory_controller_main_opcY0_out_a;
assign memory_controller_main_opcY0_out_a = {32{ select_main_opcY0_reg_a[ram_latency]}} & main_opcY0_out_a;

wire select_main_opcY1_a;
assign select_main_opcY1_a = (tag_a == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_a;
wire [31:0] memory_controller_main_opcY1_out_a;
assign memory_controller_main_opcY1_out_a = {32{ select_main_opcY1_reg_a[ram_latency]}} & main_opcY1_out_a;

wire select_main_opcY2_a;
assign select_main_opcY2_a = (tag_a == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_a;
wire [31:0] memory_controller_main_opcY2_out_a;
assign memory_controller_main_opcY2_out_a = {32{ select_main_opcY2_reg_a[ram_latency]}} & main_opcY2_out_a;

wire select_main_opcY3_a;
assign select_main_opcY3_a = (tag_a == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_a;
wire [31:0] memory_controller_main_opcY3_out_a;
assign memory_controller_main_opcY3_out_a = {32{ select_main_opcY3_reg_a[ram_latency]}} & main_opcY3_out_a;

always @(*)
begin
main_opcY0_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY0_a}};
main_opcY0_write_enable_a = memory_controller_write_enable_a & select_main_opcY0_a;
main_opcY0_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY1_a}};
main_opcY1_write_enable_a = memory_controller_write_enable_a & select_main_opcY1_a;
main_opcY1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY2_a}};
main_opcY2_write_enable_a = memory_controller_write_enable_a & select_main_opcY2_a;
main_opcY2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY3_a}};
main_opcY3_write_enable_a = memory_controller_write_enable_a & select_main_opcY3_a;
main_opcY3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcY0_reg_a[ram_latency]}} | {2{select_main_opcY1_reg_a[ram_latency]}} | {2{select_main_opcY2_reg_a[ram_latency]}} | {2{select_main_opcY3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcY0_out_a | memory_controller_main_opcY1_out_a | memory_controller_main_opcY2_out_a | memory_controller_main_opcY3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_a[j+1] <= select_main_opcY0_reg_a[j];
select_main_opcY1_reg_a[j+1] <= select_main_opcY1_reg_a[j];
select_main_opcY2_reg_a[j+1] <= select_main_opcY2_reg_a[j];
select_main_opcY3_reg_a[j+1] <= select_main_opcY3_reg_a[j];
end
always @(*)
begin
select_main_opcY0_reg_a[0] <= select_main_opcY0_a;
select_main_opcY1_reg_a[0] <= select_main_opcY1_a;
select_main_opcY2_reg_a[0] <= select_main_opcY2_a;
select_main_opcY3_reg_a[0] <= select_main_opcY3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcY0_b;
assign select_main_opcY0_b = (tag_b == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_b;
wire [31:0] memory_controller_main_opcY0_out_b;
assign memory_controller_main_opcY0_out_b = {32{ select_main_opcY0_reg_b[ram_latency]}} & main_opcY0_out_b;

wire select_main_opcY1_b;
assign select_main_opcY1_b = (tag_b == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_b;
wire [31:0] memory_controller_main_opcY1_out_b;
assign memory_controller_main_opcY1_out_b = {32{ select_main_opcY1_reg_b[ram_latency]}} & main_opcY1_out_b;

wire select_main_opcY2_b;
assign select_main_opcY2_b = (tag_b == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_b;
wire [31:0] memory_controller_main_opcY2_out_b;
assign memory_controller_main_opcY2_out_b = {32{ select_main_opcY2_reg_b[ram_latency]}} & main_opcY2_out_b;

wire select_main_opcY3_b;
assign select_main_opcY3_b = (tag_b == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_b;
wire [31:0] memory_controller_main_opcY3_out_b;
assign memory_controller_main_opcY3_out_b = {32{ select_main_opcY3_reg_b[ram_latency]}} & main_opcY3_out_b;

always @(*)
begin
main_opcY0_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY0_b}};
main_opcY0_write_enable_b = memory_controller_write_enable_b & select_main_opcY0_b;
main_opcY0_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY1_b}};
main_opcY1_write_enable_b = memory_controller_write_enable_b & select_main_opcY1_b;
main_opcY1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY2_b}};
main_opcY2_write_enable_b = memory_controller_write_enable_b & select_main_opcY2_b;
main_opcY2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY3_b}};
main_opcY3_write_enable_b = memory_controller_write_enable_b & select_main_opcY3_b;
main_opcY3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcY0_reg_b[ram_latency]}} | {2{select_main_opcY1_reg_b[ram_latency]}} | {2{select_main_opcY2_reg_b[ram_latency]}} | {2{select_main_opcY3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcY0_out_b | memory_controller_main_opcY1_out_b | memory_controller_main_opcY2_out_b | memory_controller_main_opcY3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_b[j+1] <= select_main_opcY0_reg_b[j];
select_main_opcY1_reg_b[j+1] <= select_main_opcY1_reg_b[j];
select_main_opcY2_reg_b[j+1] <= select_main_opcY2_reg_b[j];
select_main_opcY3_reg_b[j+1] <= select_main_opcY3_reg_b[j];
end
always @(*)
begin
select_main_opcY0_reg_b[0] <= select_main_opcY0_b;
select_main_opcY1_reg_b[0] <= select_main_opcY1_b;
select_main_opcY2_reg_b[0] <= select_main_opcY2_b;
select_main_opcY3_reg_b[0] <= select_main_opcY3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module memory_controller_1
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcX1_address_a;
reg [5:0] main_opcX1_address_b;
reg main_opcX1_write_enable_a;
reg main_opcX1_write_enable_b;
reg [31:0] main_opcX1_in_a;
reg [31:0] main_opcX1_in_b;
wire [31:0] main_opcX1_out_a;
wire [31:0] main_opcX1_out_b;

// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX1_address_a ),
	.q_a( main_opcX1_out_a ),
	.address_b( main_opcX1_address_b ),
	.q_b( main_opcX1_out_b )
);
defparam main_opcX1.width_a = 32;
defparam main_opcX1.widthad_a = 6;
defparam main_opcX1.numwords_a = 62;
defparam main_opcX1.width_b = 32;
defparam main_opcX1.widthad_b = 6;
defparam main_opcX1.numwords_b = 62;
defparam main_opcX1.latency = ram_latency;
defparam main_opcX1.init_file = {`MEM_INIT_DIR, "main_opcX1.mif"};

reg [5:0] main_opcX2_address_a;
reg [5:0] main_opcX2_address_b;
reg main_opcX2_write_enable_a;
reg main_opcX2_write_enable_b;
reg [31:0] main_opcX2_in_a;
reg [31:0] main_opcX2_in_b;
wire [31:0] main_opcX2_out_a;
wire [31:0] main_opcX2_out_b;

// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX2_address_a ),
	.q_a( main_opcX2_out_a ),
	.address_b( main_opcX2_address_b ),
	.q_b( main_opcX2_out_b )
);
defparam main_opcX2.width_a = 32;
defparam main_opcX2.widthad_a = 6;
defparam main_opcX2.numwords_a = 62;
defparam main_opcX2.width_b = 32;
defparam main_opcX2.widthad_b = 6;
defparam main_opcX2.numwords_b = 62;
defparam main_opcX2.latency = ram_latency;
defparam main_opcX2.init_file = {`MEM_INIT_DIR, "main_opcX2.mif"};

reg [5:0] main_opcX3_address_a;
reg [5:0] main_opcX3_address_b;
reg main_opcX3_write_enable_a;
reg main_opcX3_write_enable_b;
reg [31:0] main_opcX3_in_a;
reg [31:0] main_opcX3_in_b;
wire [31:0] main_opcX3_out_a;
wire [31:0] main_opcX3_out_b;

// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
rom_dual_port main_opcX3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX3_address_a ),
	.q_a( main_opcX3_out_a ),
	.address_b( main_opcX3_address_b ),
	.q_b( main_opcX3_out_b )
);
defparam main_opcX3.width_a = 32;
defparam main_opcX3.widthad_a = 6;
defparam main_opcX3.numwords_a = 62;
defparam main_opcX3.width_b = 32;
defparam main_opcX3.widthad_b = 6;
defparam main_opcX3.numwords_b = 62;
defparam main_opcX3.latency = ram_latency;
defparam main_opcX3.init_file = {`MEM_INIT_DIR, "main_opcX3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcX1_a;
assign select_main_opcX1_a = (tag_a == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_a;
wire [31:0] memory_controller_main_opcX1_out_a;
assign memory_controller_main_opcX1_out_a = {32{ select_main_opcX1_reg_a[ram_latency]}} & main_opcX1_out_a;

wire select_main_opcX2_a;
assign select_main_opcX2_a = (tag_a == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_a;
wire [31:0] memory_controller_main_opcX2_out_a;
assign memory_controller_main_opcX2_out_a = {32{ select_main_opcX2_reg_a[ram_latency]}} & main_opcX2_out_a;

wire select_main_opcX3_a;
assign select_main_opcX3_a = (tag_a == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_a;
wire [31:0] memory_controller_main_opcX3_out_a;
assign memory_controller_main_opcX3_out_a = {32{ select_main_opcX3_reg_a[ram_latency]}} & main_opcX3_out_a;

always @(*)
begin
main_opcX1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX1_a}};
main_opcX1_write_enable_a = memory_controller_write_enable_a & select_main_opcX1_a;
main_opcX1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX2_a}};
main_opcX2_write_enable_a = memory_controller_write_enable_a & select_main_opcX2_a;
main_opcX2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX3_a}};
main_opcX3_write_enable_a = memory_controller_write_enable_a & select_main_opcX3_a;
main_opcX3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcX1_reg_a[ram_latency]}} | {2{select_main_opcX2_reg_a[ram_latency]}} | {2{select_main_opcX3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcX1_out_a | memory_controller_main_opcX2_out_a | memory_controller_main_opcX3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_a[j+1] <= select_main_opcX1_reg_a[j];
select_main_opcX2_reg_a[j+1] <= select_main_opcX2_reg_a[j];
select_main_opcX3_reg_a[j+1] <= select_main_opcX3_reg_a[j];
end
always @(*)
begin
select_main_opcX1_reg_a[0] <= select_main_opcX1_a;
select_main_opcX2_reg_a[0] <= select_main_opcX2_a;
select_main_opcX3_reg_a[0] <= select_main_opcX3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcX1_b;
assign select_main_opcX1_b = (tag_b == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_b;
wire [31:0] memory_controller_main_opcX1_out_b;
assign memory_controller_main_opcX1_out_b = {32{ select_main_opcX1_reg_b[ram_latency]}} & main_opcX1_out_b;

wire select_main_opcX2_b;
assign select_main_opcX2_b = (tag_b == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_b;
wire [31:0] memory_controller_main_opcX2_out_b;
assign memory_controller_main_opcX2_out_b = {32{ select_main_opcX2_reg_b[ram_latency]}} & main_opcX2_out_b;

wire select_main_opcX3_b;
assign select_main_opcX3_b = (tag_b == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_b;
wire [31:0] memory_controller_main_opcX3_out_b;
assign memory_controller_main_opcX3_out_b = {32{ select_main_opcX3_reg_b[ram_latency]}} & main_opcX3_out_b;

always @(*)
begin
main_opcX1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX1_b}};
main_opcX1_write_enable_b = memory_controller_write_enable_b & select_main_opcX1_b;
main_opcX1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX2_b}};
main_opcX2_write_enable_b = memory_controller_write_enable_b & select_main_opcX2_b;
main_opcX2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX3_b}};
main_opcX3_write_enable_b = memory_controller_write_enable_b & select_main_opcX3_b;
main_opcX3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcX1_reg_b[ram_latency]}} | {2{select_main_opcX2_reg_b[ram_latency]}} | {2{select_main_opcX3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcX1_out_b | memory_controller_main_opcX2_out_b | memory_controller_main_opcX3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_b[j+1] <= select_main_opcX1_reg_b[j];
select_main_opcX2_reg_b[j+1] <= select_main_opcX2_reg_b[j];
select_main_opcX3_reg_b[j+1] <= select_main_opcX3_reg_b[j];
end
always @(*)
begin
select_main_opcX1_reg_b[0] <= select_main_opcX1_b;
select_main_opcX2_reg_b[0] <= select_main_opcX2_b;
select_main_opcX3_reg_b[0] <= select_main_opcX3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module main
(
	clk,
	reset,
	start,
	finish,
	return_val,
	memory_controller_1_write_enable_a,
	memory_controller_1_in_a,
	memory_controller_1_enable_a,
	memory_controller_1_address_a,
	memory_controller_1_size_a,
	memory_controller_1_out_a,
	memory_controller_1_write_enable_b,
	memory_controller_1_in_b,
	memory_controller_1_enable_b,
	memory_controller_1_address_b,
	memory_controller_1_size_b,
	memory_controller_1_out_b,
	memory_controller_0_write_enable_a,
	memory_controller_0_in_a,
	memory_controller_0_enable_a,
	memory_controller_0_address_a,
	memory_controller_0_size_a,
	memory_controller_0_out_a,
	memory_controller_0_write_enable_b,
	memory_controller_0_in_b,
	memory_controller_0_enable_b,
	memory_controller_0_address_b,
	memory_controller_0_size_b,
	memory_controller_0_out_b
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_main_BB_entry_1 = 9'd1;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_2 = 9'd2;
parameter [8:0] LEGUP_F_main_BB_NodeBlock7_3 = 9'd3;
parameter [8:0] LEGUP_F_main_BB_NodeBlock5_4 = 9'd4;
parameter [8:0] LEGUP_F_main_BB_LeafBlock3_5 = 9'd5;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_backedge_6 = 9'd6;
parameter [8:0] LEGUP_F_main_BB_for_cond266_preheader_preheader_7 = 9'd7;
parameter [8:0] LEGUP_F_main_BB_NodeBlock1_8 = 9'd8;
parameter [8:0] LEGUP_F_main_BB_NodeBlock_9 = 9'd9;
parameter [8:0] LEGUP_F_main_BB_LeafBlock_10 = 9'd10;
parameter [8:0] LEGUP_F_main_BB_for_body_preheader_11 = 9'd11;
parameter [8:0] LEGUP_F_main_BB_for_body_12 = 9'd12;
parameter [8:0] LEGUP_F_main_BB_for_body_13 = 9'd13;
parameter [8:0] LEGUP_F_main_BB_for_cond10_preheader_preheader_14 = 9'd14;
parameter [8:0] LEGUP_F_main_BB_for_cond10_preheader_15 = 9'd15;
parameter [8:0] LEGUP_F_main_BB_for_body12_16 = 9'd16;
parameter [8:0] LEGUP_F_main_BB_for_body12_17 = 9'd17;
parameter [8:0] LEGUP_F_main_BB_for_body12_18 = 9'd18;
parameter [8:0] LEGUP_F_main_BB_for_inc18_19 = 9'd19;
parameter [8:0] LEGUP_F_main_BB_for_body23_preheader_20 = 9'd20;
parameter [8:0] LEGUP_F_main_BB_for_body23_21 = 9'd21;
parameter [8:0] LEGUP_F_main_BB_for_body23_22 = 9'd22;
parameter [8:0] LEGUP_F_main_BB_for_end28_23 = 9'd23;
parameter [8:0] LEGUP_F_main_BB_for_end28_24 = 9'd24;
parameter [8:0] LEGUP_F_main_BB_for_end28_25 = 9'd25;
parameter [8:0] LEGUP_F_main_BB_for_end28_26 = 9'd26;
parameter [8:0] LEGUP_F_main_BB_for_end28_27 = 9'd27;
parameter [8:0] LEGUP_F_main_BB_for_end28_28 = 9'd28;
parameter [8:0] LEGUP_F_main_BB_for_end28_29 = 9'd29;
parameter [8:0] LEGUP_F_main_BB_for_end28_30 = 9'd30;
parameter [8:0] LEGUP_F_main_BB_for_end28_31 = 9'd31;
parameter [8:0] LEGUP_F_main_BB_for_end28_32 = 9'd32;
parameter [8:0] LEGUP_F_main_BB_for_end28_33 = 9'd33;
parameter [8:0] LEGUP_F_main_BB_for_end28_34 = 9'd34;
parameter [8:0] LEGUP_F_main_BB_for_end28_35 = 9'd35;
parameter [8:0] LEGUP_F_main_BB_for_end28_36 = 9'd36;
parameter [8:0] LEGUP_F_main_BB_for_end28_37 = 9'd37;
parameter [8:0] LEGUP_F_main_BB_for_end28_38 = 9'd38;
parameter [8:0] LEGUP_F_main_BB_for_end28_39 = 9'd39;
parameter [8:0] LEGUP_F_main_BB_for_end28_40 = 9'd40;
parameter [8:0] LEGUP_F_main_BB_for_end28_41 = 9'd41;
parameter [8:0] LEGUP_F_main_BB_for_end28_42 = 9'd42;
parameter [8:0] LEGUP_F_main_BB_for_end28_43 = 9'd43;
parameter [8:0] LEGUP_F_main_BB_for_end28_44 = 9'd44;
parameter [8:0] LEGUP_F_main_BB_for_end28_45 = 9'd45;
parameter [8:0] LEGUP_F_main_BB_for_end28_46 = 9'd46;
parameter [8:0] LEGUP_F_main_BB_for_end28_47 = 9'd47;
parameter [8:0] LEGUP_F_main_BB_for_end28_48 = 9'd48;
parameter [8:0] LEGUP_F_main_BB_for_end28_49 = 9'd49;
parameter [8:0] LEGUP_F_main_BB_for_end28_50 = 9'd50;
parameter [8:0] LEGUP_F_main_BB_for_end28_51 = 9'd51;
parameter [8:0] LEGUP_F_main_BB_for_end28_52 = 9'd52;
parameter [8:0] LEGUP_F_main_BB_for_end28_53 = 9'd53;
parameter [8:0] LEGUP_F_main_BB_for_end28_54 = 9'd54;
parameter [8:0] LEGUP_F_main_BB_for_end28_55 = 9'd55;
parameter [8:0] LEGUP_F_main_BB_for_end28_56 = 9'd56;
parameter [8:0] LEGUP_F_main_BB_for_end28_57 = 9'd57;
parameter [8:0] LEGUP_F_main_BB_for_end28_58 = 9'd58;
parameter [8:0] LEGUP_F_main_BB_sw_bb40_59 = 9'd59;
parameter [8:0] LEGUP_F_main_BB_if_end_60 = 9'd60;
parameter [8:0] LEGUP_F_main_BB_if_end_61 = 9'd61;
parameter [8:0] LEGUP_F_main_BB_if_end_62 = 9'd62;
parameter [8:0] LEGUP_F_main_BB_sw_bb51_63 = 9'd63;
parameter [8:0] LEGUP_F_main_BB_if_end54_64 = 9'd64;
parameter [8:0] LEGUP_F_main_BB_if_end54_65 = 9'd65;
parameter [8:0] LEGUP_F_main_BB_if_end54_66 = 9'd66;
parameter [8:0] LEGUP_F_main_BB_if_end54_67 = 9'd67;
parameter [8:0] LEGUP_F_main_BB_if_end54_68 = 9'd68;
parameter [8:0] LEGUP_F_main_BB_if_end54_69 = 9'd69;
parameter [8:0] LEGUP_F_main_BB_if_end54_70 = 9'd70;
parameter [8:0] LEGUP_F_main_BB_if_end54_71 = 9'd71;
parameter [8:0] LEGUP_F_main_BB_if_end54_72 = 9'd72;
parameter [8:0] LEGUP_F_main_BB_if_end54_73 = 9'd73;
parameter [8:0] LEGUP_F_main_BB_if_end54_74 = 9'd74;
parameter [8:0] LEGUP_F_main_BB_if_end54_75 = 9'd75;
parameter [8:0] LEGUP_F_main_BB_if_end54_76 = 9'd76;
parameter [8:0] LEGUP_F_main_BB_if_end54_77 = 9'd77;
parameter [8:0] LEGUP_F_main_BB_if_end54_78 = 9'd78;
parameter [8:0] LEGUP_F_main_BB_if_end54_79 = 9'd79;
parameter [8:0] LEGUP_F_main_BB_if_end54_80 = 9'd80;
parameter [8:0] LEGUP_F_main_BB_if_end54_81 = 9'd81;
parameter [8:0] LEGUP_F_main_BB_if_end54_82 = 9'd82;
parameter [8:0] LEGUP_F_main_BB_if_end54_83 = 9'd83;
parameter [8:0] LEGUP_F_main_BB_if_end54_84 = 9'd84;
parameter [8:0] LEGUP_F_main_BB_if_end54_85 = 9'd85;
parameter [8:0] LEGUP_F_main_BB_if_end54_86 = 9'd86;
parameter [8:0] LEGUP_F_main_BB_if_end54_87 = 9'd87;
parameter [8:0] LEGUP_F_main_BB_if_end54_88 = 9'd88;
parameter [8:0] LEGUP_F_main_BB_if_end54_89 = 9'd89;
parameter [8:0] LEGUP_F_main_BB_if_end54_90 = 9'd90;
parameter [8:0] LEGUP_F_main_BB_if_end54_91 = 9'd91;
parameter [8:0] LEGUP_F_main_BB_if_end54_92 = 9'd92;
parameter [8:0] LEGUP_F_main_BB_if_end54_93 = 9'd93;
parameter [8:0] LEGUP_F_main_BB_if_end54_94 = 9'd94;
parameter [8:0] LEGUP_F_main_BB_if_end54_95 = 9'd95;
parameter [8:0] LEGUP_F_main_BB_if_end54_96 = 9'd96;
parameter [8:0] LEGUP_F_main_BB_if_then59_97 = 9'd97;
parameter [8:0] LEGUP_F_main_BB_if_then61_98 = 9'd98;
parameter [8:0] LEGUP_F_main_BB_if_then61_99 = 9'd99;
parameter [8:0] LEGUP_F_main_BB_if_then61_100 = 9'd100;
parameter [8:0] LEGUP_F_main_BB_if_then61_101 = 9'd101;
parameter [8:0] LEGUP_F_main_BB_if_then61_102 = 9'd102;
parameter [8:0] LEGUP_F_main_BB_if_then61_103 = 9'd103;
parameter [8:0] LEGUP_F_main_BB_if_then61_104 = 9'd104;
parameter [8:0] LEGUP_F_main_BB_if_then61_105 = 9'd105;
parameter [8:0] LEGUP_F_main_BB_if_then61_106 = 9'd106;
parameter [8:0] LEGUP_F_main_BB_if_then61_107 = 9'd107;
parameter [8:0] LEGUP_F_main_BB_if_then61_108 = 9'd108;
parameter [8:0] LEGUP_F_main_BB_if_then61_109 = 9'd109;
parameter [8:0] LEGUP_F_main_BB_if_then61_110 = 9'd110;
parameter [8:0] LEGUP_F_main_BB_if_then61_111 = 9'd111;
parameter [8:0] LEGUP_F_main_BB_if_then61_112 = 9'd112;
parameter [8:0] LEGUP_F_main_BB_if_then61_113 = 9'd113;
parameter [8:0] LEGUP_F_main_BB_if_then61_114 = 9'd114;
parameter [8:0] LEGUP_F_main_BB_if_then61_115 = 9'd115;
parameter [8:0] LEGUP_F_main_BB_if_then61_116 = 9'd116;
parameter [8:0] LEGUP_F_main_BB_if_then61_117 = 9'd117;
parameter [8:0] LEGUP_F_main_BB_if_then61_118 = 9'd118;
parameter [8:0] LEGUP_F_main_BB_if_then61_119 = 9'd119;
parameter [8:0] LEGUP_F_main_BB_if_then61_120 = 9'd120;
parameter [8:0] LEGUP_F_main_BB_if_then61_121 = 9'd121;
parameter [8:0] LEGUP_F_main_BB_if_then61_122 = 9'd122;
parameter [8:0] LEGUP_F_main_BB_if_then61_123 = 9'd123;
parameter [8:0] LEGUP_F_main_BB_if_then61_124 = 9'd124;
parameter [8:0] LEGUP_F_main_BB_if_then61_125 = 9'd125;
parameter [8:0] LEGUP_F_main_BB_if_then61_126 = 9'd126;
parameter [8:0] LEGUP_F_main_BB_if_then61_127 = 9'd127;
parameter [8:0] LEGUP_F_main_BB_if_then61_128 = 9'd128;
parameter [8:0] LEGUP_F_main_BB_if_then61_129 = 9'd129;
parameter [8:0] LEGUP_F_main_BB_if_then61_130 = 9'd130;
parameter [8:0] LEGUP_F_main_BB_if_then61_131 = 9'd131;
parameter [8:0] LEGUP_F_main_BB_if_else72_132 = 9'd132;
parameter [8:0] LEGUP_F_main_BB_if_then74_133 = 9'd133;
parameter [8:0] LEGUP_F_main_BB_if_then74_134 = 9'd134;
parameter [8:0] LEGUP_F_main_BB_if_then74_135 = 9'd135;
parameter [8:0] LEGUP_F_main_BB_if_then74_136 = 9'd136;
parameter [8:0] LEGUP_F_main_BB_if_then74_137 = 9'd137;
parameter [8:0] LEGUP_F_main_BB_if_then74_138 = 9'd138;
parameter [8:0] LEGUP_F_main_BB_if_then74_139 = 9'd139;
parameter [8:0] LEGUP_F_main_BB_if_then74_140 = 9'd140;
parameter [8:0] LEGUP_F_main_BB_if_then74_141 = 9'd141;
parameter [8:0] LEGUP_F_main_BB_if_then74_142 = 9'd142;
parameter [8:0] LEGUP_F_main_BB_if_then74_143 = 9'd143;
parameter [8:0] LEGUP_F_main_BB_if_then74_144 = 9'd144;
parameter [8:0] LEGUP_F_main_BB_if_then74_145 = 9'd145;
parameter [8:0] LEGUP_F_main_BB_if_then74_146 = 9'd146;
parameter [8:0] LEGUP_F_main_BB_if_then74_147 = 9'd147;
parameter [8:0] LEGUP_F_main_BB_if_then74_148 = 9'd148;
parameter [8:0] LEGUP_F_main_BB_if_then74_149 = 9'd149;
parameter [8:0] LEGUP_F_main_BB_if_then74_150 = 9'd150;
parameter [8:0] LEGUP_F_main_BB_if_then74_151 = 9'd151;
parameter [8:0] LEGUP_F_main_BB_if_then74_152 = 9'd152;
parameter [8:0] LEGUP_F_main_BB_if_then74_153 = 9'd153;
parameter [8:0] LEGUP_F_main_BB_if_then74_154 = 9'd154;
parameter [8:0] LEGUP_F_main_BB_if_then74_155 = 9'd155;
parameter [8:0] LEGUP_F_main_BB_if_then74_156 = 9'd156;
parameter [8:0] LEGUP_F_main_BB_if_then74_157 = 9'd157;
parameter [8:0] LEGUP_F_main_BB_if_then74_158 = 9'd158;
parameter [8:0] LEGUP_F_main_BB_if_then74_159 = 9'd159;
parameter [8:0] LEGUP_F_main_BB_if_then74_160 = 9'd160;
parameter [8:0] LEGUP_F_main_BB_if_then74_161 = 9'd161;
parameter [8:0] LEGUP_F_main_BB_if_then74_162 = 9'd162;
parameter [8:0] LEGUP_F_main_BB_if_then74_163 = 9'd163;
parameter [8:0] LEGUP_F_main_BB_if_then74_164 = 9'd164;
parameter [8:0] LEGUP_F_main_BB_if_then74_165 = 9'd165;
parameter [8:0] LEGUP_F_main_BB_if_then74_166 = 9'd166;
parameter [8:0] LEGUP_F_main_BB_if_else85_167 = 9'd167;
parameter [8:0] LEGUP_F_main_BB_if_else85_168 = 9'd168;
parameter [8:0] LEGUP_F_main_BB_if_else85_169 = 9'd169;
parameter [8:0] LEGUP_F_main_BB_if_else85_170 = 9'd170;
parameter [8:0] LEGUP_F_main_BB_if_else85_171 = 9'd171;
parameter [8:0] LEGUP_F_main_BB_if_else85_172 = 9'd172;
parameter [8:0] LEGUP_F_main_BB_if_else85_173 = 9'd173;
parameter [8:0] LEGUP_F_main_BB_if_else85_174 = 9'd174;
parameter [8:0] LEGUP_F_main_BB_if_else85_175 = 9'd175;
parameter [8:0] LEGUP_F_main_BB_if_else85_176 = 9'd176;
parameter [8:0] LEGUP_F_main_BB_if_else85_177 = 9'd177;
parameter [8:0] LEGUP_F_main_BB_if_else85_178 = 9'd178;
parameter [8:0] LEGUP_F_main_BB_if_else85_179 = 9'd179;
parameter [8:0] LEGUP_F_main_BB_if_else85_180 = 9'd180;
parameter [8:0] LEGUP_F_main_BB_if_else85_181 = 9'd181;
parameter [8:0] LEGUP_F_main_BB_if_else85_182 = 9'd182;
parameter [8:0] LEGUP_F_main_BB_if_else85_183 = 9'd183;
parameter [8:0] LEGUP_F_main_BB_if_else85_184 = 9'd184;
parameter [8:0] LEGUP_F_main_BB_if_else85_185 = 9'd185;
parameter [8:0] LEGUP_F_main_BB_if_else85_186 = 9'd186;
parameter [8:0] LEGUP_F_main_BB_if_else85_187 = 9'd187;
parameter [8:0] LEGUP_F_main_BB_if_else85_188 = 9'd188;
parameter [8:0] LEGUP_F_main_BB_if_else85_189 = 9'd189;
parameter [8:0] LEGUP_F_main_BB_if_else85_190 = 9'd190;
parameter [8:0] LEGUP_F_main_BB_if_else85_191 = 9'd191;
parameter [8:0] LEGUP_F_main_BB_if_else85_192 = 9'd192;
parameter [8:0] LEGUP_F_main_BB_if_else85_193 = 9'd193;
parameter [8:0] LEGUP_F_main_BB_if_else85_194 = 9'd194;
parameter [8:0] LEGUP_F_main_BB_if_else85_195 = 9'd195;
parameter [8:0] LEGUP_F_main_BB_if_else85_196 = 9'd196;
parameter [8:0] LEGUP_F_main_BB_if_else85_197 = 9'd197;
parameter [8:0] LEGUP_F_main_BB_if_else85_198 = 9'd198;
parameter [8:0] LEGUP_F_main_BB_if_else85_199 = 9'd199;
parameter [8:0] LEGUP_F_main_BB_if_then87_200 = 9'd200;
parameter [8:0] LEGUP_F_main_BB_if_then87_201 = 9'd201;
parameter [8:0] LEGUP_F_main_BB_if_then87_202 = 9'd202;
parameter [8:0] LEGUP_F_main_BB_if_then87_203 = 9'd203;
parameter [8:0] LEGUP_F_main_BB_if_then87_204 = 9'd204;
parameter [8:0] LEGUP_F_main_BB_if_then87_205 = 9'd205;
parameter [8:0] LEGUP_F_main_BB_if_then87_206 = 9'd206;
parameter [8:0] LEGUP_F_main_BB_if_then87_207 = 9'd207;
parameter [8:0] LEGUP_F_main_BB_if_then87_208 = 9'd208;
parameter [8:0] LEGUP_F_main_BB_if_then87_209 = 9'd209;
parameter [8:0] LEGUP_F_main_BB_if_then87_210 = 9'd210;
parameter [8:0] LEGUP_F_main_BB_if_then87_211 = 9'd211;
parameter [8:0] LEGUP_F_main_BB_if_then87_212 = 9'd212;
parameter [8:0] LEGUP_F_main_BB_if_then87_213 = 9'd213;
parameter [8:0] LEGUP_F_main_BB_if_then87_214 = 9'd214;
parameter [8:0] LEGUP_F_main_BB_if_then87_215 = 9'd215;
parameter [8:0] LEGUP_F_main_BB_if_then87_216 = 9'd216;
parameter [8:0] LEGUP_F_main_BB_if_then87_217 = 9'd217;
parameter [8:0] LEGUP_F_main_BB_if_then87_218 = 9'd218;
parameter [8:0] LEGUP_F_main_BB_if_then87_219 = 9'd219;
parameter [8:0] LEGUP_F_main_BB_if_then87_220 = 9'd220;
parameter [8:0] LEGUP_F_main_BB_if_then87_221 = 9'd221;
parameter [8:0] LEGUP_F_main_BB_if_then87_222 = 9'd222;
parameter [8:0] LEGUP_F_main_BB_if_then87_223 = 9'd223;
parameter [8:0] LEGUP_F_main_BB_if_then87_224 = 9'd224;
parameter [8:0] LEGUP_F_main_BB_if_then87_225 = 9'd225;
parameter [8:0] LEGUP_F_main_BB_if_then87_226 = 9'd226;
parameter [8:0] LEGUP_F_main_BB_if_then87_227 = 9'd227;
parameter [8:0] LEGUP_F_main_BB_if_then87_228 = 9'd228;
parameter [8:0] LEGUP_F_main_BB_if_then87_229 = 9'd229;
parameter [8:0] LEGUP_F_main_BB_if_then87_230 = 9'd230;
parameter [8:0] LEGUP_F_main_BB_if_then87_231 = 9'd231;
parameter [8:0] LEGUP_F_main_BB_if_then87_232 = 9'd232;
parameter [8:0] LEGUP_F_main_BB_if_else98_233 = 9'd233;
parameter [8:0] LEGUP_F_main_BB_if_else98_234 = 9'd234;
parameter [8:0] LEGUP_F_main_BB_if_else98_235 = 9'd235;
parameter [8:0] LEGUP_F_main_BB_if_else98_236 = 9'd236;
parameter [8:0] LEGUP_F_main_BB_if_else98_237 = 9'd237;
parameter [8:0] LEGUP_F_main_BB_if_else98_238 = 9'd238;
parameter [8:0] LEGUP_F_main_BB_if_else98_239 = 9'd239;
parameter [8:0] LEGUP_F_main_BB_if_else98_240 = 9'd240;
parameter [8:0] LEGUP_F_main_BB_if_else98_241 = 9'd241;
parameter [8:0] LEGUP_F_main_BB_if_else98_242 = 9'd242;
parameter [8:0] LEGUP_F_main_BB_if_else98_243 = 9'd243;
parameter [8:0] LEGUP_F_main_BB_if_else98_244 = 9'd244;
parameter [8:0] LEGUP_F_main_BB_if_else98_245 = 9'd245;
parameter [8:0] LEGUP_F_main_BB_if_else98_246 = 9'd246;
parameter [8:0] LEGUP_F_main_BB_if_else98_247 = 9'd247;
parameter [8:0] LEGUP_F_main_BB_if_else98_248 = 9'd248;
parameter [8:0] LEGUP_F_main_BB_if_else98_249 = 9'd249;
parameter [8:0] LEGUP_F_main_BB_if_else98_250 = 9'd250;
parameter [8:0] LEGUP_F_main_BB_if_else98_251 = 9'd251;
parameter [8:0] LEGUP_F_main_BB_if_else98_252 = 9'd252;
parameter [8:0] LEGUP_F_main_BB_if_else98_253 = 9'd253;
parameter [8:0] LEGUP_F_main_BB_if_else98_254 = 9'd254;
parameter [8:0] LEGUP_F_main_BB_if_else98_255 = 9'd255;
parameter [8:0] LEGUP_F_main_BB_if_else98_256 = 9'd256;
parameter [8:0] LEGUP_F_main_BB_if_else98_257 = 9'd257;
parameter [8:0] LEGUP_F_main_BB_if_else98_258 = 9'd258;
parameter [8:0] LEGUP_F_main_BB_if_else98_259 = 9'd259;
parameter [8:0] LEGUP_F_main_BB_if_else98_260 = 9'd260;
parameter [8:0] LEGUP_F_main_BB_if_else98_261 = 9'd261;
parameter [8:0] LEGUP_F_main_BB_if_else98_262 = 9'd262;
parameter [8:0] LEGUP_F_main_BB_if_else98_263 = 9'd263;
parameter [8:0] LEGUP_F_main_BB_if_else98_264 = 9'd264;
parameter [8:0] LEGUP_F_main_BB_if_else98_265 = 9'd265;
parameter [8:0] LEGUP_F_main_BB_if_else112_266 = 9'd266;
parameter [8:0] LEGUP_F_main_BB_if_then114_267 = 9'd267;
parameter [8:0] LEGUP_F_main_BB_if_then114_268 = 9'd268;
parameter [8:0] LEGUP_F_main_BB_if_then114_269 = 9'd269;
parameter [8:0] LEGUP_F_main_BB_NodeBlock16_270 = 9'd270;
parameter [8:0] LEGUP_F_main_BB_LeafBlock14_271 = 9'd271;
parameter [8:0] LEGUP_F_main_BB_LeafBlock12_272 = 9'd272;
parameter [8:0] LEGUP_F_main_BB_if_then121_273 = 9'd273;
parameter [8:0] LEGUP_F_main_BB_if_then121_274 = 9'd274;
parameter [8:0] LEGUP_F_main_BB_if_then121_275 = 9'd275;
parameter [8:0] LEGUP_F_main_BB_if_then128_276 = 9'd276;
parameter [8:0] LEGUP_F_main_BB_if_then128_277 = 9'd277;
parameter [8:0] LEGUP_F_main_BB_if_then128_278 = 9'd278;
parameter [8:0] LEGUP_F_main_BB_if_else133_279 = 9'd279;
parameter [8:0] LEGUP_F_main_BB_if_else133_280 = 9'd280;
parameter [8:0] LEGUP_F_main_BB_if_else133_281 = 9'd281;
parameter [8:0] LEGUP_F_main_BB_if_end141_282 = 9'd282;
parameter [8:0] LEGUP_F_main_BB_if_end141_283 = 9'd283;
parameter [8:0] LEGUP_F_main_BB_if_end141_284 = 9'd284;
parameter [8:0] LEGUP_F_main_BB_if_end141_285 = 9'd285;
parameter [8:0] LEGUP_F_main_BB_if_then153_286 = 9'd286;
parameter [8:0] LEGUP_F_main_BB_if_then153_287 = 9'd287;
parameter [8:0] LEGUP_F_main_BB_if_else158_288 = 9'd288;
parameter [8:0] LEGUP_F_main_BB_if_then160_289 = 9'd289;
parameter [8:0] LEGUP_F_main_BB_if_end163_290 = 9'd290;
parameter [8:0] LEGUP_F_main_BB_sw_bb168_291 = 9'd291;
parameter [8:0] LEGUP_F_main_BB_if_then170_292 = 9'd292;
parameter [8:0] LEGUP_F_main_BB_if_end172_293 = 9'd293;
parameter [8:0] LEGUP_F_main_BB_if_end172_294 = 9'd294;
parameter [8:0] LEGUP_F_main_BB_if_end172_295 = 9'd295;
parameter [8:0] LEGUP_F_main_BB_if_end172_296 = 9'd296;
parameter [8:0] LEGUP_F_main_BB_if_end172_297 = 9'd297;
parameter [8:0] LEGUP_F_main_BB_if_end172_298 = 9'd298;
parameter [8:0] LEGUP_F_main_BB_if_end172_299 = 9'd299;
parameter [8:0] LEGUP_F_main_BB_if_end172_300 = 9'd300;
parameter [8:0] LEGUP_F_main_BB_if_end172_301 = 9'd301;
parameter [8:0] LEGUP_F_main_BB_if_end172_302 = 9'd302;
parameter [8:0] LEGUP_F_main_BB_if_end172_303 = 9'd303;
parameter [8:0] LEGUP_F_main_BB_if_end172_304 = 9'd304;
parameter [8:0] LEGUP_F_main_BB_if_end172_305 = 9'd305;
parameter [8:0] LEGUP_F_main_BB_if_end172_306 = 9'd306;
parameter [8:0] LEGUP_F_main_BB_if_end172_307 = 9'd307;
parameter [8:0] LEGUP_F_main_BB_if_end172_308 = 9'd308;
parameter [8:0] LEGUP_F_main_BB_if_end172_309 = 9'd309;
parameter [8:0] LEGUP_F_main_BB_if_end172_310 = 9'd310;
parameter [8:0] LEGUP_F_main_BB_if_end172_311 = 9'd311;
parameter [8:0] LEGUP_F_main_BB_if_end172_312 = 9'd312;
parameter [8:0] LEGUP_F_main_BB_if_end172_313 = 9'd313;
parameter [8:0] LEGUP_F_main_BB_if_end172_314 = 9'd314;
parameter [8:0] LEGUP_F_main_BB_if_end172_315 = 9'd315;
parameter [8:0] LEGUP_F_main_BB_if_end172_316 = 9'd316;
parameter [8:0] LEGUP_F_main_BB_if_end172_317 = 9'd317;
parameter [8:0] LEGUP_F_main_BB_if_end172_318 = 9'd318;
parameter [8:0] LEGUP_F_main_BB_if_end172_319 = 9'd319;
parameter [8:0] LEGUP_F_main_BB_if_end172_320 = 9'd320;
parameter [8:0] LEGUP_F_main_BB_if_end172_321 = 9'd321;
parameter [8:0] LEGUP_F_main_BB_if_end172_322 = 9'd322;
parameter [8:0] LEGUP_F_main_BB_if_end172_323 = 9'd323;
parameter [8:0] LEGUP_F_main_BB_if_end172_324 = 9'd324;
parameter [8:0] LEGUP_F_main_BB_if_end172_325 = 9'd325;
parameter [8:0] LEGUP_F_main_BB_NodeBlock23_326 = 9'd326;
parameter [8:0] LEGUP_F_main_BB_LeafBlock21_327 = 9'd327;
parameter [8:0] LEGUP_F_main_BB_LeafBlock19_328 = 9'd328;
parameter [8:0] LEGUP_F_main_BB_if_then177_329 = 9'd329;
parameter [8:0] LEGUP_F_main_BB_if_then184_330 = 9'd330;
parameter [8:0] LEGUP_F_main_BB_if_then191_331 = 9'd331;
parameter [8:0] LEGUP_F_main_BB_if_else196_332 = 9'd332;
parameter [8:0] LEGUP_F_main_BB_if_end203_333 = 9'd333;
parameter [8:0] LEGUP_F_main_BB_if_end203_334 = 9'd334;
parameter [8:0] LEGUP_F_main_BB_if_end203_335 = 9'd335;
parameter [8:0] LEGUP_F_main_BB_if_end203_336 = 9'd336;
parameter [8:0] LEGUP_F_main_BB_if_end203_337 = 9'd337;
parameter [8:0] LEGUP_F_main_BB_if_end203_338 = 9'd338;
parameter [8:0] LEGUP_F_main_BB_if_then216_339 = 9'd339;
parameter [8:0] LEGUP_F_main_BB_if_then216_340 = 9'd340;
parameter [8:0] LEGUP_F_main_BB_if_else222_341 = 9'd341;
parameter [8:0] LEGUP_F_main_BB_if_then224_342 = 9'd342;
parameter [8:0] LEGUP_F_main_BB_sw_bb233_343 = 9'd343;
parameter [8:0] LEGUP_F_main_BB_if_end236_344 = 9'd344;
parameter [8:0] LEGUP_F_main_BB_if_end236_345 = 9'd345;
parameter [8:0] LEGUP_F_main_BB_if_end236_346 = 9'd346;
parameter [8:0] LEGUP_F_main_BB_if_end236_347 = 9'd347;
parameter [8:0] LEGUP_F_main_BB_if_end236_348 = 9'd348;
parameter [8:0] LEGUP_F_main_BB_if_end236_349 = 9'd349;
parameter [8:0] LEGUP_F_main_BB_if_end236_350 = 9'd350;
parameter [8:0] LEGUP_F_main_BB_if_end236_351 = 9'd351;
parameter [8:0] LEGUP_F_main_BB_if_end236_352 = 9'd352;
parameter [8:0] LEGUP_F_main_BB_if_end236_353 = 9'd353;
parameter [8:0] LEGUP_F_main_BB_if_end236_354 = 9'd354;
parameter [8:0] LEGUP_F_main_BB_if_end236_355 = 9'd355;
parameter [8:0] LEGUP_F_main_BB_if_end236_356 = 9'd356;
parameter [8:0] LEGUP_F_main_BB_if_end236_357 = 9'd357;
parameter [8:0] LEGUP_F_main_BB_if_end236_358 = 9'd358;
parameter [8:0] LEGUP_F_main_BB_if_end236_359 = 9'd359;
parameter [8:0] LEGUP_F_main_BB_if_end236_360 = 9'd360;
parameter [8:0] LEGUP_F_main_BB_if_end236_361 = 9'd361;
parameter [8:0] LEGUP_F_main_BB_if_end236_362 = 9'd362;
parameter [8:0] LEGUP_F_main_BB_if_end236_363 = 9'd363;
parameter [8:0] LEGUP_F_main_BB_if_end236_364 = 9'd364;
parameter [8:0] LEGUP_F_main_BB_if_end236_365 = 9'd365;
parameter [8:0] LEGUP_F_main_BB_if_end236_366 = 9'd366;
parameter [8:0] LEGUP_F_main_BB_if_end236_367 = 9'd367;
parameter [8:0] LEGUP_F_main_BB_if_end236_368 = 9'd368;
parameter [8:0] LEGUP_F_main_BB_if_end236_369 = 9'd369;
parameter [8:0] LEGUP_F_main_BB_if_end236_370 = 9'd370;
parameter [8:0] LEGUP_F_main_BB_if_end236_371 = 9'd371;
parameter [8:0] LEGUP_F_main_BB_if_end236_372 = 9'd372;
parameter [8:0] LEGUP_F_main_BB_if_end236_373 = 9'd373;
parameter [8:0] LEGUP_F_main_BB_if_end236_374 = 9'd374;
parameter [8:0] LEGUP_F_main_BB_if_end236_375 = 9'd375;
parameter [8:0] LEGUP_F_main_BB_if_end236_376 = 9'd376;
parameter [8:0] LEGUP_F_main_BB_if_end236_377 = 9'd377;
parameter [8:0] LEGUP_F_main_BB_if_end236_378 = 9'd378;
parameter [8:0] LEGUP_F_main_BB_if_end236_379 = 9'd379;
parameter [8:0] LEGUP_F_main_BB_if_end236_380 = 9'd380;
parameter [8:0] LEGUP_F_main_BB_for_cond266_preheader_381 = 9'd381;
parameter [8:0] LEGUP_F_main_BB_for_body268_382 = 9'd382;
parameter [8:0] LEGUP_F_main_BB_for_body268_383 = 9'd383;
parameter [8:0] LEGUP_F_main_BB_for_body268_384 = 9'd384;
parameter [8:0] LEGUP_F_main_BB_for_end274_385 = 9'd385;
parameter [8:0] LEGUP_F_main_BB_for_end278_386 = 9'd386;
parameter [8:0] LEGUP_F_main_BB_cleanup_387 = 9'd387;

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
output  memory_controller_1_write_enable_a;
output [63:0] memory_controller_1_in_a;
output reg  memory_controller_1_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_a;
output reg [1:0] memory_controller_1_size_a;
input [63:0] memory_controller_1_out_a;
output  memory_controller_1_write_enable_b;
output [63:0] memory_controller_1_in_b;
output  memory_controller_1_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_b;
output [1:0] memory_controller_1_size_b;
input [63:0] memory_controller_1_out_b;
output  memory_controller_0_write_enable_a;
output [63:0] memory_controller_0_in_a;
output reg  memory_controller_0_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_a;
output reg [1:0] memory_controller_0_size_a;
input [63:0] memory_controller_0_out_a;
output  memory_controller_0_write_enable_b;
output [63:0] memory_controller_0_in_b;
output  memory_controller_0_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_b;
output [1:0] memory_controller_0_size_b;
input [63:0] memory_controller_0_out_b;
reg [8:0] cur_state/* synthesis syn_encoding="onehot" */;
reg [8:0] next_state;
wire  fsm_stall;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla466_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla466_sub_reg;
reg [31:0] main_NodeBlock9_state_0;
reg [31:0] main_NodeBlock9_state_0_reg;
reg [31:0] main_NodeBlock9_i_0;
reg [31:0] main_NodeBlock9_i_0_reg;
reg [31:0] main_NodeBlock9_j_0;
reg [31:0] main_NodeBlock9_j_0_reg;
reg [31:0] main_NodeBlock9_a_0;
reg [31:0] main_NodeBlock9_a_0_reg;
reg [31:0] main_NodeBlock9_b_0;
reg [31:0] main_NodeBlock9_b_0_reg;
reg [31:0] main_NodeBlock9_pos_a_X_0;
reg [31:0] main_NodeBlock9_pos_a_X_0_reg;
reg [31:0] main_NodeBlock9_pos_a_Y_0;
reg [31:0] main_NodeBlock9_pos_a_Y_0_reg;
reg [31:0] main_NodeBlock9_pos_b_X_0;
reg [31:0] main_NodeBlock9_pos_b_X_0_reg;
reg [31:0] main_NodeBlock9_pos_b_Y_0;
reg [31:0] main_NodeBlock9_pos_b_Y_0_reg;
reg [31:0] main_NodeBlock9_sum_mesh_0;
reg [31:0] main_NodeBlock9_sum_mesh_0_reg;
reg [31:0] main_NodeBlock9_sum_1hop_0;
reg [31:0] main_NodeBlock9_sum_1hop_0_reg;
reg [31:0] main_NodeBlock9_seed_0;
reg [31:0] main_NodeBlock9_seed_0_reg;
reg  main_NodeBlock9_Pivot10;
reg  main_NodeBlock7_Pivot8;
reg  main_NodeBlock5_Pivot6;
reg  main_LeafBlock3_SwitchLeaf4;
reg [31:0] main_NodeBlock9_backedge_state_0_be;
reg [31:0] main_NodeBlock9_backedge_state_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_i_0_be;
reg [31:0] main_NodeBlock9_backedge_i_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_j_0_be;
reg [31:0] main_NodeBlock9_backedge_j_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_a_0_be;
reg [31:0] main_NodeBlock9_backedge_a_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_b_0_be;
reg [31:0] main_NodeBlock9_backedge_b_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_seed_0_be;
reg [31:0] main_NodeBlock9_backedge_seed_0_be_reg;
reg  main_NodeBlock1_Pivot2;
reg  main_NodeBlock_Pivot;
reg  main_LeafBlock_SwitchLeaf;
reg [31:0] main_for_body_0;
reg [31:0] main_for_body_0_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body_arrayidx;
reg [31:0] main_for_body_add;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body_arrayidx6;
reg [31:0] main_for_body_1;
reg [31:0] main_for_body_1_reg;
reg  main_for_body_exitcond8;
reg  main_for_body_exitcond8_reg;
reg [31:0] main_for_cond10_preheader_i_2485;
reg [31:0] main_for_cond10_preheader_i_2485_reg;
reg [26:0] main_for_cond10_preheader_bit_select17;
reg [31:0] main_for_cond10_preheader_sr_negate;
reg [29:0] main_for_cond10_preheader_bit_select19;
reg [31:0] main_for_cond10_preheader_bit_concat20;
reg [31:0] main_for_cond10_preheader_bit_concat18;
reg [31:0] main_for_cond10_preheader_sr_add;
reg [31:0] main_for_cond10_preheader_sr_add_reg;
reg [31:0] main_for_body12_j_1484;
reg [31:0] main_for_body12_j_1484_reg;
reg [31:0] main_for_body12_2;
reg [31:0] main_for_body12_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body12_arrayidx14;
reg [31:0] main_for_body12_3;
reg [31:0] main_for_body12_3_reg;
reg  main_for_body12_exitcond9;
reg  main_for_body12_exitcond9_reg;
reg [31:0] main_for_inc18_4;
reg  main_for_inc18_exitcond;
reg [31:0] main_for_body23_i_3486;
reg [31:0] main_for_body23_i_3486_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body23_arrayidx24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body23_arrayidx25;
reg [31:0] main_for_body23_5;
reg [31:0] main_for_body23_5_reg;
reg  main_for_body23_exitcond10;
reg  main_for_body23_exitcond10_reg;
reg [31:0] main_for_end28_6;
reg [31:0] main_for_end28_6_reg;
reg [31:0] main_for_end28_sub_i;
reg [31:0] main_for_end28_xor2_i;
reg [5:0] main_for_end28_rem;
reg [26:0] main_for_end28_bit_select13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end28_arrayidx30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end28_arrayidx30_reg;
reg [31:0] main_for_end28_xor2_i16;
reg [31:0] main_for_end28_xor2_i16_reg;
reg [5:0] main_for_end28_rem33;
reg [5:0] main_for_end28_rem33_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end28_arrayidx34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end28_arrayidx34_reg;
reg [31:0] main_for_end28_add35;
reg [31:0] main_for_end28_add35_reg;
reg [6:0] main_for_end28_sr_negate7;
reg [29:0] main_for_end28_bit_select15;
reg [31:0] main_for_end28_bit_concat16;
reg [31:0] main_for_end28_bit_concat14;
reg [31:0] main_for_end28_sr_add10;
reg [31:0] main_for_end28_sr_add10_reg;
reg [31:0] main_for_end28_arrayidx38_sum;
reg [31:0] main_for_end28_arrayidx38_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end28_arrayidx39;
reg  main_sw_bb40_cmp41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx42;
reg [31:0] main_if_end_7;
reg [31:0] main_if_end_7_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx43;
reg [31:0] main_if_end_8;
reg [31:0] main_if_end_8_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx44;
reg [31:0] main_if_end_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx45;
reg [31:0] main_if_end_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx46;
reg [31:0] main_if_end_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx47;
reg [31:0] main_if_end_12;
reg  main_if_end_cmp48;
reg [1:0] main_if_end_1;
reg [1:0] main_if_end_1_reg;
reg  main_sw_bb51_cmp52;
reg [31:0] main_if_end54_sub_i14;
reg [31:0] main_if_end54_xor2_i15;
reg [5:0] main_if_end54_rem56;
reg [5:0] main_if_end54_rem56_reg;
reg [31:0] main_if_end54_add57;
reg [31:0] main_if_end54_add57_reg;
reg  main_if_end54_cmp58;
reg  main_if_end54_cmp58_reg;
reg  main_if_end54_cmp60;
reg  main_if_end54_cmp60_reg;
reg [31:0] main_if_then61_xor2_i13;
reg [5:0] main_if_then61_rem63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then61_arrayidx64;
reg [31:0] main_if_then61_13;
reg [31:0] main_if_then61_13_reg;
reg [31:0] main_if_then61_add65;
reg [31:0] main_if_then61_add65_reg;
reg [31:0] main_if_then61_xor2_i12;
reg [31:0] main_if_then61_xor2_i12_reg;
reg [5:0] main_if_then61_rem68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then61_arrayidx69;
reg [31:0] main_if_then61_14;
reg [31:0] main_if_then61_14_reg;
reg [31:0] main_if_then61_add70;
reg [31:0] main_if_then61_add71;
reg [31:0] main_if_then61_add71_reg;
reg  main_if_else72_cmp73;
reg [31:0] main_if_then74_xor2_i10;
reg [5:0] main_if_then74_rem76;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then74_arrayidx77;
reg [31:0] main_if_then74_15;
reg [31:0] main_if_then74_15_reg;
reg [31:0] main_if_then74_add78;
reg [31:0] main_if_then74_add78_reg;
reg [31:0] main_if_then74_xor2_i9;
reg [31:0] main_if_then74_xor2_i9_reg;
reg [5:0] main_if_then74_rem81;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then74_arrayidx82;
reg [31:0] main_if_then74_16;
reg [31:0] main_if_then74_16_reg;
reg [31:0] main_if_then74_add83;
reg [31:0] main_if_then74_add84;
reg [31:0] main_if_then74_add84_reg;
reg  main_if_else85_cmp86;
reg  main_if_else85_cmp86_reg;
reg [31:0] main_if_else85_xor2_i7;
reg [5:0] main_if_else85_rem89;
reg [5:0] main_if_else85_rem89_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then87_arrayidx90;
reg [31:0] main_if_then87_17;
reg [31:0] main_if_then87_add91;
reg [31:0] main_if_then87_add91_reg;
reg [31:0] main_if_then87_xor2_i6;
reg [5:0] main_if_then87_rem94;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then87_arrayidx95;
reg [31:0] main_if_then87_18;
reg [31:0] main_if_then87_18_reg;
reg [31:0] main_if_then87_add96;
reg [31:0] main_if_then87_add97;
reg [31:0] main_if_then87_add97_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else98_arrayidx101;
reg [31:0] main_if_else98_19;
reg [31:0] main_if_else98_add102;
reg [31:0] main_if_else98_add102_reg;
reg [31:0] main_if_else98_xor2_i4;
reg [5:0] main_if_else98_rem105;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else98_arrayidx106;
reg [31:0] main_if_else98_20;
reg [31:0] main_if_else98_20_reg;
reg [31:0] main_if_else98_add107;
reg [31:0] main_if_else98_add108;
reg [31:0] main_if_else98_add108_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then114_arrayidx115;
reg [31:0] main_if_then114_21;
reg [31:0] main_if_then114_add116;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then114_arrayidx117;
reg [31:0] main_if_then114_22;
reg [31:0] main_if_then114_add118;
reg  main_NodeBlock16_Pivot17;
reg  main_LeafBlock14_SwitchLeaf15;
reg  main_LeafBlock12_SwitchLeaf13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then121_arrayidx122;
reg [31:0] main_if_then121_23;
reg [31:0] main_if_then121_add123;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then121_arrayidx124;
reg [31:0] main_if_then121_24;
reg [31:0] main_if_then121_add125;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then128_arrayidx129;
reg [31:0] main_if_then128_25;
reg [31:0] main_if_then128_add130;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then128_arrayidx131;
reg [31:0] main_if_then128_26;
reg [31:0] main_if_then128_add132;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else133_arrayidx134;
reg [31:0] main_if_else133_27;
reg [31:0] main_if_else133_add135;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else133_arrayidx136;
reg [31:0] main_if_else133_28;
reg [31:0] main_if_else133_add137;
reg [31:0] main_if_end141_xi_0;
reg [31:0] main_if_end141_xi_0_reg;
reg [31:0] main_if_end141_xj_0;
reg [31:0] main_if_end141_xj_0_reg;
reg [31:0] main_if_end141_seed_1;
reg [31:0] main_if_end141_seed_1_reg;
reg [26:0] main_if_end141_bit_select9;
reg [31:0] main_if_end141_inc142;
reg [31:0] main_if_end141_inc142_reg;
reg [31:0] main_if_end141_sr_negate11;
reg [29:0] main_if_end141_bit_select11;
reg [31:0] main_if_end141_bit_concat12;
reg [31:0] main_if_end141_bit_concat10;
reg [31:0] main_if_end141_sr_add14;
reg [31:0] main_if_end141_sr_add14_reg;
reg [31:0] main_if_end141_arrayidx143_sum;
reg [31:0] main_if_end141_arrayidx143_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end141_arrayidx144;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end141_arrayidx144_reg;
reg [31:0] main_if_end141_29;
reg  main_if_end141_cmp145;
reg  main_if_end141_30;
reg  main_if_end141_30_reg;
reg  main_if_end141_or_cond;
reg  main_if_end141_31;
reg  main_if_end141_31_reg;
reg  main_if_end141_or_cond472;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then153_arrayidx156;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then153_arrayidx157;
reg  main_if_else158_cmp159;
reg [31:0] main_if_end163_pos_a_X_1;
reg [31:0] main_if_end163_pos_a_X_1_reg;
reg [31:0] main_if_end163_pos_a_Y_1;
reg [31:0] main_if_end163_pos_a_Y_1_reg;
reg  main_if_end163_cmp164;
reg [1:0] main_if_end163_473;
reg [31:0] main_if_end163_inc142_1;
reg  main_sw_bb168_cmp169;
reg [31:0] main_if_then170_inc171;
reg [31:0] main_if_end172_sub_i1;
reg [31:0] main_if_end172_xor2_i2;
reg [5:0] main_if_end172_rem174;
reg [3:0] main_if_end172_rem174_reg;
reg [31:0] main_if_end172_add175;
reg [31:0] main_if_end172_add175_reg;
reg  main_if_end172_Pivot26;
reg  main_NodeBlock23_Pivot24;
reg  main_LeafBlock21_SwitchLeaf22;
reg  main_LeafBlock19_SwitchLeaf20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then177_arrayidx178;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then177_arrayidx180;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then184_arrayidx185;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then184_arrayidx187;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then191_arrayidx192;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then191_arrayidx194;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else196_arrayidx197;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else196_arrayidx199;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end203_pn_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end203_pn_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end203_pn471_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end203_pn471_in_reg;
reg [31:0] main_if_end203_pn471;
reg [31:0] main_if_end203_pn;
reg [31:0] main_if_end203_xj_1;
reg [31:0] main_if_end203_xj_1_reg;
reg [31:0] main_if_end203_xi_1;
reg [31:0] main_if_end203_xi_1_reg;
reg [26:0] main_if_end203_bit_select5;
reg [31:0] main_if_end203_sr_negate15;
reg [29:0] main_if_end203_bit_select7;
reg [31:0] main_if_end203_bit_concat8;
reg [31:0] main_if_end203_bit_concat8_reg;
reg [31:0] main_if_end203_bit_concat6;
reg [31:0] main_if_end203_bit_concat6_reg;
reg [31:0] main_if_end203_sr_add18;
reg [31:0] main_if_end203_arrayidx205_sum;
reg [31:0] main_if_end203_arrayidx205_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end203_arrayidx206;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end203_arrayidx206_reg;
reg [31:0] main_if_end203_32;
reg  main_if_end203_cmp207;
reg  main_if_end203_33;
reg  main_if_end203_33_reg;
reg  main_if_end203_or_cond474;
reg  main_if_end203_34;
reg  main_if_end203_34_reg;
reg  main_if_end203_or_cond475;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then216_arrayidx219;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then216_arrayidx220;
reg [31:0] main_if_then216_inc221;
reg [31:0] main_if_then216_inc221_reg;
reg [31:0] main_if_else222_inc204;
reg  main_if_else222_cmp223;
reg  main_sw_bb233_cmp234;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx237;
reg [31:0] main_if_end236_35;
reg [31:0] main_if_end236_35_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx238;
reg [31:0] main_if_end236_36;
reg [31:0] main_if_end236_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx239;
reg [31:0] main_if_end236_37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx240;
reg [31:0] main_if_end236_38;
reg [31:0] main_if_end236_sub;
reg [31:0] main_if_end236_sub_reg;
reg  main_if_end236_bit_select4;
reg  main_if_end236_bit_select4_reg;
reg [31:0] main_if_end236_mul;
reg [31:0] main_if_end236_mul_reg;
reg [31:0] main_if_end236_mul_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx244;
reg [31:0] main_if_end236_39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end236_arrayidx245;
reg [31:0] main_if_end236_40;
reg [31:0] main_if_end236_sub246;
reg [31:0] main_if_end236_sub246_reg;
reg  main_if_end236_bit_select3;
reg  main_if_end236_bit_select3_reg;
reg [31:0] main_if_end236_mul249;
reg [31:0] main_if_end236_mul249_reg;
reg [31:0] main_if_end236_diff_pos_y_0;
reg [31:0] main_if_end236_diff_pos_y_0_reg;
reg [31:0] main_if_end236_add251;
reg [31:0] main_if_end236_add251_reg;
reg [31:0] main_if_end236_newEarly_add253;
reg [31:0] main_if_end236_newEarly_add253_reg;
reg [31:0] main_if_end236_newCurOp_add253;
reg [31:0] main_if_end236_newCurOp_add253_reg;
reg [30:0] main_if_end236_div;
reg [5:0] main_if_end236_rem254;
reg [30:0] main_if_end236_div256;
reg [5:0] main_if_end236_rem257;
reg [31:0] main_if_end236_add258;
reg [31:0] main_if_end236_add258_reg;
reg [31:0] main_if_end236_newEarly_add259;
reg [31:0] main_if_end236_newEarly_add259_reg;
reg [31:0] main_if_end236_newEarly_sub260;
reg [31:0] main_if_end236_newEarly_add261;
reg [31:0] main_if_end236_newCurOp_add261;
reg [31:0] main_if_end236_inc262;
reg [31:0] main_if_end236_inc262_reg;
reg [4:0] main_for_cond266_preheader_i_4482;
reg [4:0] main_for_cond266_preheader_i_4482_reg;
reg [26:0] main_for_cond266_preheader_bit_select;
reg [5:0] main_for_cond266_preheader_sr_negate12;
reg [29:0] main_for_cond266_preheader_bit_select1;
reg [31:0] main_for_cond266_preheader_bit_concat2;
reg [31:0] main_for_cond266_preheader_bit_concat;
reg [31:0] main_for_cond266_preheader_sr_add16;
reg [31:0] main_for_cond266_preheader_sr_add16_reg;
reg [31:0] main_for_body268_j_2481;
reg [31:0] main_for_body268_j_2481_reg;
reg [31:0] main_for_body268_41;
reg [31:0] main_for_body268_41_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body268_arrayidx270;
reg [31:0] main_for_body268_42;
reg [31:0] main_for_body268_43;
reg [31:0] main_for_body268_43_reg;
reg  main_for_body268_exitcond6;
reg  main_for_body268_exitcond6_reg;
reg [5:0] main_for_end274_44;
reg  main_for_end274_exitcond7;
reg  main_cleanup_retval_0;
reg  main_cleanup_retval_0_reg;
reg [10:0] main_entry_vla466_address_a;
reg  main_entry_vla466_write_enable_a;
reg [31:0] main_entry_vla466_in_a;
wire [31:0] main_entry_vla466_out_a;
reg [10:0] main_entry_vla1467_address_a;
reg  main_entry_vla1467_write_enable_a;
reg [31:0] main_entry_vla1467_in_a;
wire [31:0] main_entry_vla1467_out_a;
reg [9:0] main_entry_vla2468_address_a;
reg  main_entry_vla2468_write_enable_a;
reg [31:0] main_entry_vla2468_in_a;
wire [31:0] main_entry_vla2468_out_a;
reg [9:0] main_entry_vla2468_address_b;
reg  main_entry_vla2468_write_enable_b;
reg [31:0] main_entry_vla2468_in_b;
wire [31:0] main_entry_vla2468_out_b;
reg [9:0] main_entry_vla3469_address_a;
reg  main_entry_vla3469_write_enable_a;
reg [31:0] main_entry_vla3469_in_a;
wire [31:0] main_entry_vla3469_out_a;
reg [9:0] main_entry_vla3469_address_b;
reg  main_entry_vla3469_write_enable_b;
reg [31:0] main_entry_vla3469_in_b;
wire [31:0] main_entry_vla3469_out_b;
reg [9:0] main_entry_vla4470_address_a;
reg  main_entry_vla4470_write_enable_a;
reg [31:0] main_entry_vla4470_in_a;
wire [31:0] main_entry_vla4470_out_a;
reg [31:0] main_signed_modulus_32_0_op0;
reg [6:0] main_signed_modulus_32_0_op1;
reg  main_signed_modulus_32_0_inst_clock;
reg  main_signed_modulus_32_0_inst_aclr;
reg  main_signed_modulus_32_0_inst_clken;
reg [31:0] main_signed_modulus_32_0_inst_numer;
reg [6:0] main_signed_modulus_32_0_inst_denom;
wire [31:0] main_signed_modulus_32_0_inst_quotient;
wire [6:0] main_signed_modulus_32_0_inst_remain;
reg [6:0] divide_main_if_end54_rem56_temp_out;
reg  divide_main_if_end54_rem56_en;
reg [5:0] divide_main_if_end54_rem56_out;
reg [5:0] main_signed_modulus_32_0;
reg [31:0] main_signed_divide_32_0_op0;
reg [3:0] main_signed_divide_32_0_op1;
reg  main_signed_divide_32_0_inst_clock;
reg  main_signed_divide_32_0_inst_aclr;
reg  main_signed_divide_32_0_inst_clken;
reg [31:0] main_signed_divide_32_0_inst_numer;
reg [3:0] main_signed_divide_32_0_inst_denom;
wire [31:0] main_signed_divide_32_0_inst_quotient;
wire [3:0] main_signed_divide_32_0_inst_remain;
reg [31:0] divide_main_if_end236_div_temp_out;
reg  divide_main_if_end236_div_en;
reg [30:0] divide_main_if_end236_div_out;
reg [30:0] main_signed_divide_32_0;
wire [3:0] main_NodeBlock9_Pivot10_op1_temp;
wire [4:0] main_NodeBlock7_Pivot8_op1_temp;
wire [4:0] main_NodeBlock5_Pivot6_op1_temp;
wire [2:0] main_NodeBlock1_Pivot2_op1_temp;
wire [3:0] main_NodeBlock_Pivot_op1_temp;
wire [1:0] main_for_cond10_preheader_bit_concat20_bit_select_operand_2;
wire [4:0] main_for_cond10_preheader_bit_concat18_bit_select_operand_2;
reg [26:0] main_for_end28_rem_width_extended;
reg [29:0] main_for_end28_sr_negate7_width_extended;
wire [1:0] main_for_end28_bit_concat16_bit_select_operand_2;
wire [4:0] main_for_end28_bit_concat14_bit_select_operand_2;
wire [3:0] main_NodeBlock16_Pivot17_op1_temp;
wire [1:0] main_if_end141_bit_concat12_bit_select_operand_2;
wire [4:0] main_if_end141_bit_concat10_bit_select_operand_2;
wire [7:0] main_if_else158_cmp159_op1_temp;
wire [2:0] main_if_end172_Pivot26_op1_temp;
wire [3:0] main_NodeBlock23_Pivot24_op1_temp;
wire [1:0] main_if_end203_bit_concat8_bit_select_operand_2;
wire [4:0] main_if_end203_bit_concat6_bit_select_operand_2;
wire [7:0] main_if_else222_cmp223_op1_temp;
reg [26:0] main_for_cond266_preheader_i_4482_reg_width_extended;
reg [29:0] main_for_cond266_preheader_sr_negate12_width_extended;
wire [1:0] main_for_cond266_preheader_bit_concat2_bit_select_operand_2;
wire [4:0] main_for_cond266_preheader_bit_concat_bit_select_operand_2;

/*   %rem56 = srem i32 %xor2.i15, 4, !dbg !151, !MSB !153, !LSB !67, !extendFrom !153*/
lpm_divide main_signed_modulus_32_0_inst (
	.clock (main_signed_modulus_32_0_inst_clock),
	.aclr (main_signed_modulus_32_0_inst_aclr),
	.clken (main_signed_modulus_32_0_inst_clken),
	.numer (main_signed_modulus_32_0_inst_numer),
	.denom (main_signed_modulus_32_0_inst_denom),
	.quotient (main_signed_modulus_32_0_inst_quotient),
	.remain (main_signed_modulus_32_0_inst_remain)
);

defparam
	main_signed_modulus_32_0_inst.lpm_widthn = 32,
	main_signed_modulus_32_0_inst.lpm_widthd = 7,
	main_signed_modulus_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_modulus_32_0_inst.lpm_pipeline = 32;

/*   %div = sdiv i32 %mul.sub, 2, !dbg !291, !MSB !86, !LSB !67, !extendFrom !292*/
lpm_divide main_signed_divide_32_0_inst (
	.clock (main_signed_divide_32_0_inst_clock),
	.aclr (main_signed_divide_32_0_inst_aclr),
	.clken (main_signed_divide_32_0_inst_clken),
	.numer (main_signed_divide_32_0_inst_numer),
	.denom (main_signed_divide_32_0_inst_denom),
	.quotient (main_signed_divide_32_0_inst_quotient),
	.remain (main_signed_divide_32_0_inst_remain)
);

defparam
	main_signed_divide_32_0_inst.lpm_widthn = 32,
	main_signed_divide_32_0_inst.lpm_widthd = 4,
	main_signed_divide_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_divide_32_0_inst.lpm_pipeline = 32;



//   %vla466 = alloca [1568 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_single_port_intel main_entry_vla466 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla466_address_a ),
	.wren_a( main_entry_vla466_write_enable_a ),
	.data_a( main_entry_vla466_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla466_out_a )
);
defparam main_entry_vla466.width_a = 32;
defparam main_entry_vla466.widthad_a = 11;
defparam main_entry_vla466.width_be_a = 4;
defparam main_entry_vla466.numwords_a = 1568;
defparam main_entry_vla466.latency = 1;


//   %vla1467 = alloca [1568 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_single_port_intel main_entry_vla1467 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla1467_address_a ),
	.wren_a( main_entry_vla1467_write_enable_a ),
	.data_a( main_entry_vla1467_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla1467_out_a )
);
defparam main_entry_vla1467.width_a = 32;
defparam main_entry_vla1467.widthad_a = 11;
defparam main_entry_vla1467.width_be_a = 4;
defparam main_entry_vla1467.numwords_a = 1568;
defparam main_entry_vla1467.latency = 1;


//   %vla2468 = alloca [784 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla2468 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla2468_address_a ),
	.wren_a( main_entry_vla2468_write_enable_a ),
	.data_a( main_entry_vla2468_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla2468_out_a ),
	.address_b( main_entry_vla2468_address_b ),
	.wren_b( main_entry_vla2468_write_enable_b ),
	.data_b( main_entry_vla2468_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla2468_out_b )
);
defparam main_entry_vla2468.width_a = 32;
defparam main_entry_vla2468.widthad_a = 10;
defparam main_entry_vla2468.width_be_a = 4;
defparam main_entry_vla2468.numwords_a = 784;
defparam main_entry_vla2468.width_b = 32;
defparam main_entry_vla2468.widthad_b = 10;
defparam main_entry_vla2468.width_be_b = 4;
defparam main_entry_vla2468.numwords_b = 784;
defparam main_entry_vla2468.latency = 1;


//   %vla3469 = alloca [784 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla3469 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla3469_address_a ),
	.wren_a( main_entry_vla3469_write_enable_a ),
	.data_a( main_entry_vla3469_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla3469_out_a ),
	.address_b( main_entry_vla3469_address_b ),
	.wren_b( main_entry_vla3469_write_enable_b ),
	.data_b( main_entry_vla3469_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla3469_out_b )
);
defparam main_entry_vla3469.width_a = 32;
defparam main_entry_vla3469.widthad_a = 10;
defparam main_entry_vla3469.width_be_a = 4;
defparam main_entry_vla3469.numwords_a = 784;
defparam main_entry_vla3469.width_b = 32;
defparam main_entry_vla3469.widthad_b = 10;
defparam main_entry_vla3469.width_be_b = 4;
defparam main_entry_vla3469.numwords_b = 784;
defparam main_entry_vla3469.latency = 1;


//   %vla4470 = alloca [784 x i32], align 4, !dbg !69, !MSB !66, !LSB !67, !extendFrom !66
ram_single_port_intel main_entry_vla4470 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla4470_address_a ),
	.wren_a( main_entry_vla4470_write_enable_a ),
	.data_a( main_entry_vla4470_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla4470_out_a )
);
defparam main_entry_vla4470.width_a = 32;
defparam main_entry_vla4470.widthad_a = 10;
defparam main_entry_vla4470.width_be_a = 4;
defparam main_entry_vla4470.numwords_a = 784;
defparam main_entry_vla4470.latency = 1;

/* Unsynthesizable Statements */
/* synthesis translate_off */
always @(posedge clk)
	if (!fsm_stall) begin
	if ((cur_state == LEGUP_F_main_BB_if_then160_289)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_if_then224_342)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_body268_384)) begin
		$write("%3d ", $signed(main_for_body268_42));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_body268_42) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end274_385)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_end278_386)) begin
		$write("\nEvaluation = %d\nEvaluation 1-hop = %d\n", $signed(main_NodeBlock9_sum_mesh_0_reg), $signed(main_NodeBlock9_sum_1hop_0_reg));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_mesh_0_reg) === 1'bX) finish <= 0;
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_1hop_0_reg) === 1'bX) finish <= 0;
	end
end
/* synthesis translate_on */
always @(posedge clk) begin
if (reset == 1'b1)
	cur_state <= LEGUP_0;
else if (!fsm_stall)
	cur_state <= next_state;
end

always @(*)
begin
next_state = cur_state;
case(cur_state)  /* synthesis parallel_case */
LEGUP_0:
	if ((fsm_stall == 1'd0) && (start == 1'd1))
		next_state = LEGUP_F_main_BB_entry_1;
LEGUP_F_main_BB_LeafBlock12_272:
	if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then121_273;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else133_279;
LEGUP_F_main_BB_LeafBlock14_271:
	if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then128_276;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else133_279;
LEGUP_F_main_BB_LeafBlock19_328:
	if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then177_329;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else196_332;
LEGUP_F_main_BB_LeafBlock21_327:
	if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then191_331;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else196_332;
LEGUP_F_main_BB_LeafBlock3_5:
	if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond266_preheader_preheader_7;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_LeafBlock_10:
	if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd1))
		next_state = LEGUP_F_main_BB_for_body_preheader_11;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_NodeBlock16_270:
	if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock12_272;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock14_271;
LEGUP_F_main_BB_NodeBlock1_8:
	if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock_10;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock_9;
LEGUP_F_main_BB_NodeBlock23_326:
	if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then184_330;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock21_327;
LEGUP_F_main_BB_NodeBlock5_4:
	if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb233_343;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock3_5;
LEGUP_F_main_BB_NodeBlock7_3:
	if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb168_291;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock5_4;
LEGUP_F_main_BB_NodeBlock9_2:
	if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock1_8;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock7_3;
LEGUP_F_main_BB_NodeBlock9_backedge_6:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_NodeBlock_9:
	if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb40_59;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd0))
		next_state = LEGUP_F_main_BB_sw_bb51_63;
LEGUP_F_main_BB_cleanup_387:
		next_state = LEGUP_0;
LEGUP_F_main_BB_entry_1:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_for_body12_16:
		next_state = LEGUP_F_main_BB_for_body12_17;
LEGUP_F_main_BB_for_body12_17:
		next_state = LEGUP_F_main_BB_for_body12_18;
LEGUP_F_main_BB_for_body12_18:
	if ((fsm_stall == 1'd0) && (main_for_body12_exitcond9_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_inc18_19;
	else if ((fsm_stall == 1'd0) && (main_for_body12_exitcond9_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body12_16;
LEGUP_F_main_BB_for_body23_21:
		next_state = LEGUP_F_main_BB_for_body23_22;
LEGUP_F_main_BB_for_body23_22:
	if ((fsm_stall == 1'd0) && (main_for_body23_exitcond10_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end28_23;
	else if ((fsm_stall == 1'd0) && (main_for_body23_exitcond10_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body23_21;
LEGUP_F_main_BB_for_body23_preheader_20:
		next_state = LEGUP_F_main_BB_for_body23_21;
LEGUP_F_main_BB_for_body268_382:
		next_state = LEGUP_F_main_BB_for_body268_383;
LEGUP_F_main_BB_for_body268_383:
		next_state = LEGUP_F_main_BB_for_body268_384;
LEGUP_F_main_BB_for_body268_384:
	if ((fsm_stall == 1'd0) && (main_for_body268_exitcond6_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end274_385;
	else if ((fsm_stall == 1'd0) && (main_for_body268_exitcond6_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body268_382;
LEGUP_F_main_BB_for_body_12:
		next_state = LEGUP_F_main_BB_for_body_13;
LEGUP_F_main_BB_for_body_13:
	if ((fsm_stall == 1'd0) && (main_for_body_exitcond8_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond10_preheader_preheader_14;
	else if ((fsm_stall == 1'd0) && (main_for_body_exitcond8_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body_12;
LEGUP_F_main_BB_for_body_preheader_11:
		next_state = LEGUP_F_main_BB_for_body_12;
LEGUP_F_main_BB_for_cond10_preheader_15:
		next_state = LEGUP_F_main_BB_for_body12_16;
LEGUP_F_main_BB_for_cond10_preheader_preheader_14:
		next_state = LEGUP_F_main_BB_for_cond10_preheader_15;
LEGUP_F_main_BB_for_cond266_preheader_381:
		next_state = LEGUP_F_main_BB_for_body268_382;
LEGUP_F_main_BB_for_cond266_preheader_preheader_7:
		next_state = LEGUP_F_main_BB_for_cond266_preheader_381;
LEGUP_F_main_BB_for_end274_385:
	if ((fsm_stall == 1'd0) && (main_for_end274_exitcond7 == 1'd1))
		next_state = LEGUP_F_main_BB_for_end278_386;
	else if ((fsm_stall == 1'd0) && (main_for_end274_exitcond7 == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond266_preheader_381;
LEGUP_F_main_BB_for_end278_386:
		next_state = LEGUP_F_main_BB_cleanup_387;
LEGUP_F_main_BB_for_end28_23:
		next_state = LEGUP_F_main_BB_for_end28_24;
LEGUP_F_main_BB_for_end28_24:
		next_state = LEGUP_F_main_BB_for_end28_25;
LEGUP_F_main_BB_for_end28_25:
		next_state = LEGUP_F_main_BB_for_end28_26;
LEGUP_F_main_BB_for_end28_26:
		next_state = LEGUP_F_main_BB_for_end28_27;
LEGUP_F_main_BB_for_end28_27:
		next_state = LEGUP_F_main_BB_for_end28_28;
LEGUP_F_main_BB_for_end28_28:
		next_state = LEGUP_F_main_BB_for_end28_29;
LEGUP_F_main_BB_for_end28_29:
		next_state = LEGUP_F_main_BB_for_end28_30;
LEGUP_F_main_BB_for_end28_30:
		next_state = LEGUP_F_main_BB_for_end28_31;
LEGUP_F_main_BB_for_end28_31:
		next_state = LEGUP_F_main_BB_for_end28_32;
LEGUP_F_main_BB_for_end28_32:
		next_state = LEGUP_F_main_BB_for_end28_33;
LEGUP_F_main_BB_for_end28_33:
		next_state = LEGUP_F_main_BB_for_end28_34;
LEGUP_F_main_BB_for_end28_34:
		next_state = LEGUP_F_main_BB_for_end28_35;
LEGUP_F_main_BB_for_end28_35:
		next_state = LEGUP_F_main_BB_for_end28_36;
LEGUP_F_main_BB_for_end28_36:
		next_state = LEGUP_F_main_BB_for_end28_37;
LEGUP_F_main_BB_for_end28_37:
		next_state = LEGUP_F_main_BB_for_end28_38;
LEGUP_F_main_BB_for_end28_38:
		next_state = LEGUP_F_main_BB_for_end28_39;
LEGUP_F_main_BB_for_end28_39:
		next_state = LEGUP_F_main_BB_for_end28_40;
LEGUP_F_main_BB_for_end28_40:
		next_state = LEGUP_F_main_BB_for_end28_41;
LEGUP_F_main_BB_for_end28_41:
		next_state = LEGUP_F_main_BB_for_end28_42;
LEGUP_F_main_BB_for_end28_42:
		next_state = LEGUP_F_main_BB_for_end28_43;
LEGUP_F_main_BB_for_end28_43:
		next_state = LEGUP_F_main_BB_for_end28_44;
LEGUP_F_main_BB_for_end28_44:
		next_state = LEGUP_F_main_BB_for_end28_45;
LEGUP_F_main_BB_for_end28_45:
		next_state = LEGUP_F_main_BB_for_end28_46;
LEGUP_F_main_BB_for_end28_46:
		next_state = LEGUP_F_main_BB_for_end28_47;
LEGUP_F_main_BB_for_end28_47:
		next_state = LEGUP_F_main_BB_for_end28_48;
LEGUP_F_main_BB_for_end28_48:
		next_state = LEGUP_F_main_BB_for_end28_49;
LEGUP_F_main_BB_for_end28_49:
		next_state = LEGUP_F_main_BB_for_end28_50;
LEGUP_F_main_BB_for_end28_50:
		next_state = LEGUP_F_main_BB_for_end28_51;
LEGUP_F_main_BB_for_end28_51:
		next_state = LEGUP_F_main_BB_for_end28_52;
LEGUP_F_main_BB_for_end28_52:
		next_state = LEGUP_F_main_BB_for_end28_53;
LEGUP_F_main_BB_for_end28_53:
		next_state = LEGUP_F_main_BB_for_end28_54;
LEGUP_F_main_BB_for_end28_54:
		next_state = LEGUP_F_main_BB_for_end28_55;
LEGUP_F_main_BB_for_end28_55:
		next_state = LEGUP_F_main_BB_for_end28_56;
LEGUP_F_main_BB_for_end28_56:
		next_state = LEGUP_F_main_BB_for_end28_57;
LEGUP_F_main_BB_for_end28_57:
		next_state = LEGUP_F_main_BB_for_end28_58;
LEGUP_F_main_BB_for_end28_58:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_for_inc18_19:
	if ((fsm_stall == 1'd0) && (main_for_inc18_exitcond == 1'd1))
		next_state = LEGUP_F_main_BB_for_body23_preheader_20;
	else if ((fsm_stall == 1'd0) && (main_for_inc18_exitcond == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond10_preheader_15;
LEGUP_F_main_BB_if_else112_266:
	if ((fsm_stall == 1'd0) && (main_if_end54_cmp60_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then114_267;
	else if ((fsm_stall == 1'd0) && (main_if_end54_cmp60_reg == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock16_270;
LEGUP_F_main_BB_if_else133_279:
		next_state = LEGUP_F_main_BB_if_else133_280;
LEGUP_F_main_BB_if_else133_280:
		next_state = LEGUP_F_main_BB_if_else133_281;
LEGUP_F_main_BB_if_else133_281:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_if_else158_288:
	if ((fsm_stall == 1'd0) && (main_if_else158_cmp159 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then160_289;
	else if ((fsm_stall == 1'd0) && (main_if_else158_cmp159 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end163_290;
LEGUP_F_main_BB_if_else196_332:
		next_state = LEGUP_F_main_BB_if_end203_333;
LEGUP_F_main_BB_if_else222_341:
	if ((fsm_stall == 1'd0) && (main_if_else222_cmp223 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then224_342;
	else if ((fsm_stall == 1'd0) && (main_if_else222_cmp223 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_else72_132:
	if ((fsm_stall == 1'd0) && (main_if_else72_cmp73 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then74_133;
	else if ((fsm_stall == 1'd0) && (main_if_else72_cmp73 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else85_167;
LEGUP_F_main_BB_if_else85_167:
		next_state = LEGUP_F_main_BB_if_else85_168;
LEGUP_F_main_BB_if_else85_168:
		next_state = LEGUP_F_main_BB_if_else85_169;
LEGUP_F_main_BB_if_else85_169:
		next_state = LEGUP_F_main_BB_if_else85_170;
LEGUP_F_main_BB_if_else85_170:
		next_state = LEGUP_F_main_BB_if_else85_171;
LEGUP_F_main_BB_if_else85_171:
		next_state = LEGUP_F_main_BB_if_else85_172;
LEGUP_F_main_BB_if_else85_172:
		next_state = LEGUP_F_main_BB_if_else85_173;
LEGUP_F_main_BB_if_else85_173:
		next_state = LEGUP_F_main_BB_if_else85_174;
LEGUP_F_main_BB_if_else85_174:
		next_state = LEGUP_F_main_BB_if_else85_175;
LEGUP_F_main_BB_if_else85_175:
		next_state = LEGUP_F_main_BB_if_else85_176;
LEGUP_F_main_BB_if_else85_176:
		next_state = LEGUP_F_main_BB_if_else85_177;
LEGUP_F_main_BB_if_else85_177:
		next_state = LEGUP_F_main_BB_if_else85_178;
LEGUP_F_main_BB_if_else85_178:
		next_state = LEGUP_F_main_BB_if_else85_179;
LEGUP_F_main_BB_if_else85_179:
		next_state = LEGUP_F_main_BB_if_else85_180;
LEGUP_F_main_BB_if_else85_180:
		next_state = LEGUP_F_main_BB_if_else85_181;
LEGUP_F_main_BB_if_else85_181:
		next_state = LEGUP_F_main_BB_if_else85_182;
LEGUP_F_main_BB_if_else85_182:
		next_state = LEGUP_F_main_BB_if_else85_183;
LEGUP_F_main_BB_if_else85_183:
		next_state = LEGUP_F_main_BB_if_else85_184;
LEGUP_F_main_BB_if_else85_184:
		next_state = LEGUP_F_main_BB_if_else85_185;
LEGUP_F_main_BB_if_else85_185:
		next_state = LEGUP_F_main_BB_if_else85_186;
LEGUP_F_main_BB_if_else85_186:
		next_state = LEGUP_F_main_BB_if_else85_187;
LEGUP_F_main_BB_if_else85_187:
		next_state = LEGUP_F_main_BB_if_else85_188;
LEGUP_F_main_BB_if_else85_188:
		next_state = LEGUP_F_main_BB_if_else85_189;
LEGUP_F_main_BB_if_else85_189:
		next_state = LEGUP_F_main_BB_if_else85_190;
LEGUP_F_main_BB_if_else85_190:
		next_state = LEGUP_F_main_BB_if_else85_191;
LEGUP_F_main_BB_if_else85_191:
		next_state = LEGUP_F_main_BB_if_else85_192;
LEGUP_F_main_BB_if_else85_192:
		next_state = LEGUP_F_main_BB_if_else85_193;
LEGUP_F_main_BB_if_else85_193:
		next_state = LEGUP_F_main_BB_if_else85_194;
LEGUP_F_main_BB_if_else85_194:
		next_state = LEGUP_F_main_BB_if_else85_195;
LEGUP_F_main_BB_if_else85_195:
		next_state = LEGUP_F_main_BB_if_else85_196;
LEGUP_F_main_BB_if_else85_196:
		next_state = LEGUP_F_main_BB_if_else85_197;
LEGUP_F_main_BB_if_else85_197:
		next_state = LEGUP_F_main_BB_if_else85_198;
LEGUP_F_main_BB_if_else85_198:
		next_state = LEGUP_F_main_BB_if_else85_199;
LEGUP_F_main_BB_if_else85_199:
	if ((fsm_stall == 1'd0) && (main_if_else85_cmp86_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then87_200;
	else if ((fsm_stall == 1'd0) && (main_if_else85_cmp86_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else98_233;
LEGUP_F_main_BB_if_else98_233:
		next_state = LEGUP_F_main_BB_if_else98_234;
LEGUP_F_main_BB_if_else98_234:
		next_state = LEGUP_F_main_BB_if_else98_235;
LEGUP_F_main_BB_if_else98_235:
		next_state = LEGUP_F_main_BB_if_else98_236;
LEGUP_F_main_BB_if_else98_236:
		next_state = LEGUP_F_main_BB_if_else98_237;
LEGUP_F_main_BB_if_else98_237:
		next_state = LEGUP_F_main_BB_if_else98_238;
LEGUP_F_main_BB_if_else98_238:
		next_state = LEGUP_F_main_BB_if_else98_239;
LEGUP_F_main_BB_if_else98_239:
		next_state = LEGUP_F_main_BB_if_else98_240;
LEGUP_F_main_BB_if_else98_240:
		next_state = LEGUP_F_main_BB_if_else98_241;
LEGUP_F_main_BB_if_else98_241:
		next_state = LEGUP_F_main_BB_if_else98_242;
LEGUP_F_main_BB_if_else98_242:
		next_state = LEGUP_F_main_BB_if_else98_243;
LEGUP_F_main_BB_if_else98_243:
		next_state = LEGUP_F_main_BB_if_else98_244;
LEGUP_F_main_BB_if_else98_244:
		next_state = LEGUP_F_main_BB_if_else98_245;
LEGUP_F_main_BB_if_else98_245:
		next_state = LEGUP_F_main_BB_if_else98_246;
LEGUP_F_main_BB_if_else98_246:
		next_state = LEGUP_F_main_BB_if_else98_247;
LEGUP_F_main_BB_if_else98_247:
		next_state = LEGUP_F_main_BB_if_else98_248;
LEGUP_F_main_BB_if_else98_248:
		next_state = LEGUP_F_main_BB_if_else98_249;
LEGUP_F_main_BB_if_else98_249:
		next_state = LEGUP_F_main_BB_if_else98_250;
LEGUP_F_main_BB_if_else98_250:
		next_state = LEGUP_F_main_BB_if_else98_251;
LEGUP_F_main_BB_if_else98_251:
		next_state = LEGUP_F_main_BB_if_else98_252;
LEGUP_F_main_BB_if_else98_252:
		next_state = LEGUP_F_main_BB_if_else98_253;
LEGUP_F_main_BB_if_else98_253:
		next_state = LEGUP_F_main_BB_if_else98_254;
LEGUP_F_main_BB_if_else98_254:
		next_state = LEGUP_F_main_BB_if_else98_255;
LEGUP_F_main_BB_if_else98_255:
		next_state = LEGUP_F_main_BB_if_else98_256;
LEGUP_F_main_BB_if_else98_256:
		next_state = LEGUP_F_main_BB_if_else98_257;
LEGUP_F_main_BB_if_else98_257:
		next_state = LEGUP_F_main_BB_if_else98_258;
LEGUP_F_main_BB_if_else98_258:
		next_state = LEGUP_F_main_BB_if_else98_259;
LEGUP_F_main_BB_if_else98_259:
		next_state = LEGUP_F_main_BB_if_else98_260;
LEGUP_F_main_BB_if_else98_260:
		next_state = LEGUP_F_main_BB_if_else98_261;
LEGUP_F_main_BB_if_else98_261:
		next_state = LEGUP_F_main_BB_if_else98_262;
LEGUP_F_main_BB_if_else98_262:
		next_state = LEGUP_F_main_BB_if_else98_263;
LEGUP_F_main_BB_if_else98_263:
		next_state = LEGUP_F_main_BB_if_else98_264;
LEGUP_F_main_BB_if_else98_264:
		next_state = LEGUP_F_main_BB_if_else98_265;
LEGUP_F_main_BB_if_else98_265:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_if_end141_282:
		next_state = LEGUP_F_main_BB_if_end141_283;
LEGUP_F_main_BB_if_end141_283:
		next_state = LEGUP_F_main_BB_if_end141_284;
LEGUP_F_main_BB_if_end141_284:
		next_state = LEGUP_F_main_BB_if_end141_285;
LEGUP_F_main_BB_if_end141_285:
	if ((fsm_stall == 1'd0) && (main_if_end141_or_cond472 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then153_286;
	else if ((fsm_stall == 1'd0) && (main_if_end141_or_cond472 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else158_288;
LEGUP_F_main_BB_if_end163_290:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end172_293:
		next_state = LEGUP_F_main_BB_if_end172_294;
LEGUP_F_main_BB_if_end172_294:
		next_state = LEGUP_F_main_BB_if_end172_295;
LEGUP_F_main_BB_if_end172_295:
		next_state = LEGUP_F_main_BB_if_end172_296;
LEGUP_F_main_BB_if_end172_296:
		next_state = LEGUP_F_main_BB_if_end172_297;
LEGUP_F_main_BB_if_end172_297:
		next_state = LEGUP_F_main_BB_if_end172_298;
LEGUP_F_main_BB_if_end172_298:
		next_state = LEGUP_F_main_BB_if_end172_299;
LEGUP_F_main_BB_if_end172_299:
		next_state = LEGUP_F_main_BB_if_end172_300;
LEGUP_F_main_BB_if_end172_300:
		next_state = LEGUP_F_main_BB_if_end172_301;
LEGUP_F_main_BB_if_end172_301:
		next_state = LEGUP_F_main_BB_if_end172_302;
LEGUP_F_main_BB_if_end172_302:
		next_state = LEGUP_F_main_BB_if_end172_303;
LEGUP_F_main_BB_if_end172_303:
		next_state = LEGUP_F_main_BB_if_end172_304;
LEGUP_F_main_BB_if_end172_304:
		next_state = LEGUP_F_main_BB_if_end172_305;
LEGUP_F_main_BB_if_end172_305:
		next_state = LEGUP_F_main_BB_if_end172_306;
LEGUP_F_main_BB_if_end172_306:
		next_state = LEGUP_F_main_BB_if_end172_307;
LEGUP_F_main_BB_if_end172_307:
		next_state = LEGUP_F_main_BB_if_end172_308;
LEGUP_F_main_BB_if_end172_308:
		next_state = LEGUP_F_main_BB_if_end172_309;
LEGUP_F_main_BB_if_end172_309:
		next_state = LEGUP_F_main_BB_if_end172_310;
LEGUP_F_main_BB_if_end172_310:
		next_state = LEGUP_F_main_BB_if_end172_311;
LEGUP_F_main_BB_if_end172_311:
		next_state = LEGUP_F_main_BB_if_end172_312;
LEGUP_F_main_BB_if_end172_312:
		next_state = LEGUP_F_main_BB_if_end172_313;
LEGUP_F_main_BB_if_end172_313:
		next_state = LEGUP_F_main_BB_if_end172_314;
LEGUP_F_main_BB_if_end172_314:
		next_state = LEGUP_F_main_BB_if_end172_315;
LEGUP_F_main_BB_if_end172_315:
		next_state = LEGUP_F_main_BB_if_end172_316;
LEGUP_F_main_BB_if_end172_316:
		next_state = LEGUP_F_main_BB_if_end172_317;
LEGUP_F_main_BB_if_end172_317:
		next_state = LEGUP_F_main_BB_if_end172_318;
LEGUP_F_main_BB_if_end172_318:
		next_state = LEGUP_F_main_BB_if_end172_319;
LEGUP_F_main_BB_if_end172_319:
		next_state = LEGUP_F_main_BB_if_end172_320;
LEGUP_F_main_BB_if_end172_320:
		next_state = LEGUP_F_main_BB_if_end172_321;
LEGUP_F_main_BB_if_end172_321:
		next_state = LEGUP_F_main_BB_if_end172_322;
LEGUP_F_main_BB_if_end172_322:
		next_state = LEGUP_F_main_BB_if_end172_323;
LEGUP_F_main_BB_if_end172_323:
		next_state = LEGUP_F_main_BB_if_end172_324;
LEGUP_F_main_BB_if_end172_324:
		next_state = LEGUP_F_main_BB_if_end172_325;
LEGUP_F_main_BB_if_end172_325:
	if ((fsm_stall == 1'd0) && (main_if_end172_Pivot26 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock19_328;
	else if ((fsm_stall == 1'd0) && (main_if_end172_Pivot26 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock23_326;
LEGUP_F_main_BB_if_end203_333:
		next_state = LEGUP_F_main_BB_if_end203_334;
LEGUP_F_main_BB_if_end203_334:
		next_state = LEGUP_F_main_BB_if_end203_335;
LEGUP_F_main_BB_if_end203_335:
		next_state = LEGUP_F_main_BB_if_end203_336;
LEGUP_F_main_BB_if_end203_336:
		next_state = LEGUP_F_main_BB_if_end203_337;
LEGUP_F_main_BB_if_end203_337:
		next_state = LEGUP_F_main_BB_if_end203_338;
LEGUP_F_main_BB_if_end203_338:
	if ((fsm_stall == 1'd0) && (main_if_end203_or_cond475 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then216_339;
	else if ((fsm_stall == 1'd0) && (main_if_end203_or_cond475 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else222_341;
LEGUP_F_main_BB_if_end236_344:
		next_state = LEGUP_F_main_BB_if_end236_345;
LEGUP_F_main_BB_if_end236_345:
		next_state = LEGUP_F_main_BB_if_end236_346;
LEGUP_F_main_BB_if_end236_346:
		next_state = LEGUP_F_main_BB_if_end236_347;
LEGUP_F_main_BB_if_end236_347:
		next_state = LEGUP_F_main_BB_if_end236_348;
LEGUP_F_main_BB_if_end236_348:
		next_state = LEGUP_F_main_BB_if_end236_349;
LEGUP_F_main_BB_if_end236_349:
		next_state = LEGUP_F_main_BB_if_end236_350;
LEGUP_F_main_BB_if_end236_350:
		next_state = LEGUP_F_main_BB_if_end236_351;
LEGUP_F_main_BB_if_end236_351:
		next_state = LEGUP_F_main_BB_if_end236_352;
LEGUP_F_main_BB_if_end236_352:
		next_state = LEGUP_F_main_BB_if_end236_353;
LEGUP_F_main_BB_if_end236_353:
		next_state = LEGUP_F_main_BB_if_end236_354;
LEGUP_F_main_BB_if_end236_354:
		next_state = LEGUP_F_main_BB_if_end236_355;
LEGUP_F_main_BB_if_end236_355:
		next_state = LEGUP_F_main_BB_if_end236_356;
LEGUP_F_main_BB_if_end236_356:
		next_state = LEGUP_F_main_BB_if_end236_357;
LEGUP_F_main_BB_if_end236_357:
		next_state = LEGUP_F_main_BB_if_end236_358;
LEGUP_F_main_BB_if_end236_358:
		next_state = LEGUP_F_main_BB_if_end236_359;
LEGUP_F_main_BB_if_end236_359:
		next_state = LEGUP_F_main_BB_if_end236_360;
LEGUP_F_main_BB_if_end236_360:
		next_state = LEGUP_F_main_BB_if_end236_361;
LEGUP_F_main_BB_if_end236_361:
		next_state = LEGUP_F_main_BB_if_end236_362;
LEGUP_F_main_BB_if_end236_362:
		next_state = LEGUP_F_main_BB_if_end236_363;
LEGUP_F_main_BB_if_end236_363:
		next_state = LEGUP_F_main_BB_if_end236_364;
LEGUP_F_main_BB_if_end236_364:
		next_state = LEGUP_F_main_BB_if_end236_365;
LEGUP_F_main_BB_if_end236_365:
		next_state = LEGUP_F_main_BB_if_end236_366;
LEGUP_F_main_BB_if_end236_366:
		next_state = LEGUP_F_main_BB_if_end236_367;
LEGUP_F_main_BB_if_end236_367:
		next_state = LEGUP_F_main_BB_if_end236_368;
LEGUP_F_main_BB_if_end236_368:
		next_state = LEGUP_F_main_BB_if_end236_369;
LEGUP_F_main_BB_if_end236_369:
		next_state = LEGUP_F_main_BB_if_end236_370;
LEGUP_F_main_BB_if_end236_370:
		next_state = LEGUP_F_main_BB_if_end236_371;
LEGUP_F_main_BB_if_end236_371:
		next_state = LEGUP_F_main_BB_if_end236_372;
LEGUP_F_main_BB_if_end236_372:
		next_state = LEGUP_F_main_BB_if_end236_373;
LEGUP_F_main_BB_if_end236_373:
		next_state = LEGUP_F_main_BB_if_end236_374;
LEGUP_F_main_BB_if_end236_374:
		next_state = LEGUP_F_main_BB_if_end236_375;
LEGUP_F_main_BB_if_end236_375:
		next_state = LEGUP_F_main_BB_if_end236_376;
LEGUP_F_main_BB_if_end236_376:
		next_state = LEGUP_F_main_BB_if_end236_377;
LEGUP_F_main_BB_if_end236_377:
		next_state = LEGUP_F_main_BB_if_end236_378;
LEGUP_F_main_BB_if_end236_378:
		next_state = LEGUP_F_main_BB_if_end236_379;
LEGUP_F_main_BB_if_end236_379:
		next_state = LEGUP_F_main_BB_if_end236_380;
LEGUP_F_main_BB_if_end236_380:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end54_64:
		next_state = LEGUP_F_main_BB_if_end54_65;
LEGUP_F_main_BB_if_end54_65:
		next_state = LEGUP_F_main_BB_if_end54_66;
LEGUP_F_main_BB_if_end54_66:
		next_state = LEGUP_F_main_BB_if_end54_67;
LEGUP_F_main_BB_if_end54_67:
		next_state = LEGUP_F_main_BB_if_end54_68;
LEGUP_F_main_BB_if_end54_68:
		next_state = LEGUP_F_main_BB_if_end54_69;
LEGUP_F_main_BB_if_end54_69:
		next_state = LEGUP_F_main_BB_if_end54_70;
LEGUP_F_main_BB_if_end54_70:
		next_state = LEGUP_F_main_BB_if_end54_71;
LEGUP_F_main_BB_if_end54_71:
		next_state = LEGUP_F_main_BB_if_end54_72;
LEGUP_F_main_BB_if_end54_72:
		next_state = LEGUP_F_main_BB_if_end54_73;
LEGUP_F_main_BB_if_end54_73:
		next_state = LEGUP_F_main_BB_if_end54_74;
LEGUP_F_main_BB_if_end54_74:
		next_state = LEGUP_F_main_BB_if_end54_75;
LEGUP_F_main_BB_if_end54_75:
		next_state = LEGUP_F_main_BB_if_end54_76;
LEGUP_F_main_BB_if_end54_76:
		next_state = LEGUP_F_main_BB_if_end54_77;
LEGUP_F_main_BB_if_end54_77:
		next_state = LEGUP_F_main_BB_if_end54_78;
LEGUP_F_main_BB_if_end54_78:
		next_state = LEGUP_F_main_BB_if_end54_79;
LEGUP_F_main_BB_if_end54_79:
		next_state = LEGUP_F_main_BB_if_end54_80;
LEGUP_F_main_BB_if_end54_80:
		next_state = LEGUP_F_main_BB_if_end54_81;
LEGUP_F_main_BB_if_end54_81:
		next_state = LEGUP_F_main_BB_if_end54_82;
LEGUP_F_main_BB_if_end54_82:
		next_state = LEGUP_F_main_BB_if_end54_83;
LEGUP_F_main_BB_if_end54_83:
		next_state = LEGUP_F_main_BB_if_end54_84;
LEGUP_F_main_BB_if_end54_84:
		next_state = LEGUP_F_main_BB_if_end54_85;
LEGUP_F_main_BB_if_end54_85:
		next_state = LEGUP_F_main_BB_if_end54_86;
LEGUP_F_main_BB_if_end54_86:
		next_state = LEGUP_F_main_BB_if_end54_87;
LEGUP_F_main_BB_if_end54_87:
		next_state = LEGUP_F_main_BB_if_end54_88;
LEGUP_F_main_BB_if_end54_88:
		next_state = LEGUP_F_main_BB_if_end54_89;
LEGUP_F_main_BB_if_end54_89:
		next_state = LEGUP_F_main_BB_if_end54_90;
LEGUP_F_main_BB_if_end54_90:
		next_state = LEGUP_F_main_BB_if_end54_91;
LEGUP_F_main_BB_if_end54_91:
		next_state = LEGUP_F_main_BB_if_end54_92;
LEGUP_F_main_BB_if_end54_92:
		next_state = LEGUP_F_main_BB_if_end54_93;
LEGUP_F_main_BB_if_end54_93:
		next_state = LEGUP_F_main_BB_if_end54_94;
LEGUP_F_main_BB_if_end54_94:
		next_state = LEGUP_F_main_BB_if_end54_95;
LEGUP_F_main_BB_if_end54_95:
		next_state = LEGUP_F_main_BB_if_end54_96;
LEGUP_F_main_BB_if_end54_96:
	if ((fsm_stall == 1'd0) && (main_if_end54_cmp58_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then59_97;
	else if ((fsm_stall == 1'd0) && (main_if_end54_cmp58_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else112_266;
LEGUP_F_main_BB_if_end_60:
		next_state = LEGUP_F_main_BB_if_end_61;
LEGUP_F_main_BB_if_end_61:
		next_state = LEGUP_F_main_BB_if_end_62;
LEGUP_F_main_BB_if_end_62:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then114_267:
		next_state = LEGUP_F_main_BB_if_then114_268;
LEGUP_F_main_BB_if_then114_268:
		next_state = LEGUP_F_main_BB_if_then114_269;
LEGUP_F_main_BB_if_then114_269:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_if_then121_273:
		next_state = LEGUP_F_main_BB_if_then121_274;
LEGUP_F_main_BB_if_then121_274:
		next_state = LEGUP_F_main_BB_if_then121_275;
LEGUP_F_main_BB_if_then121_275:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_if_then128_276:
		next_state = LEGUP_F_main_BB_if_then128_277;
LEGUP_F_main_BB_if_then128_277:
		next_state = LEGUP_F_main_BB_if_then128_278;
LEGUP_F_main_BB_if_then128_278:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_if_then153_286:
		next_state = LEGUP_F_main_BB_if_then153_287;
LEGUP_F_main_BB_if_then153_287:
		next_state = LEGUP_F_main_BB_if_end163_290;
LEGUP_F_main_BB_if_then160_289:
		next_state = LEGUP_F_main_BB_cleanup_387;
LEGUP_F_main_BB_if_then170_292:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then177_329:
		next_state = LEGUP_F_main_BB_if_end203_333;
LEGUP_F_main_BB_if_then184_330:
		next_state = LEGUP_F_main_BB_if_end203_333;
LEGUP_F_main_BB_if_then191_331:
		next_state = LEGUP_F_main_BB_if_end203_333;
LEGUP_F_main_BB_if_then216_339:
		next_state = LEGUP_F_main_BB_if_then216_340;
LEGUP_F_main_BB_if_then216_340:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then224_342:
		next_state = LEGUP_F_main_BB_cleanup_387;
LEGUP_F_main_BB_if_then59_97:
	if ((fsm_stall == 1'd0) && (main_if_end54_cmp60_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then61_98;
	else if ((fsm_stall == 1'd0) && (main_if_end54_cmp60_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else72_132;
LEGUP_F_main_BB_if_then61_100:
		next_state = LEGUP_F_main_BB_if_then61_101;
LEGUP_F_main_BB_if_then61_101:
		next_state = LEGUP_F_main_BB_if_then61_102;
LEGUP_F_main_BB_if_then61_102:
		next_state = LEGUP_F_main_BB_if_then61_103;
LEGUP_F_main_BB_if_then61_103:
		next_state = LEGUP_F_main_BB_if_then61_104;
LEGUP_F_main_BB_if_then61_104:
		next_state = LEGUP_F_main_BB_if_then61_105;
LEGUP_F_main_BB_if_then61_105:
		next_state = LEGUP_F_main_BB_if_then61_106;
LEGUP_F_main_BB_if_then61_106:
		next_state = LEGUP_F_main_BB_if_then61_107;
LEGUP_F_main_BB_if_then61_107:
		next_state = LEGUP_F_main_BB_if_then61_108;
LEGUP_F_main_BB_if_then61_108:
		next_state = LEGUP_F_main_BB_if_then61_109;
LEGUP_F_main_BB_if_then61_109:
		next_state = LEGUP_F_main_BB_if_then61_110;
LEGUP_F_main_BB_if_then61_110:
		next_state = LEGUP_F_main_BB_if_then61_111;
LEGUP_F_main_BB_if_then61_111:
		next_state = LEGUP_F_main_BB_if_then61_112;
LEGUP_F_main_BB_if_then61_112:
		next_state = LEGUP_F_main_BB_if_then61_113;
LEGUP_F_main_BB_if_then61_113:
		next_state = LEGUP_F_main_BB_if_then61_114;
LEGUP_F_main_BB_if_then61_114:
		next_state = LEGUP_F_main_BB_if_then61_115;
LEGUP_F_main_BB_if_then61_115:
		next_state = LEGUP_F_main_BB_if_then61_116;
LEGUP_F_main_BB_if_then61_116:
		next_state = LEGUP_F_main_BB_if_then61_117;
LEGUP_F_main_BB_if_then61_117:
		next_state = LEGUP_F_main_BB_if_then61_118;
LEGUP_F_main_BB_if_then61_118:
		next_state = LEGUP_F_main_BB_if_then61_119;
LEGUP_F_main_BB_if_then61_119:
		next_state = LEGUP_F_main_BB_if_then61_120;
LEGUP_F_main_BB_if_then61_120:
		next_state = LEGUP_F_main_BB_if_then61_121;
LEGUP_F_main_BB_if_then61_121:
		next_state = LEGUP_F_main_BB_if_then61_122;
LEGUP_F_main_BB_if_then61_122:
		next_state = LEGUP_F_main_BB_if_then61_123;
LEGUP_F_main_BB_if_then61_123:
		next_state = LEGUP_F_main_BB_if_then61_124;
LEGUP_F_main_BB_if_then61_124:
		next_state = LEGUP_F_main_BB_if_then61_125;
LEGUP_F_main_BB_if_then61_125:
		next_state = LEGUP_F_main_BB_if_then61_126;
LEGUP_F_main_BB_if_then61_126:
		next_state = LEGUP_F_main_BB_if_then61_127;
LEGUP_F_main_BB_if_then61_127:
		next_state = LEGUP_F_main_BB_if_then61_128;
LEGUP_F_main_BB_if_then61_128:
		next_state = LEGUP_F_main_BB_if_then61_129;
LEGUP_F_main_BB_if_then61_129:
		next_state = LEGUP_F_main_BB_if_then61_130;
LEGUP_F_main_BB_if_then61_130:
		next_state = LEGUP_F_main_BB_if_then61_131;
LEGUP_F_main_BB_if_then61_131:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_if_then61_98:
		next_state = LEGUP_F_main_BB_if_then61_99;
LEGUP_F_main_BB_if_then61_99:
		next_state = LEGUP_F_main_BB_if_then61_100;
LEGUP_F_main_BB_if_then74_133:
		next_state = LEGUP_F_main_BB_if_then74_134;
LEGUP_F_main_BB_if_then74_134:
		next_state = LEGUP_F_main_BB_if_then74_135;
LEGUP_F_main_BB_if_then74_135:
		next_state = LEGUP_F_main_BB_if_then74_136;
LEGUP_F_main_BB_if_then74_136:
		next_state = LEGUP_F_main_BB_if_then74_137;
LEGUP_F_main_BB_if_then74_137:
		next_state = LEGUP_F_main_BB_if_then74_138;
LEGUP_F_main_BB_if_then74_138:
		next_state = LEGUP_F_main_BB_if_then74_139;
LEGUP_F_main_BB_if_then74_139:
		next_state = LEGUP_F_main_BB_if_then74_140;
LEGUP_F_main_BB_if_then74_140:
		next_state = LEGUP_F_main_BB_if_then74_141;
LEGUP_F_main_BB_if_then74_141:
		next_state = LEGUP_F_main_BB_if_then74_142;
LEGUP_F_main_BB_if_then74_142:
		next_state = LEGUP_F_main_BB_if_then74_143;
LEGUP_F_main_BB_if_then74_143:
		next_state = LEGUP_F_main_BB_if_then74_144;
LEGUP_F_main_BB_if_then74_144:
		next_state = LEGUP_F_main_BB_if_then74_145;
LEGUP_F_main_BB_if_then74_145:
		next_state = LEGUP_F_main_BB_if_then74_146;
LEGUP_F_main_BB_if_then74_146:
		next_state = LEGUP_F_main_BB_if_then74_147;
LEGUP_F_main_BB_if_then74_147:
		next_state = LEGUP_F_main_BB_if_then74_148;
LEGUP_F_main_BB_if_then74_148:
		next_state = LEGUP_F_main_BB_if_then74_149;
LEGUP_F_main_BB_if_then74_149:
		next_state = LEGUP_F_main_BB_if_then74_150;
LEGUP_F_main_BB_if_then74_150:
		next_state = LEGUP_F_main_BB_if_then74_151;
LEGUP_F_main_BB_if_then74_151:
		next_state = LEGUP_F_main_BB_if_then74_152;
LEGUP_F_main_BB_if_then74_152:
		next_state = LEGUP_F_main_BB_if_then74_153;
LEGUP_F_main_BB_if_then74_153:
		next_state = LEGUP_F_main_BB_if_then74_154;
LEGUP_F_main_BB_if_then74_154:
		next_state = LEGUP_F_main_BB_if_then74_155;
LEGUP_F_main_BB_if_then74_155:
		next_state = LEGUP_F_main_BB_if_then74_156;
LEGUP_F_main_BB_if_then74_156:
		next_state = LEGUP_F_main_BB_if_then74_157;
LEGUP_F_main_BB_if_then74_157:
		next_state = LEGUP_F_main_BB_if_then74_158;
LEGUP_F_main_BB_if_then74_158:
		next_state = LEGUP_F_main_BB_if_then74_159;
LEGUP_F_main_BB_if_then74_159:
		next_state = LEGUP_F_main_BB_if_then74_160;
LEGUP_F_main_BB_if_then74_160:
		next_state = LEGUP_F_main_BB_if_then74_161;
LEGUP_F_main_BB_if_then74_161:
		next_state = LEGUP_F_main_BB_if_then74_162;
LEGUP_F_main_BB_if_then74_162:
		next_state = LEGUP_F_main_BB_if_then74_163;
LEGUP_F_main_BB_if_then74_163:
		next_state = LEGUP_F_main_BB_if_then74_164;
LEGUP_F_main_BB_if_then74_164:
		next_state = LEGUP_F_main_BB_if_then74_165;
LEGUP_F_main_BB_if_then74_165:
		next_state = LEGUP_F_main_BB_if_then74_166;
LEGUP_F_main_BB_if_then74_166:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_if_then87_200:
		next_state = LEGUP_F_main_BB_if_then87_201;
LEGUP_F_main_BB_if_then87_201:
		next_state = LEGUP_F_main_BB_if_then87_202;
LEGUP_F_main_BB_if_then87_202:
		next_state = LEGUP_F_main_BB_if_then87_203;
LEGUP_F_main_BB_if_then87_203:
		next_state = LEGUP_F_main_BB_if_then87_204;
LEGUP_F_main_BB_if_then87_204:
		next_state = LEGUP_F_main_BB_if_then87_205;
LEGUP_F_main_BB_if_then87_205:
		next_state = LEGUP_F_main_BB_if_then87_206;
LEGUP_F_main_BB_if_then87_206:
		next_state = LEGUP_F_main_BB_if_then87_207;
LEGUP_F_main_BB_if_then87_207:
		next_state = LEGUP_F_main_BB_if_then87_208;
LEGUP_F_main_BB_if_then87_208:
		next_state = LEGUP_F_main_BB_if_then87_209;
LEGUP_F_main_BB_if_then87_209:
		next_state = LEGUP_F_main_BB_if_then87_210;
LEGUP_F_main_BB_if_then87_210:
		next_state = LEGUP_F_main_BB_if_then87_211;
LEGUP_F_main_BB_if_then87_211:
		next_state = LEGUP_F_main_BB_if_then87_212;
LEGUP_F_main_BB_if_then87_212:
		next_state = LEGUP_F_main_BB_if_then87_213;
LEGUP_F_main_BB_if_then87_213:
		next_state = LEGUP_F_main_BB_if_then87_214;
LEGUP_F_main_BB_if_then87_214:
		next_state = LEGUP_F_main_BB_if_then87_215;
LEGUP_F_main_BB_if_then87_215:
		next_state = LEGUP_F_main_BB_if_then87_216;
LEGUP_F_main_BB_if_then87_216:
		next_state = LEGUP_F_main_BB_if_then87_217;
LEGUP_F_main_BB_if_then87_217:
		next_state = LEGUP_F_main_BB_if_then87_218;
LEGUP_F_main_BB_if_then87_218:
		next_state = LEGUP_F_main_BB_if_then87_219;
LEGUP_F_main_BB_if_then87_219:
		next_state = LEGUP_F_main_BB_if_then87_220;
LEGUP_F_main_BB_if_then87_220:
		next_state = LEGUP_F_main_BB_if_then87_221;
LEGUP_F_main_BB_if_then87_221:
		next_state = LEGUP_F_main_BB_if_then87_222;
LEGUP_F_main_BB_if_then87_222:
		next_state = LEGUP_F_main_BB_if_then87_223;
LEGUP_F_main_BB_if_then87_223:
		next_state = LEGUP_F_main_BB_if_then87_224;
LEGUP_F_main_BB_if_then87_224:
		next_state = LEGUP_F_main_BB_if_then87_225;
LEGUP_F_main_BB_if_then87_225:
		next_state = LEGUP_F_main_BB_if_then87_226;
LEGUP_F_main_BB_if_then87_226:
		next_state = LEGUP_F_main_BB_if_then87_227;
LEGUP_F_main_BB_if_then87_227:
		next_state = LEGUP_F_main_BB_if_then87_228;
LEGUP_F_main_BB_if_then87_228:
		next_state = LEGUP_F_main_BB_if_then87_229;
LEGUP_F_main_BB_if_then87_229:
		next_state = LEGUP_F_main_BB_if_then87_230;
LEGUP_F_main_BB_if_then87_230:
		next_state = LEGUP_F_main_BB_if_then87_231;
LEGUP_F_main_BB_if_then87_231:
		next_state = LEGUP_F_main_BB_if_then87_232;
LEGUP_F_main_BB_if_then87_232:
		next_state = LEGUP_F_main_BB_if_end141_282;
LEGUP_F_main_BB_sw_bb168_291:
	if ((fsm_stall == 1'd0) && (main_sw_bb168_cmp169 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end172_293;
	else if ((fsm_stall == 1'd0) && (main_sw_bb168_cmp169 == 1'd0))
		next_state = LEGUP_F_main_BB_if_then170_292;
LEGUP_F_main_BB_sw_bb233_343:
	if ((fsm_stall == 1'd0) && (main_sw_bb233_cmp234 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb233_cmp234 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end236_344;
LEGUP_F_main_BB_sw_bb40_59:
	if ((fsm_stall == 1'd0) && (main_sw_bb40_cmp41 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb40_cmp41 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end_60;
LEGUP_F_main_BB_sw_bb51_63:
	if ((fsm_stall == 1'd0) && (main_sw_bb51_cmp52 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end54_64;
	else if ((fsm_stall == 1'd0) && (main_sw_bb51_cmp52 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
default:
	next_state = cur_state;
endcase

end
assign fsm_stall = 1'd0;
assign main_entry_vla466_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla466_sub_reg <= main_entry_vla466_sub;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_state_0 = main_NodeBlock9_backedge_state_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_i_0 = main_NodeBlock9_backedge_i_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_j_0 = main_NodeBlock9_backedge_j_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_a_0 = main_NodeBlock9_backedge_a_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_b_0 = main_NodeBlock9_backedge_b_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_X_0 = main_NodeBlock9_backedge_pos_a_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_Y_0 = main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_X_0 = main_NodeBlock9_backedge_pos_b_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_Y_0 = main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_mesh_0 = main_NodeBlock9_backedge_sum_mesh_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_1hop_0 = main_NodeBlock9_backedge_sum_1hop_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0 = 32'd1993114092;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_seed_0 = main_NodeBlock9_backedge_seed_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
end
always @(*) begin
		main_NodeBlock9_Pivot10 = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock9_Pivot10_op1_temp}));
end
always @(*) begin
		main_NodeBlock7_Pivot8 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock7_Pivot8_op1_temp}));
end
always @(*) begin
		main_NodeBlock5_Pivot6 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock5_Pivot6_op1_temp}));
end
always @(*) begin
		main_LeafBlock3_SwitchLeaf4 = (main_NodeBlock9_state_0_reg == 32'd5);
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end_1_reg};
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end163_473};
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd5;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then170_inc171;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then216_inc221_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd1568;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_i_0_be = main_if_end236_inc262_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_end163_inc142_1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_else222_inc204;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_for_end28_6_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_if_end_7_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_a_0_be = main_if_end236_35_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_if_end_8_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_b_0_be = main_if_end236_36_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end_9;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end163_pos_a_X_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end_10;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end163_pos_a_Y_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end_11;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end203_xi_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = -32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end_12;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end203_xj_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_if_end236_newCurOp_add253_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_if_end236_newCurOp_add261;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_for_end28_add35_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end141_seed_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end172_add175_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end172_add175_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end28_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb40_59) & (fsm_stall == 1'd0)) & (main_sw_bb40_cmp41 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_62) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb51_63) & (fsm_stall == 1'd0)) & (main_sw_bb51_cmp52 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end163_290) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then170_292) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then216_340) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else222_341) & (fsm_stall == 1'd0)) & (main_if_else222_cmp223 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb233_343) & (fsm_stall == 1'd0)) & (main_sw_bb233_cmp234 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end236_380) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
end
always @(*) begin
		main_NodeBlock1_Pivot2 = ($signed(main_NodeBlock9_state_0_reg) < $signed({29'd0,main_NodeBlock1_Pivot2_op1_temp}));
end
always @(*) begin
		main_NodeBlock_Pivot = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock_Pivot_op1_temp}));
end
always @(*) begin
		main_LeafBlock_SwitchLeaf = (main_NodeBlock9_state_0_reg == 32'd0);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_body_preheader_11) & (fsm_stall == 1'd0))) begin
		main_for_body_0 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body_13) & (fsm_stall == 1'd0)) & (main_for_body_exitcond8_reg == 1'd0))) */ begin
		main_for_body_0 = main_for_body_1_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_body_preheader_11) & (fsm_stall == 1'd0))) begin
		main_for_body_0_reg <= main_for_body_0;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body_13) & (fsm_stall == 1'd0)) & (main_for_body_exitcond8_reg == 1'd0))) begin
		main_for_body_0_reg <= main_for_body_0;
	end
end
always @(*) begin
		main_for_body_arrayidx = (1'd0 + (4 * main_for_body_0_reg));
end
always @(*) begin
		main_for_body_add = (main_for_body_0_reg + 32'd612);
end
always @(*) begin
		main_for_body_arrayidx6 = (1'd0 + (4 * main_for_body_0_reg));
end
always @(*) begin
		main_for_body_1 = (main_for_body_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_for_body_1_reg <= main_for_body_1;
	end
end
always @(*) begin
		main_for_body_exitcond8 = (main_for_body_1 == 32'd1568);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_for_body_exitcond8_reg <= main_for_body_exitcond8;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond10_preheader_preheader_14) & (fsm_stall == 1'd0))) begin
		main_for_cond10_preheader_i_2485 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_inc18_19) & (fsm_stall == 1'd0)) & (main_for_inc18_exitcond == 1'd0))) */ begin
		main_for_cond10_preheader_i_2485 = main_for_inc18_4;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond10_preheader_preheader_14) & (fsm_stall == 1'd0))) begin
		main_for_cond10_preheader_i_2485_reg <= main_for_cond10_preheader_i_2485;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_inc18_19) & (fsm_stall == 1'd0)) & (main_for_inc18_exitcond == 1'd0))) begin
		main_for_cond10_preheader_i_2485_reg <= main_for_cond10_preheader_i_2485;
	end
end
always @(*) begin
		main_for_cond10_preheader_bit_select17 = main_for_cond10_preheader_i_2485_reg[26:0];
end
always @(*) begin
		main_for_cond10_preheader_sr_negate = (32'd0 - main_for_cond10_preheader_i_2485_reg);
end
always @(*) begin
		main_for_cond10_preheader_bit_select19 = main_for_cond10_preheader_sr_negate[29:0];
end
always @(*) begin
		main_for_cond10_preheader_bit_concat20 = {main_for_cond10_preheader_bit_select19[29:0], main_for_cond10_preheader_bit_concat20_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_cond10_preheader_bit_concat18 = {main_for_cond10_preheader_bit_select17[26:0], main_for_cond10_preheader_bit_concat18_bit_select_operand_2[4:0]};
end
always @(*) begin
		main_for_cond10_preheader_sr_add = (main_for_cond10_preheader_bit_concat20 + main_for_cond10_preheader_bit_concat18);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond10_preheader_15)) begin
		main_for_cond10_preheader_sr_add_reg <= main_for_cond10_preheader_sr_add;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond10_preheader_15) & (fsm_stall == 1'd0))) begin
		main_for_body12_j_1484 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body12_18) & (fsm_stall == 1'd0)) & (main_for_body12_exitcond9_reg == 1'd0))) */ begin
		main_for_body12_j_1484 = main_for_body12_3_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond10_preheader_15) & (fsm_stall == 1'd0))) begin
		main_for_body12_j_1484_reg <= main_for_body12_j_1484;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body12_18) & (fsm_stall == 1'd0)) & (main_for_body12_exitcond9_reg == 1'd0))) begin
		main_for_body12_j_1484_reg <= main_for_body12_j_1484;
	end
end
always @(*) begin
		main_for_body12_2 = (main_for_cond10_preheader_sr_add_reg + main_for_body12_j_1484_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body12_16)) begin
		main_for_body12_2_reg <= main_for_body12_2;
	end
end
always @(*) begin
		main_for_body12_arrayidx14 = (1'd0 + (4 * main_for_body12_2_reg));
end
always @(*) begin
		main_for_body12_3 = (main_for_body12_j_1484_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body12_16)) begin
		main_for_body12_3_reg <= main_for_body12_3;
	end
end
always @(*) begin
		main_for_body12_exitcond9 = (main_for_body12_3 == 32'd28);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body12_16)) begin
		main_for_body12_exitcond9_reg <= main_for_body12_exitcond9;
	end
end
always @(*) begin
		main_for_inc18_4 = (main_for_cond10_preheader_i_2485_reg + 32'd1);
end
always @(*) begin
		main_for_inc18_exitcond = (main_for_inc18_4 == 32'd28);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_body23_preheader_20) & (fsm_stall == 1'd0))) begin
		main_for_body23_i_3486 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body23_22) & (fsm_stall == 1'd0)) & (main_for_body23_exitcond10_reg == 1'd0))) */ begin
		main_for_body23_i_3486 = main_for_body23_5_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_body23_preheader_20) & (fsm_stall == 1'd0))) begin
		main_for_body23_i_3486_reg <= main_for_body23_i_3486;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body23_22) & (fsm_stall == 1'd0)) & (main_for_body23_exitcond10_reg == 1'd0))) begin
		main_for_body23_i_3486_reg <= main_for_body23_i_3486;
	end
end
always @(*) begin
		main_for_body23_arrayidx24 = (1'd0 + (4 * main_for_body23_i_3486_reg));
end
always @(*) begin
		main_for_body23_arrayidx25 = (1'd0 + (4 * main_for_body23_i_3486_reg));
end
always @(*) begin
		main_for_body23_5 = (main_for_body23_i_3486_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_for_body23_5_reg <= main_for_body23_5;
	end
end
always @(*) begin
		main_for_body23_exitcond10 = (main_for_body23_5 == 32'd784);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_for_body23_exitcond10_reg <= main_for_body23_exitcond10;
	end
end
always @(*) begin
		main_for_end28_6 = main_entry_vla466_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_24)) begin
		main_for_end28_6_reg <= main_for_end28_6;
	end
end
always @(*) begin
		main_for_end28_sub_i = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_for_end28_xor2_i = (main_for_end28_sub_i ^ 32'd1);
end
always @(*) begin
	main_for_end28_rem = main_signed_modulus_32_0;
end
always @(*) begin
		main_for_end28_bit_select13 = main_for_end28_rem_width_extended[26:0];
end
always @(*) begin
		main_for_end28_arrayidx30 = (1'd0 + (4 * main_for_end28_6));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_24)) begin
		main_for_end28_arrayidx30_reg <= main_for_end28_arrayidx30;
	end
end
always @(*) begin
		main_for_end28_xor2_i16 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_23)) begin
		main_for_end28_xor2_i16_reg <= main_for_end28_xor2_i16;
	end
end
always @(*) begin
	main_for_end28_rem33 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_56)) begin
		main_for_end28_rem33_reg <= main_for_end28_rem33;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else85_199)) begin
		main_for_end28_rem33_reg <= main_if_else85_rem89;
	end
end
always @(*) begin
		main_for_end28_arrayidx34 = (1'd0 + (4 * main_for_end28_6));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_24)) begin
		main_for_end28_arrayidx34_reg <= main_for_end28_arrayidx34;
	end
end
always @(*) begin
		main_for_end28_add35 = (main_NodeBlock9_seed_0_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_23)) begin
		main_for_end28_add35_reg <= main_for_end28_add35;
	end
end
always @(*) begin
		main_for_end28_sr_negate7 = (32'd0 - $signed({{1{main_for_end28_rem[5]}},main_for_end28_rem}));
end
always @(*) begin
		main_for_end28_bit_select15 = main_for_end28_sr_negate7_width_extended[29:0];
end
always @(*) begin
		main_for_end28_bit_concat16 = {main_for_end28_bit_select15[29:0], main_for_end28_bit_concat16_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_end28_bit_concat14 = {main_for_end28_bit_select13[26:0], main_for_end28_bit_concat14_bit_select_operand_2[4:0]};
end
always @(*) begin
		main_for_end28_sr_add10 = (main_for_end28_bit_concat16 + main_for_end28_bit_concat14);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_55)) begin
		main_for_end28_sr_add10_reg <= main_for_end28_sr_add10;
	end
end
always @(*) begin
		main_for_end28_arrayidx38_sum = (main_for_end28_sr_add10_reg + $signed({{26{main_for_end28_rem33[5]}},main_for_end28_rem33}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_56)) begin
		main_for_end28_arrayidx38_sum_reg <= main_for_end28_arrayidx38_sum;
	end
end
always @(*) begin
		main_for_end28_arrayidx39 = (1'd0 + (4 * main_for_end28_arrayidx38_sum_reg));
end
always @(*) begin
		main_sw_bb40_cmp41 = (main_NodeBlock9_i_0_reg == 32'd1568);
end
always @(*) begin
		main_if_end_arrayidx42 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_7 = main_entry_vla466_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_61)) begin
		main_if_end_7_reg <= main_if_end_7;
	end
end
always @(*) begin
		main_if_end_arrayidx43 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_8 = main_entry_vla1467_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_61)) begin
		main_if_end_8_reg <= main_if_end_8;
	end
end
always @(*) begin
		main_if_end_arrayidx44 = (1'd0 + (4 * main_if_end_7));
end
always @(*) begin
		main_if_end_9 = main_entry_vla2468_out_a;
end
always @(*) begin
		main_if_end_arrayidx45 = (1'd0 + (4 * main_if_end_7));
end
always @(*) begin
		main_if_end_10 = main_entry_vla3469_out_a;
end
always @(*) begin
		main_if_end_arrayidx46 = (1'd0 + (4 * main_if_end_8));
end
always @(*) begin
		main_if_end_11 = main_entry_vla2468_out_b;
end
always @(*) begin
		main_if_end_arrayidx47 = (1'd0 + (4 * main_if_end_8));
end
always @(*) begin
		main_if_end_12 = main_entry_vla3469_out_b;
end
always @(*) begin
		main_if_end_cmp48 = (main_NodeBlock9_i_0_reg == 32'd0);
end
always @(*) begin
		main_if_end_1 = (main_if_end_cmp48 ? 32'd3 : 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_60)) begin
		main_if_end_1_reg <= main_if_end_1;
	end
end
always @(*) begin
		main_sw_bb51_cmp52 = (main_NodeBlock9_pos_a_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end54_sub_i14 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end54_xor2_i15 = (main_if_end54_sub_i14 ^ 32'd1);
end
always @(*) begin
	main_if_end54_rem56 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end54_96)) begin
		main_if_end54_rem56_reg <= main_if_end54_rem56;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_55)) begin
		main_if_end54_rem56_reg <= main_for_end28_rem;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end172_325)) begin
		main_if_end54_rem56_reg <= main_if_end172_rem174;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then61_130)) begin
		main_if_end54_rem56_reg <= main_if_then61_rem63;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then61_131)) begin
		main_if_end54_rem56_reg <= main_if_then61_rem68;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_165)) begin
		main_if_end54_rem56_reg <= main_if_then74_rem76;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_166)) begin
		main_if_end54_rem56_reg <= main_if_then74_rem81;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then87_232)) begin
		main_if_end54_rem56_reg <= main_if_then87_rem94;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else98_265)) begin
		main_if_end54_rem56_reg <= main_if_else98_rem105;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_379)) begin
		main_if_end54_rem56_reg <= main_if_end236_rem254;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_380)) begin
		main_if_end54_rem56_reg <= main_if_end236_rem257;
	end
end
always @(*) begin
		main_if_end54_add57 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end54_64)) begin
		main_if_end54_add57_reg <= main_if_end54_add57;
	end
end
always @(*) begin
		main_if_end54_cmp58 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end54_64)) begin
		main_if_end54_cmp58_reg <= main_if_end54_cmp58;
	end
end
always @(*) begin
		main_if_end54_cmp60 = ($signed(main_if_end54_rem56) == 32'd0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end54_96)) begin
		main_if_end54_cmp60_reg <= main_if_end54_cmp60;
	end
end
always @(*) begin
		main_if_then61_xor2_i13 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then61_rem63 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then61_arrayidx64 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then61_13 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then61_100)) begin
		main_if_then61_13_reg <= main_if_then61_13;
	end
end
always @(*) begin
		main_if_then61_add65 = (main_if_then61_13_reg + $signed({{26{main_if_then61_rem63[5]}},main_if_then61_rem63}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then61_130)) begin
		main_if_then61_add65_reg <= main_if_then61_add65;
	end
end
always @(*) begin
		main_if_then61_xor2_i12 = (main_if_end54_add57_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		main_if_then61_xor2_i12_reg <= main_if_then61_xor2_i12;
	end
end
always @(*) begin
	main_if_then61_rem68 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then61_arrayidx69 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then61_14 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then61_100)) begin
		main_if_then61_14_reg <= main_if_then61_14;
	end
end
always @(*) begin
		main_if_then61_add70 = (main_if_then61_14_reg + $signed({{26{main_if_then61_rem68[5]}},main_if_then61_rem68}));
end
always @(*) begin
		main_if_then61_add71 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		main_if_then61_add71_reg <= main_if_then61_add71;
	end
end
always @(*) begin
		main_if_else72_cmp73 = ($signed(main_if_end54_rem56_reg) == 32'd1);
end
always @(*) begin
		main_if_then74_xor2_i10 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then74_rem76 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then74_arrayidx77 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then74_15 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then74_135)) begin
		main_if_then74_15_reg <= main_if_then74_15;
	end
end
always @(*) begin
		main_if_then74_add78 = (main_if_then74_15_reg + $signed({{26{main_if_then74_rem76[5]}},main_if_then74_rem76}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then74_165)) begin
		main_if_then74_add78_reg <= main_if_then74_add78;
	end
end
always @(*) begin
		main_if_then74_xor2_i9 = (main_if_end54_add57_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		main_if_then74_xor2_i9_reg <= main_if_then74_xor2_i9;
	end
end
always @(*) begin
	main_if_then74_rem81 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then74_arrayidx82 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then74_16 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then74_135)) begin
		main_if_then74_16_reg <= main_if_then74_16;
	end
end
always @(*) begin
		main_if_then74_add83 = (main_if_then74_16_reg + $signed({{26{main_if_then74_rem81[5]}},main_if_then74_rem81}));
end
always @(*) begin
		main_if_then74_add84 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		main_if_then74_add84_reg <= main_if_then74_add84;
	end
end
always @(*) begin
		main_if_else85_cmp86 = ($signed(main_if_end54_rem56_reg) == 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else85_167)) begin
		main_if_else85_cmp86_reg <= main_if_else85_cmp86;
	end
end
always @(*) begin
		main_if_else85_xor2_i7 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_else85_rem89 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_else85_rem89_reg = main_for_end28_rem33_reg;
end
always @(*) begin
		main_if_then87_arrayidx90 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then87_17 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then87_add91 = (main_if_then87_17 + $signed({{26{main_if_else85_rem89_reg[5]}},main_if_else85_rem89_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then87_202)) begin
		main_if_then87_add91_reg <= main_if_then87_add91;
	end
end
always @(*) begin
		main_if_then87_xor2_i6 = (main_if_end54_add57_reg ^ 32'd1);
end
always @(*) begin
	main_if_then87_rem94 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then87_arrayidx95 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then87_18 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then87_202)) begin
		main_if_then87_18_reg <= main_if_then87_18;
	end
end
always @(*) begin
		main_if_then87_add96 = (main_if_then87_18_reg + $signed({{26{main_if_then87_rem94[5]}},main_if_then87_rem94}));
end
always @(*) begin
		main_if_then87_add97 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		main_if_then87_add97_reg <= main_if_then87_add97;
	end
end
always @(*) begin
		main_if_else98_arrayidx101 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else98_19 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else98_add102 = (main_if_else98_19 + $signed({{26{main_if_else85_rem89_reg[5]}},main_if_else85_rem89_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else98_235)) begin
		main_if_else98_add102_reg <= main_if_else98_add102;
	end
end
always @(*) begin
		main_if_else98_xor2_i4 = (main_if_end54_add57_reg ^ 32'd1);
end
always @(*) begin
	main_if_else98_rem105 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_else98_arrayidx106 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else98_20 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else98_235)) begin
		main_if_else98_20_reg <= main_if_else98_20;
	end
end
always @(*) begin
		main_if_else98_add107 = (main_if_else98_20_reg + $signed({{26{main_if_else98_rem105[5]}},main_if_else98_rem105}));
end
always @(*) begin
		main_if_else98_add108 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		main_if_else98_add108_reg <= main_if_else98_add108;
	end
end
always @(*) begin
		main_if_then114_arrayidx115 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then114_21 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then114_add116 = (main_if_then114_21 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then114_arrayidx117 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then114_22 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then114_add118 = (main_if_then114_22 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_NodeBlock16_Pivot17 = ($signed($signed({{26{main_if_end54_rem56_reg[5]}},main_if_end54_rem56_reg})) < $signed({28'd0,main_NodeBlock16_Pivot17_op1_temp}));
end
always @(*) begin
		main_LeafBlock14_SwitchLeaf15 = ($signed(main_if_end54_rem56_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock12_SwitchLeaf13 = ($signed(main_if_end54_rem56_reg) == 32'd1);
end
always @(*) begin
		main_if_then121_arrayidx122 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then121_23 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then121_add123 = (main_if_then121_23 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then121_arrayidx124 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then121_24 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then121_add125 = (main_if_then121_24 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_then128_arrayidx129 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then128_25 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then128_add130 = (main_if_then128_25 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then128_arrayidx131 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then128_26 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then128_add132 = (main_if_then128_26 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_else133_arrayidx134 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else133_27 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else133_add135 = (main_if_else133_27 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_else133_arrayidx136 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else133_28 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_else133_add137 = (main_if_else133_28 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then61_131) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0 = main_if_then61_add65_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then74_166) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0 = main_if_then74_add78_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then87_232) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0 = main_if_then87_add91_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else98_265) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0 = main_if_else98_add102_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then114_269) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0 = main_if_then114_add116;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then121_275) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0 = main_if_then121_add123;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then128_278) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0 = main_if_then128_add130;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else133_281) & (fsm_stall == 1'd0))) */ begin
		main_if_end141_xi_0 = main_if_else133_add135;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then61_131) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then74_166) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then87_232) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else98_265) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then114_269) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then121_275) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then128_278) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else133_281) & (fsm_stall == 1'd0))) begin
		main_if_end141_xi_0_reg <= main_if_end141_xi_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then61_131) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0 = main_if_then61_add70;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then74_166) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0 = main_if_then74_add83;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then87_232) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0 = main_if_then87_add96;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else98_265) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0 = main_if_else98_add107;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then114_269) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0 = main_if_then114_add118;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then121_275) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0 = main_if_then121_add125;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then128_278) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0 = main_if_then128_add132;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else133_281) & (fsm_stall == 1'd0))) */ begin
		main_if_end141_xj_0 = main_if_else133_add137;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then61_131) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then74_166) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then87_232) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else98_265) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then114_269) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then121_275) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then128_278) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else133_281) & (fsm_stall == 1'd0))) begin
		main_if_end141_xj_0_reg <= main_if_end141_xj_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then61_131) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1 = main_if_then61_add71_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then74_166) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1 = main_if_then74_add84_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then87_232) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1 = main_if_then87_add97_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else98_265) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1 = main_if_else98_add108_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then114_269) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1 = main_if_end54_add57_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then121_275) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1 = main_if_end54_add57_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then128_278) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1 = main_if_end54_add57_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else133_281) & (fsm_stall == 1'd0))) */ begin
		main_if_end141_seed_1 = main_if_end54_add57_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then61_131) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then74_166) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then87_232) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else98_265) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then114_269) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then121_275) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then128_278) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else133_281) & (fsm_stall == 1'd0))) begin
		main_if_end141_seed_1_reg <= main_if_end141_seed_1;
	end
end
always @(*) begin
		main_if_end141_bit_select9 = main_if_end141_xi_0_reg[26:0];
end
always @(*) begin
		main_if_end141_inc142 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end141_282)) begin
		main_if_end141_inc142_reg <= main_if_end141_inc142;
	end
end
always @(*) begin
		main_if_end141_sr_negate11 = (32'd0 - main_if_end141_xi_0_reg);
end
always @(*) begin
		main_if_end141_bit_select11 = main_if_end141_sr_negate11[29:0];
end
always @(*) begin
		main_if_end141_bit_concat12 = {main_if_end141_bit_select11[29:0], main_if_end141_bit_concat12_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end141_bit_concat10 = {main_if_end141_bit_select9[26:0], main_if_end141_bit_concat10_bit_select_operand_2[4:0]};
end
always @(*) begin
		main_if_end141_sr_add14 = (main_if_end141_bit_concat12 + main_if_end141_bit_concat10);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end141_282)) begin
		main_if_end141_sr_add14_reg <= main_if_end141_sr_add14;
	end
end
always @(*) begin
		main_if_end141_arrayidx143_sum = (main_if_end141_sr_add14_reg + main_if_end141_xj_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end141_283)) begin
		main_if_end141_arrayidx143_sum_reg <= main_if_end141_arrayidx143_sum;
	end
end
always @(*) begin
		main_if_end141_arrayidx144 = (1'd0 + (4 * main_if_end141_arrayidx143_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end141_284)) begin
		main_if_end141_arrayidx144_reg <= main_if_end141_arrayidx144;
	end
end
always @(*) begin
		main_if_end141_29 = main_entry_vla4470_out_a;
end
always @(*) begin
		main_if_end141_cmp145 = (main_if_end141_29 == $signed(-32'd1));
end
always @(*) begin
		main_if_end141_30 = (main_if_end141_xi_0_reg < 32'd28);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end141_282)) begin
		main_if_end141_30_reg <= main_if_end141_30;
	end
end
always @(*) begin
		main_if_end141_or_cond = (main_if_end141_cmp145 & main_if_end141_30_reg);
end
always @(*) begin
		main_if_end141_31 = (main_if_end141_xj_0_reg < 32'd28);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end141_282)) begin
		main_if_end141_31_reg <= main_if_end141_31;
	end
end
always @(*) begin
		main_if_end141_or_cond472 = (main_if_end141_or_cond & main_if_end141_31_reg);
end
always @(*) begin
		main_if_then153_arrayidx156 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_then153_arrayidx157 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_else158_cmp159 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else158_cmp159_op1_temp}));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then153_287) & (fsm_stall == 1'd0))) begin
		main_if_end163_pos_a_X_1 = main_if_end141_xi_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else158_288) & (fsm_stall == 1'd0)) & (main_if_else158_cmp159 == 1'd0))) */ begin
		main_if_end163_pos_a_X_1 = -32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then153_287) & (fsm_stall == 1'd0))) begin
		main_if_end163_pos_a_X_1_reg <= main_if_end163_pos_a_X_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else158_288) & (fsm_stall == 1'd0)) & (main_if_else158_cmp159 == 1'd0))) begin
		main_if_end163_pos_a_X_1_reg <= main_if_end163_pos_a_X_1;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then153_287) & (fsm_stall == 1'd0))) begin
		main_if_end163_pos_a_Y_1 = main_if_end141_xj_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else158_288) & (fsm_stall == 1'd0)) & (main_if_else158_cmp159 == 1'd0))) */ begin
		main_if_end163_pos_a_Y_1 = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then153_287) & (fsm_stall == 1'd0))) begin
		main_if_end163_pos_a_Y_1_reg <= main_if_end163_pos_a_Y_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else158_288) & (fsm_stall == 1'd0)) & (main_if_else158_cmp159 == 1'd0))) begin
		main_if_end163_pos_a_Y_1_reg <= main_if_end163_pos_a_Y_1;
	end
end
always @(*) begin
		main_if_end163_cmp164 = (main_if_end163_pos_a_X_1_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end163_473 = (main_if_end163_cmp164 ? 32'd2 : 32'd3);
end
always @(*) begin
		main_if_end163_inc142_1 = (main_if_end163_cmp164 ? main_if_end141_inc142_reg : 32'd0);
end
always @(*) begin
		main_sw_bb168_cmp169 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_then170_inc171 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(*) begin
		main_if_end172_sub_i1 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end172_xor2_i2 = (main_if_end172_sub_i1 ^ 32'd1);
end
always @(*) begin
	main_if_end172_rem174 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end172_rem174_reg = main_if_end54_rem56_reg;
end
always @(*) begin
		main_if_end172_add175 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end172_293)) begin
		main_if_end172_add175_reg <= main_if_end172_add175;
	end
end
always @(*) begin
		main_if_end172_Pivot26 = ($signed($signed({{26{main_if_end172_rem174[5]}},main_if_end172_rem174})) < $signed({29'd0,main_if_end172_Pivot26_op1_temp}));
end
always @(*) begin
		main_NodeBlock23_Pivot24 = ($signed($signed({{28{main_if_end172_rem174_reg[3]}},main_if_end172_rem174_reg})) < $signed({28'd0,main_NodeBlock23_Pivot24_op1_temp}));
end
always @(*) begin
		main_LeafBlock21_SwitchLeaf22 = ($signed(main_if_end172_rem174_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock19_SwitchLeaf20 = ($signed(main_if_end172_rem174_reg) == 32'd0);
end
always @(*) begin
		main_if_then177_arrayidx178 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then177_arrayidx180 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then184_arrayidx185 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then184_arrayidx187 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then191_arrayidx192 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then191_arrayidx194 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else196_arrayidx197 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else196_arrayidx199 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then177_329) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn_in = main_if_then177_arrayidx178;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then184_330) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn_in = main_if_then184_arrayidx185;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then191_331) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn_in = main_if_then191_arrayidx192;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else196_332) & (fsm_stall == 1'd0))) */ begin
		main_if_end203_pn_in = main_if_else196_arrayidx197;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then177_329) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn_in_reg <= main_if_end203_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then184_330) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn_in_reg <= main_if_end203_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then191_331) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn_in_reg <= main_if_end203_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else196_332) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn_in_reg <= main_if_end203_pn_in;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then177_329) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn471_in = main_if_then177_arrayidx180;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then184_330) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn471_in = main_if_then184_arrayidx187;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then191_331) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn471_in = main_if_then191_arrayidx194;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else196_332) & (fsm_stall == 1'd0))) */ begin
		main_if_end203_pn471_in = main_if_else196_arrayidx199;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then177_329) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn471_in_reg <= main_if_end203_pn471_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then184_330) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn471_in_reg <= main_if_end203_pn471_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then191_331) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn471_in_reg <= main_if_end203_pn471_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else196_332) & (fsm_stall == 1'd0))) begin
		main_if_end203_pn471_in_reg <= main_if_end203_pn471_in;
	end
end
always @(*) begin
		main_if_end203_pn471 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_end203_pn = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_end203_xj_1 = (main_if_end203_pn471 + main_NodeBlock9_pos_a_Y_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_335)) begin
		main_if_end203_xj_1_reg <= main_if_end203_xj_1;
	end
end
always @(*) begin
		main_if_end203_xi_1 = (main_if_end203_pn + main_NodeBlock9_pos_a_X_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_335)) begin
		main_if_end203_xi_1_reg <= main_if_end203_xi_1;
	end
end
always @(*) begin
		main_if_end203_bit_select5 = main_if_end203_xi_1[26:0];
end
always @(*) begin
		main_if_end203_sr_negate15 = (32'd0 - main_if_end203_xi_1);
end
always @(*) begin
		main_if_end203_bit_select7 = main_if_end203_sr_negate15[29:0];
end
always @(*) begin
		main_if_end203_bit_concat8 = {main_if_end203_bit_select7[29:0], main_if_end203_bit_concat8_bit_select_operand_2[1:0]};
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_335)) begin
		main_if_end203_bit_concat8_reg <= main_if_end203_bit_concat8;
	end
end
always @(*) begin
		main_if_end203_bit_concat6 = {main_if_end203_bit_select5[26:0], main_if_end203_bit_concat6_bit_select_operand_2[4:0]};
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_335)) begin
		main_if_end203_bit_concat6_reg <= main_if_end203_bit_concat6;
	end
end
always @(*) begin
		main_if_end203_sr_add18 = (main_if_end203_bit_concat8_reg + main_if_end203_bit_concat6_reg);
end
always @(*) begin
		main_if_end203_arrayidx205_sum = (main_if_end203_sr_add18 + main_if_end203_xj_1_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_336)) begin
		main_if_end203_arrayidx205_sum_reg <= main_if_end203_arrayidx205_sum;
	end
end
always @(*) begin
		main_if_end203_arrayidx206 = (1'd0 + (4 * main_if_end203_arrayidx205_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_337)) begin
		main_if_end203_arrayidx206_reg <= main_if_end203_arrayidx206;
	end
end
always @(*) begin
		main_if_end203_32 = main_entry_vla4470_out_a;
end
always @(*) begin
		main_if_end203_cmp207 = (main_if_end203_32 == $signed(-32'd1));
end
always @(*) begin
		main_if_end203_33 = (main_if_end203_xi_1 < 32'd28);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_335)) begin
		main_if_end203_33_reg <= main_if_end203_33;
	end
end
always @(*) begin
		main_if_end203_or_cond474 = (main_if_end203_cmp207 & main_if_end203_33_reg);
end
always @(*) begin
		main_if_end203_34 = (main_if_end203_xj_1 < 32'd28);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end203_335)) begin
		main_if_end203_34_reg <= main_if_end203_34;
	end
end
always @(*) begin
		main_if_end203_or_cond475 = (main_if_end203_or_cond474 & main_if_end203_34_reg);
end
always @(*) begin
		main_if_then216_arrayidx219 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then216_arrayidx220 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then216_inc221 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_if_then216_inc221_reg <= main_if_then216_inc221;
	end
end
always @(*) begin
		main_if_else222_inc204 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(*) begin
		main_if_else222_cmp223 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else222_cmp223_op1_temp}));
end
always @(*) begin
		main_sw_bb233_cmp234 = (main_NodeBlock9_i_0_reg == 32'd1568);
end
always @(*) begin
		main_if_end236_arrayidx237 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end236_35 = main_entry_vla466_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_345)) begin
		main_if_end236_35_reg <= main_if_end236_35;
	end
end
always @(*) begin
		main_if_end236_arrayidx238 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end236_36 = main_entry_vla1467_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_345)) begin
		main_if_end236_36_reg <= main_if_end236_36;
	end
end
always @(*) begin
		main_if_end236_arrayidx239 = (1'd0 + (4 * main_if_end236_35));
end
always @(*) begin
		main_if_end236_37 = main_entry_vla2468_out_a;
end
always @(*) begin
		main_if_end236_arrayidx240 = (1'd0 + (4 * main_if_end236_36));
end
always @(*) begin
		main_if_end236_38 = main_entry_vla2468_out_b;
end
always @(*) begin
		main_if_end236_sub = (main_if_end236_37 - main_if_end236_38);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_346)) begin
		main_if_end236_sub_reg <= main_if_end236_sub;
	end
end
always @(*) begin
		main_if_end236_bit_select4 = main_if_end236_sub[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_346)) begin
		main_if_end236_bit_select4_reg <= main_if_end236_bit_select4;
	end
end
always @(*) begin
		main_if_end236_mul = (32'd0 - main_if_end236_sub);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_346)) begin
		main_if_end236_mul_reg <= main_if_end236_mul;
	end
end
always @(*) begin
		main_if_end236_mul_sub = (main_if_end236_bit_select4_reg ? main_if_end236_mul_reg : main_if_end236_sub_reg);
end
always @(*) begin
		main_if_end236_arrayidx244 = (1'd0 + (4 * main_if_end236_35));
end
always @(*) begin
		main_if_end236_39 = main_entry_vla3469_out_a;
end
always @(*) begin
		main_if_end236_arrayidx245 = (1'd0 + (4 * main_if_end236_36));
end
always @(*) begin
		main_if_end236_40 = main_entry_vla3469_out_b;
end
always @(*) begin
		main_if_end236_sub246 = (main_if_end236_39 - main_if_end236_40);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_346)) begin
		main_if_end236_sub246_reg <= main_if_end236_sub246;
	end
end
always @(*) begin
		main_if_end236_bit_select3 = main_if_end236_sub246[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_346)) begin
		main_if_end236_bit_select3_reg <= main_if_end236_bit_select3;
	end
end
always @(*) begin
		main_if_end236_mul249 = (32'd0 - main_if_end236_sub246);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_346)) begin
		main_if_end236_mul249_reg <= main_if_end236_mul249;
	end
end
always @(*) begin
		main_if_end236_diff_pos_y_0 = (main_if_end236_bit_select3_reg ? main_if_end236_mul249_reg : main_if_end236_sub246_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_347)) begin
		main_if_end236_diff_pos_y_0_reg <= main_if_end236_diff_pos_y_0;
	end
end
always @(*) begin
		main_if_end236_add251 = (main_NodeBlock9_sum_mesh_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_344)) begin
		main_if_end236_add251_reg <= main_if_end236_add251;
	end
end
always @(*) begin
		main_if_end236_newEarly_add253 = (main_if_end236_mul_sub + main_if_end236_diff_pos_y_0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_347)) begin
		main_if_end236_newEarly_add253_reg <= main_if_end236_newEarly_add253;
	end
end
always @(*) begin
		main_if_end236_newCurOp_add253 = (main_if_end236_add251_reg + main_if_end236_newEarly_add253_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_348)) begin
		main_if_end236_newCurOp_add253_reg <= main_if_end236_newCurOp_add253;
	end
end
always @(*) begin
	main_if_end236_div = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end236_rem254 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end236_div256 = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end236_rem257 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_end236_add258 = (main_NodeBlock9_sum_1hop_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_344)) begin
		main_if_end236_add258_reg <= main_if_end236_add258;
	end
end
always @(*) begin
		main_if_end236_newEarly_add259 = ($signed({{1{main_if_end236_div[30]}},main_if_end236_div}) + $signed({{26{main_if_end236_rem254[5]}},main_if_end236_rem254}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_379)) begin
		main_if_end236_newEarly_add259_reg <= main_if_end236_newEarly_add259;
	end
end
always @(*) begin
		main_if_end236_newEarly_sub260 = (main_if_end236_add258_reg + $signed({{1{main_if_end236_div256[30]}},main_if_end236_div256}));
end
always @(*) begin
		main_if_end236_newEarly_add261 = (main_if_end236_newEarly_add259_reg + $signed({{26{main_if_end236_rem257[5]}},main_if_end236_rem257}));
end
always @(*) begin
		main_if_end236_newCurOp_add261 = (main_if_end236_newEarly_sub260 + main_if_end236_newEarly_add261);
end
always @(*) begin
		main_if_end236_inc262 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_344)) begin
		main_if_end236_inc262_reg <= main_if_end236_inc262;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond266_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond266_preheader_i_4482 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_end274_385) & (fsm_stall == 1'd0)) & (main_for_end274_exitcond7 == 1'd0))) */ begin
		main_for_cond266_preheader_i_4482 = main_for_end274_44;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond266_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond266_preheader_i_4482_reg <= main_for_cond266_preheader_i_4482;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_end274_385) & (fsm_stall == 1'd0)) & (main_for_end274_exitcond7 == 1'd0))) begin
		main_for_cond266_preheader_i_4482_reg <= main_for_cond266_preheader_i_4482;
	end
end
always @(*) begin
		main_for_cond266_preheader_bit_select = main_for_cond266_preheader_i_4482_reg_width_extended[26:0];
end
always @(*) begin
		main_for_cond266_preheader_sr_negate12 = (32'd0 - {1'd0,main_for_cond266_preheader_i_4482_reg});
end
always @(*) begin
		main_for_cond266_preheader_bit_select1 = main_for_cond266_preheader_sr_negate12_width_extended[29:0];
end
always @(*) begin
		main_for_cond266_preheader_bit_concat2 = {main_for_cond266_preheader_bit_select1[29:0], main_for_cond266_preheader_bit_concat2_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_cond266_preheader_bit_concat = {main_for_cond266_preheader_bit_select[26:0], main_for_cond266_preheader_bit_concat_bit_select_operand_2[4:0]};
end
always @(*) begin
		main_for_cond266_preheader_sr_add16 = (main_for_cond266_preheader_bit_concat2 + main_for_cond266_preheader_bit_concat);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond266_preheader_381)) begin
		main_for_cond266_preheader_sr_add16_reg <= main_for_cond266_preheader_sr_add16;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond266_preheader_381) & (fsm_stall == 1'd0))) begin
		main_for_body268_j_2481 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body268_384) & (fsm_stall == 1'd0)) & (main_for_body268_exitcond6_reg == 1'd0))) */ begin
		main_for_body268_j_2481 = main_for_body268_43_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond266_preheader_381) & (fsm_stall == 1'd0))) begin
		main_for_body268_j_2481_reg <= main_for_body268_j_2481;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body268_384) & (fsm_stall == 1'd0)) & (main_for_body268_exitcond6_reg == 1'd0))) begin
		main_for_body268_j_2481_reg <= main_for_body268_j_2481;
	end
end
always @(*) begin
		main_for_body268_41 = (main_for_cond266_preheader_sr_add16_reg + main_for_body268_j_2481_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body268_382)) begin
		main_for_body268_41_reg <= main_for_body268_41;
	end
end
always @(*) begin
		main_for_body268_arrayidx270 = (1'd0 + (4 * main_for_body268_41_reg));
end
always @(*) begin
		main_for_body268_42 = main_entry_vla4470_out_a;
end
always @(*) begin
		main_for_body268_43 = (main_for_body268_j_2481_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body268_382)) begin
		main_for_body268_43_reg <= main_for_body268_43;
	end
end
always @(*) begin
		main_for_body268_exitcond6 = (main_for_body268_43 == 32'd28);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body268_382)) begin
		main_for_body268_exitcond6_reg <= main_for_body268_exitcond6;
	end
end
always @(*) begin
		main_for_end274_44 = ({1'd0,main_for_cond266_preheader_i_4482_reg} + 32'd1);
end
always @(*) begin
		main_for_end274_exitcond7 = (main_for_end274_44 == 32'd28);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then160_289) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then224_342) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_for_end278_386) & (fsm_stall == 1'd0))) */ begin
		main_cleanup_retval_0 = 32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then160_289) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then224_342) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end278_386) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
end
always @(*) begin
	main_entry_vla466_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_entry_vla466_address_a = (main_for_body_arrayidx >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_23)) begin
		main_entry_vla466_address_a = (main_entry_vla466_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_60)) begin
		main_entry_vla466_address_a = (main_if_end_arrayidx42 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_344)) begin
		main_entry_vla466_address_a = (main_if_end236_arrayidx237 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla466_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_entry_vla466_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla466_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_entry_vla466_in_a = main_for_body_0_reg;
	end
end
always @(*) begin
	main_entry_vla1467_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_entry_vla1467_address_a = (main_for_body_arrayidx6 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_60)) begin
		main_entry_vla1467_address_a = (main_if_end_arrayidx43 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_344)) begin
		main_entry_vla1467_address_a = (main_if_end236_arrayidx238 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1467_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_entry_vla1467_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1467_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body_12)) begin
		main_entry_vla1467_in_a = main_for_body_add;
	end
end
always @(*) begin
	main_entry_vla2468_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_entry_vla2468_address_a = (main_for_body23_arrayidx24 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_55)) begin
		main_entry_vla2468_address_a = (main_for_end28_arrayidx30_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_61)) begin
		main_entry_vla2468_address_a = (main_if_end_arrayidx44 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_345)) begin
		main_entry_vla2468_address_a = (main_if_end236_arrayidx239 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2468_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_entry_vla2468_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_55)) begin
		main_entry_vla2468_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2468_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_entry_vla2468_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_55)) begin
		main_entry_vla2468_in_a = {{26{main_for_end28_rem[5]}},main_for_end28_rem};
	end
end
always @(*) begin
	main_entry_vla2468_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_61)) begin
		main_entry_vla2468_address_b = (main_if_end_arrayidx46 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla2468_address_b = (main_if_then153_arrayidx156 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla2468_address_b = (main_if_then216_arrayidx219 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_345)) begin
		main_entry_vla2468_address_b = (main_if_end236_arrayidx240 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2468_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla2468_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla2468_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2468_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla2468_in_b = main_if_end141_xi_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla2468_in_b = main_if_end203_xi_1_reg;
	end
end
always @(*) begin
	main_entry_vla3469_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_entry_vla3469_address_a = (main_for_body23_arrayidx25 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_56)) begin
		main_entry_vla3469_address_a = (main_for_end28_arrayidx34_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_61)) begin
		main_entry_vla3469_address_a = (main_if_end_arrayidx45 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_345)) begin
		main_entry_vla3469_address_a = (main_if_end236_arrayidx244 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3469_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_entry_vla3469_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_56)) begin
		main_entry_vla3469_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3469_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body23_21)) begin
		main_entry_vla3469_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_56)) begin
		main_entry_vla3469_in_a = {{26{main_for_end28_rem33[5]}},main_for_end28_rem33};
	end
end
always @(*) begin
	main_entry_vla3469_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_61)) begin
		main_entry_vla3469_address_b = (main_if_end_arrayidx47 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla3469_address_b = (main_if_then153_arrayidx157 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla3469_address_b = (main_if_then216_arrayidx220 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end236_345)) begin
		main_entry_vla3469_address_b = (main_if_end236_arrayidx245 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3469_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla3469_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla3469_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3469_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla3469_in_b = main_if_end141_xj_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla3469_in_b = main_if_end203_xj_1_reg;
	end
end
always @(*) begin
	main_entry_vla4470_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body12_17)) begin
		main_entry_vla4470_address_a = (main_for_body12_arrayidx14 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_57)) begin
		main_entry_vla4470_address_a = (main_for_end28_arrayidx39 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end141_284)) begin
		main_entry_vla4470_address_a = (main_if_end141_arrayidx144 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla4470_address_a = (main_if_end141_arrayidx144_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end203_337)) begin
		main_entry_vla4470_address_a = (main_if_end203_arrayidx206 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla4470_address_a = (main_if_end203_arrayidx206_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_body268_383)) begin
		main_entry_vla4470_address_a = (main_for_body268_arrayidx270 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4470_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body12_17)) begin
		main_entry_vla4470_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_57)) begin
		main_entry_vla4470_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla4470_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla4470_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4470_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body12_17)) begin
		main_entry_vla4470_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end28_57)) begin
		main_entry_vla4470_in_a = main_for_end28_6_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then153_286)) begin
		main_entry_vla4470_in_a = main_NodeBlock9_a_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then216_339)) begin
		main_entry_vla4470_in_a = main_NodeBlock9_b_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_23)) begin
		main_signed_modulus_32_0_op0 = main_for_end28_xor2_i;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end28_24)) begin
		main_signed_modulus_32_0_op0 = main_for_end28_xor2_i16_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end54_64)) begin
		main_signed_modulus_32_0_op0 = main_if_end54_xor2_i15;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		main_signed_modulus_32_0_op0 = main_if_then61_xor2_i13;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then61_99)) begin
		main_signed_modulus_32_0_op0 = main_if_then61_xor2_i12_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		main_signed_modulus_32_0_op0 = main_if_then74_xor2_i10;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then74_134)) begin
		main_signed_modulus_32_0_op0 = main_if_then74_xor2_i9_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else85_167)) begin
		main_signed_modulus_32_0_op0 = main_if_else85_xor2_i7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		main_signed_modulus_32_0_op0 = main_if_then87_xor2_i6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		main_signed_modulus_32_0_op0 = main_if_else98_xor2_i4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end172_293)) begin
		main_signed_modulus_32_0_op0 = main_if_end172_xor2_i2;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end236_347)) begin
		main_signed_modulus_32_0_op0 = main_if_end236_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end236_348)) */ begin
		main_signed_modulus_32_0_op0 = main_if_end236_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end28_23)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end28_24)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end54_64)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then61_99)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then74_134)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else85_167)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		main_signed_modulus_32_0_op1 = 32'd28;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end172_293)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end236_347)) begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end236_348)) */ begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_modulus_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_modulus_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_modulus_32_0_inst_clken = divide_main_if_end54_rem56_en;
end
always @(*) begin
	main_signed_modulus_32_0_inst_numer = main_signed_modulus_32_0_op0;
end
always @(*) begin
	main_signed_modulus_32_0_inst_denom = main_signed_modulus_32_0_op1;
end
always @(*) begin
	divide_main_if_end54_rem56_temp_out = main_signed_modulus_32_0_inst_remain;
end
always @(*) begin
	divide_main_if_end54_rem56_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end54_rem56_out = divide_main_if_end54_rem56_temp_out;
end
always @(*) begin
	main_signed_modulus_32_0 = divide_main_if_end54_rem56_out;
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_347)) begin
		main_signed_divide_32_0_op0 = main_if_end236_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end236_348)) */ begin
		main_signed_divide_32_0_op0 = main_if_end236_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end236_347)) begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end236_348)) */ begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_divide_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_divide_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_divide_32_0_inst_clken = divide_main_if_end236_div_en;
end
always @(*) begin
	main_signed_divide_32_0_inst_numer = main_signed_divide_32_0_op0;
end
always @(*) begin
	main_signed_divide_32_0_inst_denom = main_signed_divide_32_0_op1;
end
always @(*) begin
	divide_main_if_end236_div_temp_out = main_signed_divide_32_0_inst_quotient;
end
always @(*) begin
	divide_main_if_end236_div_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end236_div_out = divide_main_if_end236_div_temp_out;
end
always @(*) begin
	main_signed_divide_32_0 = divide_main_if_end236_div_out;
end
assign main_NodeBlock9_Pivot10_op1_temp = 32'd3;
assign main_NodeBlock7_Pivot8_op1_temp = 32'd4;
assign main_NodeBlock5_Pivot6_op1_temp = 32'd5;
assign main_NodeBlock1_Pivot2_op1_temp = 32'd1;
assign main_NodeBlock_Pivot_op1_temp = 32'd2;
assign main_for_cond10_preheader_bit_concat20_bit_select_operand_2 = 2'd0;
assign main_for_cond10_preheader_bit_concat18_bit_select_operand_2 = 5'd0;
always @(*) begin
	main_for_end28_rem_width_extended = {{21{main_for_end28_rem[5]}},main_for_end28_rem};
end
always @(*) begin
	main_for_end28_sr_negate7_width_extended = {{23{main_for_end28_sr_negate7[6]}},main_for_end28_sr_negate7};
end
assign main_for_end28_bit_concat16_bit_select_operand_2 = 2'd0;
assign main_for_end28_bit_concat14_bit_select_operand_2 = 5'd0;
assign main_NodeBlock16_Pivot17_op1_temp = 32'd2;
assign main_if_end141_bit_concat12_bit_select_operand_2 = 2'd0;
assign main_if_end141_bit_concat10_bit_select_operand_2 = 5'd0;
assign main_if_else158_cmp159_op1_temp = 32'd60;
assign main_if_end172_Pivot26_op1_temp = 32'd1;
assign main_NodeBlock23_Pivot24_op1_temp = 32'd2;
assign main_if_end203_bit_concat8_bit_select_operand_2 = 2'd0;
assign main_if_end203_bit_concat6_bit_select_operand_2 = 5'd0;
assign main_if_else222_cmp223_op1_temp = 32'd60;
always @(*) begin
	main_for_cond266_preheader_i_4482_reg_width_extended = {22'd0,main_for_cond266_preheader_i_4482_reg};
end
always @(*) begin
	main_for_cond266_preheader_sr_negate12_width_extended = {{24{main_for_cond266_preheader_sr_negate12[5]}},main_for_cond266_preheader_sr_negate12};
end
assign main_for_cond266_preheader_bit_concat2_bit_select_operand_2 = 2'd0;
assign main_for_cond266_preheader_bit_concat_bit_select_operand_2 = 5'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		finish <= 1'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_387)) begin
		finish <= (fsm_stall == 1'd0);
	end
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		return_val <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_387)) begin
		return_val <= main_cleanup_retval_0_reg;
	end
end
assign memory_controller_1_write_enable_a = 1'd0;
assign memory_controller_1_in_a = 64'd0;
always @(*) begin
	memory_controller_1_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then114_267)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then121_273)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then128_276)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_279)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end203_333)) begin
		memory_controller_1_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_1_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		memory_controller_1_address_a = main_if_then61_arrayidx64;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		memory_controller_1_address_a = main_if_then74_arrayidx77;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		memory_controller_1_address_a = main_if_then87_arrayidx90;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		memory_controller_1_address_a = main_if_else98_arrayidx101;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then114_267)) begin
		memory_controller_1_address_a = main_if_then114_arrayidx115;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then121_273)) begin
		memory_controller_1_address_a = main_if_then121_arrayidx122;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then128_276)) begin
		memory_controller_1_address_a = main_if_then128_arrayidx129;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_279)) begin
		memory_controller_1_address_a = main_if_else133_arrayidx134;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end203_333)) begin
		memory_controller_1_address_a = main_if_end203_pn_in_reg;
	end
end
always @(*) begin
	memory_controller_1_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then114_267)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then121_273)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then128_276)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_279)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end203_333)) begin
		memory_controller_1_size_a = 2'd2;
	end
end
assign memory_controller_1_write_enable_b = 1'd0;
assign memory_controller_1_in_b = 64'd0;
assign memory_controller_1_enable_b = 1'd0;
assign memory_controller_1_address_b = 0;
assign memory_controller_1_size_b = 2'd0;
assign memory_controller_0_write_enable_a = 1'd0;
assign memory_controller_0_in_a = 64'd0;
always @(*) begin
	memory_controller_0_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then114_267)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then121_273)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then128_276)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_279)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end203_333)) begin
		memory_controller_0_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_0_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		memory_controller_0_address_a = main_if_then61_arrayidx69;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		memory_controller_0_address_a = main_if_then74_arrayidx82;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		memory_controller_0_address_a = main_if_then87_arrayidx95;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		memory_controller_0_address_a = main_if_else98_arrayidx106;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then114_267)) begin
		memory_controller_0_address_a = main_if_then114_arrayidx117;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then121_273)) begin
		memory_controller_0_address_a = main_if_then121_arrayidx124;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then128_276)) begin
		memory_controller_0_address_a = main_if_then128_arrayidx131;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_279)) begin
		memory_controller_0_address_a = main_if_else133_arrayidx136;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end203_333)) begin
		memory_controller_0_address_a = main_if_end203_pn471_in_reg;
	end
end
always @(*) begin
	memory_controller_0_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then61_98)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then74_133)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then87_200)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else98_233)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then114_267)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then121_273)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then128_276)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else133_279)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end203_333)) begin
		memory_controller_0_size_a = 2'd2;
	end
end
assign memory_controller_0_write_enable_b = 1'd0;
assign memory_controller_0_in_b = 64'd0;
assign memory_controller_0_enable_b = 1'd0;
assign memory_controller_0_address_b = 0;
assign memory_controller_0_size_b = 2'd0;

endmodule
module ram_dual_port
(
	clk,
	clken,
	address_a,
	address_b,
	wren_a,
	data_a,
	byteena_a,
	wren_b,
	data_b,
	byteena_b,
	q_b,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
wire [(width_b-1):0] q_b_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
input  wren_b;
input [(width_b-1):0] data_b;
input [width_be_b-1:0] byteena_b;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
	.address_b (address_b),
    .addressstall_b (1'd0),
    .rden_b (clken),
    .q_b (q_b),
    .wren_a (wren_a),
    .data_a (data_a),
    .wren_b (wren_b),
    .data_b (data_b),
    .byteena_b (byteena_b),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.width_byteena_b = width_be_b,
    altsyncram_component.operation_mode = "BIDIR_DUAL_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_b = "BYPASS",
    altsyncram_component.clock_enable_output_b = "BYPASS",
    altsyncram_component.outdata_aclr_b = "NONE",
    altsyncram_component.outdata_reg_b = output_registered,
    altsyncram_component.numwords_b = numwords_b,
    altsyncram_component.widthad_b = widthad_b,
    altsyncram_component.width_b = width_b,
    altsyncram_component.address_reg_b = "CLOCK0",
    altsyncram_component.byteena_reg_b = "CLOCK0",
    altsyncram_component.indata_reg_b = "CLOCK0",
    altsyncram_component.wrcontrol_wraddress_reg_b = "CLOCK0",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module ram_single_port_intel
(
	clk,
	clken,
	address_a,
	wren_a,
	data_a,
	byteena_a,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
    .wren_a (wren_a),
    .data_a (data_a),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.operation_mode = "SINGLE_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module rom_dual_port
(
	clk,
	clken,
	address_a,
	q_a,
	address_b,
	q_b
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = {`MEM_INIT_DIR, "UNUSED.mif"};
parameter  latency = 1;

input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
reg [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
reg [(width_b-1):0] q_b_wire;

(* ram_init_file = init_file *) reg [width_a-1:0] ram [numwords_a-1:0];

integer i;
/* synthesis translate_off */
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == {`MEM_INIT_DIR, "UNUSED.mif"})
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

localparam input_latency = ((latency - 1) >> 1);
localparam output_latency = (latency - 1) - input_latency;
integer j;

reg [(widthad_a-1):0] address_a_reg[input_latency:0];
reg [(widthad_b-1):0] address_b_reg[input_latency:0];

always @(*)
begin
  address_a_reg[0] = address_a;
  address_b_reg[0] = address_b;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < input_latency; j=j+1)
   begin
       address_a_reg[j+1] <= address_a_reg[j];
       address_b_reg[j+1] <= address_b_reg[j];
   end
end

always @ (posedge clk)
if (clken)
begin
    q_a_wire <= ram[address_a_reg[input_latency]];
end

always @ (posedge clk)
if (clken)
begin
    q_b_wire <= ram[address_b_reg[input_latency]];
end


reg [(width_a-1):0] q_a_reg[output_latency:0];

always @(*)
begin
   q_a_reg[0] <= q_a_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
   end
end

assign q_a = q_a_reg[output_latency];
reg [(width_b-1):0] q_b_reg[output_latency:0];

always @(*)
begin
   q_b_reg[0] <= q_b_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_b = q_b_reg[output_latency];

endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);




initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;
@(negedge clk);
start <= 0;
end

always@(posedge clk) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end


endmodule
